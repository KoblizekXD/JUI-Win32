// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _PRINTER_NOTIFY_OPTIONS_TYPE {
 *     WORD Type;
 *     WORD Reserved0;
 *     DWORD Reserved1;
 *     DWORD Reserved2;
 *     DWORD Count;
 *     PWORD pFields;
 * };
 * }
 */
public class _PRINTER_NOTIFY_OPTIONS_TYPE {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_SHORT$LAYOUT.withName("Type"),
        Constants$root.C_SHORT$LAYOUT.withName("Reserved0"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved1"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved2"),
        Constants$root.C_LONG$LAYOUT.withName("Count"),
        Constants$root.C_POINTER$LAYOUT.withName("pFields")
    ).withName("_PRINTER_NOTIFY_OPTIONS_TYPE");
    public static MemoryLayout $LAYOUT() {
        return _PRINTER_NOTIFY_OPTIONS_TYPE.$struct$LAYOUT;
    }
    static final VarHandle Type$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Type"));
    public static VarHandle Type$VH() {
        return _PRINTER_NOTIFY_OPTIONS_TYPE.Type$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD Type;
     * }
     */
    public static short Type$get(MemorySegment seg) {
        return (short)_PRINTER_NOTIFY_OPTIONS_TYPE.Type$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD Type;
     * }
     */
    public static void Type$set(MemorySegment seg, short x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Type$VH.set(seg, x);
    }
    public static short Type$get(MemorySegment seg, long index) {
        return (short)_PRINTER_NOTIFY_OPTIONS_TYPE.Type$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Type$set(MemorySegment seg, long index, short x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Type$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved0"));
    public static VarHandle Reserved0$VH() {
        return _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved0$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD Reserved0;
     * }
     */
    public static short Reserved0$get(MemorySegment seg) {
        return (short)_PRINTER_NOTIFY_OPTIONS_TYPE.Reserved0$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD Reserved0;
     * }
     */
    public static void Reserved0$set(MemorySegment seg, short x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved0$VH.set(seg, x);
    }
    public static short Reserved0$get(MemorySegment seg, long index) {
        return (short)_PRINTER_NOTIFY_OPTIONS_TYPE.Reserved0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved0$set(MemorySegment seg, long index, short x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved1"));
    public static VarHandle Reserved1$VH() {
        return _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved1$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Reserved1;
     * }
     */
    public static int Reserved1$get(MemorySegment seg) {
        return (int)_PRINTER_NOTIFY_OPTIONS_TYPE.Reserved1$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Reserved1;
     * }
     */
    public static void Reserved1$set(MemorySegment seg, int x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved1$VH.set(seg, x);
    }
    public static int Reserved1$get(MemorySegment seg, long index) {
        return (int)_PRINTER_NOTIFY_OPTIONS_TYPE.Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, int x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved2"));
    public static VarHandle Reserved2$VH() {
        return _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved2$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Reserved2;
     * }
     */
    public static int Reserved2$get(MemorySegment seg) {
        return (int)_PRINTER_NOTIFY_OPTIONS_TYPE.Reserved2$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Reserved2;
     * }
     */
    public static void Reserved2$set(MemorySegment seg, int x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved2$VH.set(seg, x);
    }
    public static int Reserved2$get(MemorySegment seg, long index) {
        return (int)_PRINTER_NOTIFY_OPTIONS_TYPE.Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved2$set(MemorySegment seg, long index, int x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Count$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Count"));
    public static VarHandle Count$VH() {
        return _PRINTER_NOTIFY_OPTIONS_TYPE.Count$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Count;
     * }
     */
    public static int Count$get(MemorySegment seg) {
        return (int)_PRINTER_NOTIFY_OPTIONS_TYPE.Count$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Count;
     * }
     */
    public static void Count$set(MemorySegment seg, int x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Count$VH.set(seg, x);
    }
    public static int Count$get(MemorySegment seg, long index) {
        return (int)_PRINTER_NOTIFY_OPTIONS_TYPE.Count$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Count$set(MemorySegment seg, long index, int x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.Count$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pFields$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pFields"));
    public static VarHandle pFields$VH() {
        return _PRINTER_NOTIFY_OPTIONS_TYPE.pFields$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PWORD pFields;
     * }
     */
    public static MemorySegment pFields$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_PRINTER_NOTIFY_OPTIONS_TYPE.pFields$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PWORD pFields;
     * }
     */
    public static void pFields$set(MemorySegment seg, MemorySegment x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.pFields$VH.set(seg, x);
    }
    public static MemorySegment pFields$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_PRINTER_NOTIFY_OPTIONS_TYPE.pFields$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pFields$set(MemorySegment seg, long index, MemorySegment x) {
        _PRINTER_NOTIFY_OPTIONS_TYPE.pFields$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


