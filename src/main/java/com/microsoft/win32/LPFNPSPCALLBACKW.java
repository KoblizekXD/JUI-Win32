// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * unsigned int (*LPFNPSPCALLBACKW)(struct HWND__* hwnd,unsigned int uMsg,struct _PROPSHEETPAGEW* ppsp);
 * }
 */
public interface LPFNPSPCALLBACKW {

    int apply(java.lang.foreign.MemorySegment hwnd, int uMsg, java.lang.foreign.MemorySegment ppsp);
    static MemorySegment allocate(LPFNPSPCALLBACKW fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$873.LPFNPSPCALLBACKW_UP$MH, fi, constants$873.LPFNPSPCALLBACKW$FUNC, scope);
    }
    static LPFNPSPCALLBACKW ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _hwnd, int _uMsg, java.lang.foreign.MemorySegment _ppsp) -> {
            try {
                return (int)constants$873.LPFNPSPCALLBACKW_DOWN$MH.invokeExact(symbol, _hwnd, _uMsg, _ppsp);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


