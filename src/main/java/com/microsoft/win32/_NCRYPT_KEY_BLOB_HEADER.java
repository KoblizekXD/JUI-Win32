// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _NCRYPT_KEY_BLOB_HEADER {
 *     ULONG cbSize;
 *     ULONG dwMagic;
 *     ULONG cbAlgName;
 *     ULONG cbKeyData;
 * };
 * }
 */
public class _NCRYPT_KEY_BLOB_HEADER {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("dwMagic"),
        Constants$root.C_LONG$LAYOUT.withName("cbAlgName"),
        Constants$root.C_LONG$LAYOUT.withName("cbKeyData")
    ).withName("_NCRYPT_KEY_BLOB_HEADER");
    public static MemoryLayout $LAYOUT() {
        return _NCRYPT_KEY_BLOB_HEADER.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _NCRYPT_KEY_BLOB_HEADER.cbSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.cbSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        _NCRYPT_KEY_BLOB_HEADER.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _NCRYPT_KEY_BLOB_HEADER.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwMagic$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwMagic"));
    public static VarHandle dwMagic$VH() {
        return _NCRYPT_KEY_BLOB_HEADER.dwMagic$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG dwMagic;
     * }
     */
    public static int dwMagic$get(MemorySegment seg) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.dwMagic$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG dwMagic;
     * }
     */
    public static void dwMagic$set(MemorySegment seg, int x) {
        _NCRYPT_KEY_BLOB_HEADER.dwMagic$VH.set(seg, x);
    }
    public static int dwMagic$get(MemorySegment seg, long index) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.dwMagic$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMagic$set(MemorySegment seg, long index, int x) {
        _NCRYPT_KEY_BLOB_HEADER.dwMagic$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbAlgName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbAlgName"));
    public static VarHandle cbAlgName$VH() {
        return _NCRYPT_KEY_BLOB_HEADER.cbAlgName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cbAlgName;
     * }
     */
    public static int cbAlgName$get(MemorySegment seg) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.cbAlgName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cbAlgName;
     * }
     */
    public static void cbAlgName$set(MemorySegment seg, int x) {
        _NCRYPT_KEY_BLOB_HEADER.cbAlgName$VH.set(seg, x);
    }
    public static int cbAlgName$get(MemorySegment seg, long index) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.cbAlgName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbAlgName$set(MemorySegment seg, long index, int x) {
        _NCRYPT_KEY_BLOB_HEADER.cbAlgName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbKeyData$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbKeyData"));
    public static VarHandle cbKeyData$VH() {
        return _NCRYPT_KEY_BLOB_HEADER.cbKeyData$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cbKeyData;
     * }
     */
    public static int cbKeyData$get(MemorySegment seg) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.cbKeyData$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cbKeyData;
     * }
     */
    public static void cbKeyData$set(MemorySegment seg, int x) {
        _NCRYPT_KEY_BLOB_HEADER.cbKeyData$VH.set(seg, x);
    }
    public static int cbKeyData$get(MemorySegment seg, long index) {
        return (int)_NCRYPT_KEY_BLOB_HEADER.cbKeyData$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbKeyData$set(MemorySegment seg, long index, int x) {
        _NCRYPT_KEY_BLOB_HEADER.cbKeyData$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


