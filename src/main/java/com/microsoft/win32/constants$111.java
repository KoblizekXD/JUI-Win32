// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$111 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$111() {}
    static final FunctionDescriptor PROC_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle PROC_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$111.PROC_DOWN$FUNC
    );
    static final FunctionDescriptor LPOVERLAPPED_COMPLETION_ROUTINE$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor LPOVERLAPPED_COMPLETION_ROUTINE_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPOVERLAPPED_COMPLETION_ROUTINE_UP$MH = RuntimeHelper.upcallHandle(LPOVERLAPPED_COMPLETION_ROUTINE.class, "apply", constants$111.LPOVERLAPPED_COMPLETION_ROUTINE_UP$FUNC);
    static final FunctionDescriptor LPOVERLAPPED_COMPLETION_ROUTINE_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPOVERLAPPED_COMPLETION_ROUTINE_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$111.LPOVERLAPPED_COMPLETION_ROUTINE_DOWN$FUNC
    );
    static final FunctionDescriptor PTHREAD_START_ROUTINE$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PTHREAD_START_ROUTINE_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTHREAD_START_ROUTINE_UP$MH = RuntimeHelper.upcallHandle(PTHREAD_START_ROUTINE.class, "apply", constants$111.PTHREAD_START_ROUTINE_UP$FUNC);
    static final FunctionDescriptor PTHREAD_START_ROUTINE_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTHREAD_START_ROUTINE_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$111.PTHREAD_START_ROUTINE_DOWN$FUNC
    );
    static final FunctionDescriptor LPTHREAD_START_ROUTINE$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor LPTHREAD_START_ROUTINE_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPTHREAD_START_ROUTINE_UP$MH = RuntimeHelper.upcallHandle(LPTHREAD_START_ROUTINE.class, "apply", constants$111.LPTHREAD_START_ROUTINE_UP$FUNC);
}


