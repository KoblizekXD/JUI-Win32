// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _APC_CALLBACK_DATA {
 *     ULONG_PTR Parameter;
 *     PCONTEXT ContextRecord;
 *     ULONG_PTR Reserved0;
 *     ULONG_PTR Reserved1;
 * };
 * }
 */
public class _APC_CALLBACK_DATA {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("Parameter"),
        Constants$root.C_POINTER$LAYOUT.withName("ContextRecord"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Reserved0"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("Reserved1")
    ).withName("_APC_CALLBACK_DATA");
    public static MemoryLayout $LAYOUT() {
        return _APC_CALLBACK_DATA.$struct$LAYOUT;
    }
    static final VarHandle Parameter$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Parameter"));
    public static VarHandle Parameter$VH() {
        return _APC_CALLBACK_DATA.Parameter$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR Parameter;
     * }
     */
    public static long Parameter$get(MemorySegment seg) {
        return (long)_APC_CALLBACK_DATA.Parameter$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR Parameter;
     * }
     */
    public static void Parameter$set(MemorySegment seg, long x) {
        _APC_CALLBACK_DATA.Parameter$VH.set(seg, x);
    }
    public static long Parameter$get(MemorySegment seg, long index) {
        return (long)_APC_CALLBACK_DATA.Parameter$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Parameter$set(MemorySegment seg, long index, long x) {
        _APC_CALLBACK_DATA.Parameter$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ContextRecord$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ContextRecord"));
    public static VarHandle ContextRecord$VH() {
        return _APC_CALLBACK_DATA.ContextRecord$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCONTEXT ContextRecord;
     * }
     */
    public static MemorySegment ContextRecord$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_APC_CALLBACK_DATA.ContextRecord$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCONTEXT ContextRecord;
     * }
     */
    public static void ContextRecord$set(MemorySegment seg, MemorySegment x) {
        _APC_CALLBACK_DATA.ContextRecord$VH.set(seg, x);
    }
    public static MemorySegment ContextRecord$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_APC_CALLBACK_DATA.ContextRecord$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ContextRecord$set(MemorySegment seg, long index, MemorySegment x) {
        _APC_CALLBACK_DATA.ContextRecord$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved0$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved0"));
    public static VarHandle Reserved0$VH() {
        return _APC_CALLBACK_DATA.Reserved0$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR Reserved0;
     * }
     */
    public static long Reserved0$get(MemorySegment seg) {
        return (long)_APC_CALLBACK_DATA.Reserved0$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR Reserved0;
     * }
     */
    public static void Reserved0$set(MemorySegment seg, long x) {
        _APC_CALLBACK_DATA.Reserved0$VH.set(seg, x);
    }
    public static long Reserved0$get(MemorySegment seg, long index) {
        return (long)_APC_CALLBACK_DATA.Reserved0$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved0$set(MemorySegment seg, long index, long x) {
        _APC_CALLBACK_DATA.Reserved0$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved1"));
    public static VarHandle Reserved1$VH() {
        return _APC_CALLBACK_DATA.Reserved1$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG_PTR Reserved1;
     * }
     */
    public static long Reserved1$get(MemorySegment seg) {
        return (long)_APC_CALLBACK_DATA.Reserved1$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG_PTR Reserved1;
     * }
     */
    public static void Reserved1$set(MemorySegment seg, long x) {
        _APC_CALLBACK_DATA.Reserved1$VH.set(seg, x);
    }
    public static long Reserved1$get(MemorySegment seg, long index) {
        return (long)_APC_CALLBACK_DATA.Reserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved1$set(MemorySegment seg, long index, long x) {
        _APC_CALLBACK_DATA.Reserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


