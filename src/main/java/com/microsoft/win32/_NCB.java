// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _NCB {
 *     UCHAR ncb_command;
 *     UCHAR ncb_retcode;
 *     UCHAR ncb_lsn;
 *     UCHAR ncb_num;
 *     PUCHAR ncb_buffer;
 *     WORD ncb_length;
 *     UCHAR ncb_callname[16];
 *     UCHAR ncb_name[16];
 *     UCHAR ncb_rto;
 *     UCHAR ncb_sto;
 *     void (*ncb_post)(struct _NCB*);
 *     UCHAR ncb_lana_num;
 *     UCHAR ncb_cmd_cplt;
 *     UCHAR ncb_reserve[18];
 *     HANDLE ncb_event;
 * };
 * }
 */
public class _NCB {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_CHAR$LAYOUT.withName("ncb_command"),
        Constants$root.C_CHAR$LAYOUT.withName("ncb_retcode"),
        Constants$root.C_CHAR$LAYOUT.withName("ncb_lsn"),
        Constants$root.C_CHAR$LAYOUT.withName("ncb_num"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("ncb_buffer"),
        Constants$root.C_SHORT$LAYOUT.withName("ncb_length"),
        MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("ncb_callname"),
        MemoryLayout.sequenceLayout(16, Constants$root.C_CHAR$LAYOUT).withName("ncb_name"),
        Constants$root.C_CHAR$LAYOUT.withName("ncb_rto"),
        Constants$root.C_CHAR$LAYOUT.withName("ncb_sto"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("ncb_post"),
        Constants$root.C_CHAR$LAYOUT.withName("ncb_lana_num"),
        Constants$root.C_CHAR$LAYOUT.withName("ncb_cmd_cplt"),
        MemoryLayout.sequenceLayout(18, Constants$root.C_CHAR$LAYOUT).withName("ncb_reserve"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("ncb_event")
    ).withName("_NCB");
    public static MemoryLayout $LAYOUT() {
        return _NCB.$struct$LAYOUT;
    }
    static final VarHandle ncb_command$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_command"));
    public static VarHandle ncb_command$VH() {
        return _NCB.ncb_command$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_command;
     * }
     */
    public static byte ncb_command$get(MemorySegment seg) {
        return (byte)_NCB.ncb_command$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_command;
     * }
     */
    public static void ncb_command$set(MemorySegment seg, byte x) {
        _NCB.ncb_command$VH.set(seg, x);
    }
    public static byte ncb_command$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_command$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_command$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_command$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ncb_retcode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_retcode"));
    public static VarHandle ncb_retcode$VH() {
        return _NCB.ncb_retcode$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_retcode;
     * }
     */
    public static byte ncb_retcode$get(MemorySegment seg) {
        return (byte)_NCB.ncb_retcode$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_retcode;
     * }
     */
    public static void ncb_retcode$set(MemorySegment seg, byte x) {
        _NCB.ncb_retcode$VH.set(seg, x);
    }
    public static byte ncb_retcode$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_retcode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_retcode$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_retcode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ncb_lsn$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_lsn"));
    public static VarHandle ncb_lsn$VH() {
        return _NCB.ncb_lsn$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_lsn;
     * }
     */
    public static byte ncb_lsn$get(MemorySegment seg) {
        return (byte)_NCB.ncb_lsn$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_lsn;
     * }
     */
    public static void ncb_lsn$set(MemorySegment seg, byte x) {
        _NCB.ncb_lsn$VH.set(seg, x);
    }
    public static byte ncb_lsn$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_lsn$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_lsn$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_lsn$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ncb_num$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_num"));
    public static VarHandle ncb_num$VH() {
        return _NCB.ncb_num$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_num;
     * }
     */
    public static byte ncb_num$get(MemorySegment seg) {
        return (byte)_NCB.ncb_num$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_num;
     * }
     */
    public static void ncb_num$set(MemorySegment seg, byte x) {
        _NCB.ncb_num$VH.set(seg, x);
    }
    public static byte ncb_num$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_num$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_num$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_num$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ncb_buffer$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_buffer"));
    public static VarHandle ncb_buffer$VH() {
        return _NCB.ncb_buffer$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PUCHAR ncb_buffer;
     * }
     */
    public static MemorySegment ncb_buffer$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_NCB.ncb_buffer$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PUCHAR ncb_buffer;
     * }
     */
    public static void ncb_buffer$set(MemorySegment seg, MemorySegment x) {
        _NCB.ncb_buffer$VH.set(seg, x);
    }
    public static MemorySegment ncb_buffer$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_NCB.ncb_buffer$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_buffer$set(MemorySegment seg, long index, MemorySegment x) {
        _NCB.ncb_buffer$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ncb_length$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_length"));
    public static VarHandle ncb_length$VH() {
        return _NCB.ncb_length$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD ncb_length;
     * }
     */
    public static short ncb_length$get(MemorySegment seg) {
        return (short)_NCB.ncb_length$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD ncb_length;
     * }
     */
    public static void ncb_length$set(MemorySegment seg, short x) {
        _NCB.ncb_length$VH.set(seg, x);
    }
    public static short ncb_length$get(MemorySegment seg, long index) {
        return (short)_NCB.ncb_length$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_length$set(MemorySegment seg, long index, short x) {
        _NCB.ncb_length$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ncb_callname$slice(MemorySegment seg) {
        return seg.asSlice(18, 16);
    }
    public static MemorySegment ncb_name$slice(MemorySegment seg) {
        return seg.asSlice(34, 16);
    }
    static final VarHandle ncb_rto$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_rto"));
    public static VarHandle ncb_rto$VH() {
        return _NCB.ncb_rto$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_rto;
     * }
     */
    public static byte ncb_rto$get(MemorySegment seg) {
        return (byte)_NCB.ncb_rto$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_rto;
     * }
     */
    public static void ncb_rto$set(MemorySegment seg, byte x) {
        _NCB.ncb_rto$VH.set(seg, x);
    }
    public static byte ncb_rto$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_rto$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_rto$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_rto$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ncb_sto$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_sto"));
    public static VarHandle ncb_sto$VH() {
        return _NCB.ncb_sto$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_sto;
     * }
     */
    public static byte ncb_sto$get(MemorySegment seg) {
        return (byte)_NCB.ncb_sto$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_sto;
     * }
     */
    public static void ncb_sto$set(MemorySegment seg, byte x) {
        _NCB.ncb_sto$VH.set(seg, x);
    }
    public static byte ncb_sto$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_sto$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_sto$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_sto$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final FunctionDescriptor ncb_post$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor ncb_post_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ncb_post_UP$MH = RuntimeHelper.upcallHandle(ncb_post.class, "apply", _NCB.ncb_post_UP$FUNC);
    static final FunctionDescriptor ncb_post_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ncb_post_DOWN$MH = RuntimeHelper.downcallHandle(
        _NCB.ncb_post_DOWN$FUNC
    );
    /**
     * {@snippet :
 * void (*ncb_post)(struct _NCB*);
     * }
     */
    public interface ncb_post {

        void apply(java.lang.foreign.MemorySegment pParameter);
        static MemorySegment allocate(ncb_post fi, SegmentScope scope) {
            return RuntimeHelper.upcallStub(_NCB.ncb_post_UP$MH, fi, _NCB.ncb_post$FUNC, scope);
        }
        static ncb_post ofAddress(MemorySegment addr, SegmentScope scope) {
            MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
            return (java.lang.foreign.MemorySegment _pParameter) -> {
                try {
                    _NCB.ncb_post_DOWN$MH.invokeExact(symbol, _pParameter);
                } catch (Throwable ex$) {
                    throw new AssertionError("should not reach here", ex$);
                }
            };
        }
    }

    static final VarHandle ncb_post$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_post"));
    public static VarHandle ncb_post$VH() {
        return _NCB.ncb_post$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void (*ncb_post)(struct _NCB*);
     * }
     */
    public static MemorySegment ncb_post$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_NCB.ncb_post$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void (*ncb_post)(struct _NCB*);
     * }
     */
    public static void ncb_post$set(MemorySegment seg, MemorySegment x) {
        _NCB.ncb_post$VH.set(seg, x);
    }
    public static MemorySegment ncb_post$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_NCB.ncb_post$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_post$set(MemorySegment seg, long index, MemorySegment x) {
        _NCB.ncb_post$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static ncb_post ncb_post(MemorySegment segment, SegmentScope scope) {
        return ncb_post.ofAddress(ncb_post$get(segment), scope);
    }
    static final VarHandle ncb_lana_num$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_lana_num"));
    public static VarHandle ncb_lana_num$VH() {
        return _NCB.ncb_lana_num$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_lana_num;
     * }
     */
    public static byte ncb_lana_num$get(MemorySegment seg) {
        return (byte)_NCB.ncb_lana_num$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_lana_num;
     * }
     */
    public static void ncb_lana_num$set(MemorySegment seg, byte x) {
        _NCB.ncb_lana_num$VH.set(seg, x);
    }
    public static byte ncb_lana_num$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_lana_num$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_lana_num$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_lana_num$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ncb_cmd_cplt$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_cmd_cplt"));
    public static VarHandle ncb_cmd_cplt$VH() {
        return _NCB.ncb_cmd_cplt$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UCHAR ncb_cmd_cplt;
     * }
     */
    public static byte ncb_cmd_cplt$get(MemorySegment seg) {
        return (byte)_NCB.ncb_cmd_cplt$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UCHAR ncb_cmd_cplt;
     * }
     */
    public static void ncb_cmd_cplt$set(MemorySegment seg, byte x) {
        _NCB.ncb_cmd_cplt$VH.set(seg, x);
    }
    public static byte ncb_cmd_cplt$get(MemorySegment seg, long index) {
        return (byte)_NCB.ncb_cmd_cplt$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_cmd_cplt$set(MemorySegment seg, long index, byte x) {
        _NCB.ncb_cmd_cplt$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ncb_reserve$slice(MemorySegment seg) {
        return seg.asSlice(66, 18);
    }
    static final VarHandle ncb_event$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ncb_event"));
    public static VarHandle ncb_event$VH() {
        return _NCB.ncb_event$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HANDLE ncb_event;
     * }
     */
    public static MemorySegment ncb_event$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_NCB.ncb_event$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HANDLE ncb_event;
     * }
     */
    public static void ncb_event$set(MemorySegment seg, MemorySegment x) {
        _NCB.ncb_event$VH.set(seg, x);
    }
    public static MemorySegment ncb_event$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_NCB.ncb_event$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ncb_event$set(MemorySegment seg, long index, MemorySegment x) {
        _NCB.ncb_event$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


