// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {
 *     DWORD cbSize;
 *     int iDeltaCrlIndicator;
 *     LPFILETIME pftCacheResync;
 *     LPFILETIME pLastSyncTime;
 *     LPFILETIME pMaxAgeTime;
 *     PCERT_REVOCATION_CHAIN_PARA pChainPara;
 *     PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
 * };
 * }
 */
public class _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("iDeltaCrlIndicator"),
        Constants$root.C_POINTER$LAYOUT.withName("pftCacheResync"),
        Constants$root.C_POINTER$LAYOUT.withName("pLastSyncTime"),
        Constants$root.C_POINTER$LAYOUT.withName("pMaxAgeTime"),
        Constants$root.C_POINTER$LAYOUT.withName("pChainPara"),
        Constants$root.C_POINTER$LAYOUT.withName("pDeltaCrlIndicator")
    ).withName("_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO");
    public static MemoryLayout $LAYOUT() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iDeltaCrlIndicator$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iDeltaCrlIndicator"));
    public static VarHandle iDeltaCrlIndicator$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int iDeltaCrlIndicator;
     * }
     */
    public static int iDeltaCrlIndicator$get(MemorySegment seg) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int iDeltaCrlIndicator;
     * }
     */
    public static void iDeltaCrlIndicator$set(MemorySegment seg, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.set(seg, x);
    }
    public static int iDeltaCrlIndicator$get(MemorySegment seg, long index) {
        return (int)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iDeltaCrlIndicator$set(MemorySegment seg, long index, int x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.iDeltaCrlIndicator$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pftCacheResync$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pftCacheResync"));
    public static VarHandle pftCacheResync$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPFILETIME pftCacheResync;
     * }
     */
    public static MemorySegment pftCacheResync$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPFILETIME pftCacheResync;
     * }
     */
    public static void pftCacheResync$set(MemorySegment seg, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.set(seg, x);
    }
    public static MemorySegment pftCacheResync$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pftCacheResync$set(MemorySegment seg, long index, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pftCacheResync$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pLastSyncTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pLastSyncTime"));
    public static VarHandle pLastSyncTime$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPFILETIME pLastSyncTime;
     * }
     */
    public static MemorySegment pLastSyncTime$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPFILETIME pLastSyncTime;
     * }
     */
    public static void pLastSyncTime$set(MemorySegment seg, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.set(seg, x);
    }
    public static MemorySegment pLastSyncTime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pLastSyncTime$set(MemorySegment seg, long index, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pLastSyncTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pMaxAgeTime$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pMaxAgeTime"));
    public static VarHandle pMaxAgeTime$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPFILETIME pMaxAgeTime;
     * }
     */
    public static MemorySegment pMaxAgeTime$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPFILETIME pMaxAgeTime;
     * }
     */
    public static void pMaxAgeTime$set(MemorySegment seg, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.set(seg, x);
    }
    public static MemorySegment pMaxAgeTime$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pMaxAgeTime$set(MemorySegment seg, long index, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pMaxAgeTime$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pChainPara$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pChainPara"));
    public static VarHandle pChainPara$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_REVOCATION_CHAIN_PARA pChainPara;
     * }
     */
    public static MemorySegment pChainPara$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_REVOCATION_CHAIN_PARA pChainPara;
     * }
     */
    public static void pChainPara$set(MemorySegment seg, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.set(seg, x);
    }
    public static MemorySegment pChainPara$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pChainPara$set(MemorySegment seg, long index, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pChainPara$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pDeltaCrlIndicator$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pDeltaCrlIndicator"));
    public static VarHandle pDeltaCrlIndicator$VH() {
        return _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
     * }
     */
    public static MemorySegment pDeltaCrlIndicator$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
     * }
     */
    public static void pDeltaCrlIndicator$set(MemorySegment seg, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.set(seg, x);
    }
    public static MemorySegment pDeltaCrlIndicator$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pDeltaCrlIndicator$set(MemorySegment seg, long index, MemorySegment x) {
        _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO.pDeltaCrlIndicator$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


