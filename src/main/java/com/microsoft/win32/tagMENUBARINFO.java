// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMENUBARINFO {
 *     DWORD cbSize;
 *     RECT rcBar;
 *     HMENU hMenu;
 *     HWND hwndMenu;
 *      *     BOOL fBarFocused;
 *     BOOL fFocused;
 *     BOOL fUnused;
 * };
 * }
 */
public class tagMENUBARINFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("left"),
            Constants$root.C_LONG$LAYOUT.withName("top"),
            Constants$root.C_LONG$LAYOUT.withName("right"),
            Constants$root.C_LONG$LAYOUT.withName("bottom")
        ).withName("rcBar"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("hMenu"),
        Constants$root.C_POINTER$LAYOUT.withName("hwndMenu"),
        MemoryLayout.paddingLayout(64)
    ).withName("tagMENUBARINFO");
    public static MemoryLayout $LAYOUT() {
        return tagMENUBARINFO.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return tagMENUBARINFO.cbSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)tagMENUBARINFO.cbSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        tagMENUBARINFO.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)tagMENUBARINFO.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        tagMENUBARINFO.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment rcBar$slice(MemorySegment seg) {
        return seg.asSlice(4, 16);
    }
    static final VarHandle hMenu$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hMenu"));
    public static VarHandle hMenu$VH() {
        return tagMENUBARINFO.hMenu$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HMENU hMenu;
     * }
     */
    public static MemorySegment hMenu$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagMENUBARINFO.hMenu$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HMENU hMenu;
     * }
     */
    public static void hMenu$set(MemorySegment seg, MemorySegment x) {
        tagMENUBARINFO.hMenu$VH.set(seg, x);
    }
    public static MemorySegment hMenu$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagMENUBARINFO.hMenu$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hMenu$set(MemorySegment seg, long index, MemorySegment x) {
        tagMENUBARINFO.hMenu$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hwndMenu$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hwndMenu"));
    public static VarHandle hwndMenu$VH() {
        return tagMENUBARINFO.hwndMenu$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwndMenu;
     * }
     */
    public static MemorySegment hwndMenu$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagMENUBARINFO.hwndMenu$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwndMenu;
     * }
     */
    public static void hwndMenu$set(MemorySegment seg, MemorySegment x) {
        tagMENUBARINFO.hwndMenu$VH.set(seg, x);
    }
    public static MemorySegment hwndMenu$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagMENUBARINFO.hwndMenu$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndMenu$set(MemorySegment seg, long index, MemorySegment x) {
        tagMENUBARINFO.hwndMenu$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


