// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class windows_h_18 extends windows_h_17 {

    public static MethodHandle GetFileVersionInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$564.GetFileVersionInfoExA$MH,"GetFileVersionInfoExA");
    }
    /**
     * {@snippet :
     * BOOL GetFileVersionInfoExA(DWORD dwFlags, LPCSTR lpwstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData);
     * }
     */
    public static int GetFileVersionInfoExA(int dwFlags, MemorySegment lpwstrFilename, int dwHandle, int dwLen, MemorySegment lpData) {
        var mh$ = GetFileVersionInfoExA$MH();
        try {
            return (int)mh$.invokeExact(dwFlags, lpwstrFilename, dwHandle, dwLen, lpData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$564.GetFileVersionInfoExW$MH,"GetFileVersionInfoExW");
    }
    /**
     * {@snippet :
     * BOOL GetFileVersionInfoExW(DWORD dwFlags, LPCWSTR lpwstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID lpData);
     * }
     */
    public static int GetFileVersionInfoExW(int dwFlags, MemorySegment lpwstrFilename, int dwHandle, int dwLen, MemorySegment lpData) {
        var mh$ = GetFileVersionInfoExW$MH();
        try {
            return (int)mh$.invokeExact(dwFlags, lpwstrFilename, dwHandle, dwLen, lpData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerLanguageNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$565.VerLanguageNameA$MH,"VerLanguageNameA");
    }
    /**
     * {@snippet :
     * DWORD VerLanguageNameA(DWORD wLang, LPSTR szLang, DWORD cchLang);
     * }
     */
    public static int VerLanguageNameA(int wLang, MemorySegment szLang, int cchLang) {
        var mh$ = VerLanguageNameA$MH();
        try {
            return (int)mh$.invokeExact(wLang, szLang, cchLang);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerLanguageNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$565.VerLanguageNameW$MH,"VerLanguageNameW");
    }
    /**
     * {@snippet :
     * DWORD VerLanguageNameW(DWORD wLang, LPWSTR szLang, DWORD cchLang);
     * }
     */
    public static int VerLanguageNameW(int wLang, MemorySegment szLang, int cchLang) {
        var mh$ = VerLanguageNameW$MH();
        try {
            return (int)mh$.invokeExact(wLang, szLang, cchLang);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerQueryValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$565.VerQueryValueA$MH,"VerQueryValueA");
    }
    /**
     * {@snippet :
     * BOOL VerQueryValueA(LPCVOID pBlock, LPCSTR lpSubBlock, LPVOID* lplpBuffer, PUINT puLen);
     * }
     */
    public static int VerQueryValueA(MemorySegment pBlock, MemorySegment lpSubBlock, MemorySegment lplpBuffer, MemorySegment puLen) {
        var mh$ = VerQueryValueA$MH();
        try {
            return (int)mh$.invokeExact(pBlock, lpSubBlock, lplpBuffer, puLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerQueryValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$565.VerQueryValueW$MH,"VerQueryValueW");
    }
    /**
     * {@snippet :
     * BOOL VerQueryValueW(LPCVOID pBlock, LPCWSTR lpSubBlock, LPVOID* lplpBuffer, PUINT puLen);
     * }
     */
    public static int VerQueryValueW(MemorySegment pBlock, MemorySegment lpSubBlock, MemorySegment lplpBuffer, MemorySegment puLen) {
        var mh$ = VerQueryValueW$MH();
        try {
            return (int)mh$.invokeExact(pBlock, lpSubBlock, lplpBuffer, puLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef long LSTATUS;
     * }
     */
    public static final OfInt LSTATUS = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long REGSAM;
     * }
     */
    public static final OfInt REGSAM = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef struct val_context* PVALCONTEXT;
     * }
     */
    public static final OfAddress PVALCONTEXT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct pvalueA* PPVALUEA;
     * }
     */
    public static final OfAddress PPVALUEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct pvalueW* PPVALUEW;
     * }
     */
    public static final OfAddress PPVALUEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct pvalueA* PPVALUE;
     * }
     */
    public static final OfAddress PPVALUE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct provider_info* PPROVIDER;
     * }
     */
    public static final OfAddress PPROVIDER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct value_entA* PVALENTA;
     * }
     */
    public static final OfAddress PVALENTA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct value_entW* PVALENTW;
     * }
     */
    public static final OfAddress PVALENTW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct value_entA* PVALENT;
     * }
     */
    public static final OfAddress PVALENT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RegCloseKey$MH() {
        return RuntimeHelper.requireNonNull(constants$566.RegCloseKey$MH,"RegCloseKey");
    }
    /**
     * {@snippet :
     * LSTATUS RegCloseKey(HKEY hKey);
     * }
     */
    public static int RegCloseKey(MemorySegment hKey) {
        var mh$ = RegCloseKey$MH();
        try {
            return (int)mh$.invokeExact(hKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOverridePredefKey$MH() {
        return RuntimeHelper.requireNonNull(constants$566.RegOverridePredefKey$MH,"RegOverridePredefKey");
    }
    /**
     * {@snippet :
     * LSTATUS RegOverridePredefKey(HKEY hKey, HKEY hNewHKey);
     * }
     */
    public static int RegOverridePredefKey(MemorySegment hKey, MemorySegment hNewHKey) {
        var mh$ = RegOverridePredefKey$MH();
        try {
            return (int)mh$.invokeExact(hKey, hNewHKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenUserClassesRoot$MH() {
        return RuntimeHelper.requireNonNull(constants$566.RegOpenUserClassesRoot$MH,"RegOpenUserClassesRoot");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenUserClassesRoot(HANDLE hToken, DWORD dwOptions, REGSAM samDesired, PHKEY phkResult);
     * }
     */
    public static int RegOpenUserClassesRoot(MemorySegment hToken, int dwOptions, int samDesired, MemorySegment phkResult) {
        var mh$ = RegOpenUserClassesRoot$MH();
        try {
            return (int)mh$.invokeExact(hToken, dwOptions, samDesired, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenCurrentUser$MH() {
        return RuntimeHelper.requireNonNull(constants$566.RegOpenCurrentUser$MH,"RegOpenCurrentUser");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenCurrentUser(REGSAM samDesired, PHKEY phkResult);
     * }
     */
    public static int RegOpenCurrentUser(int samDesired, MemorySegment phkResult) {
        var mh$ = RegOpenCurrentUser$MH();
        try {
            return (int)mh$.invokeExact(samDesired, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDisablePredefinedCache$MH() {
        return RuntimeHelper.requireNonNull(constants$567.RegDisablePredefinedCache$MH,"RegDisablePredefinedCache");
    }
    /**
     * {@snippet :
     * LSTATUS RegDisablePredefinedCache();
     * }
     */
    public static int RegDisablePredefinedCache() {
        var mh$ = RegDisablePredefinedCache$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDisablePredefinedCacheEx$MH() {
        return RuntimeHelper.requireNonNull(constants$567.RegDisablePredefinedCacheEx$MH,"RegDisablePredefinedCacheEx");
    }
    /**
     * {@snippet :
     * LSTATUS RegDisablePredefinedCacheEx();
     * }
     */
    public static int RegDisablePredefinedCacheEx() {
        var mh$ = RegDisablePredefinedCacheEx$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryA$MH() {
        return RuntimeHelper.requireNonNull(constants$567.RegConnectRegistryA$MH,"RegConnectRegistryA");
    }
    /**
     * {@snippet :
     * LSTATUS RegConnectRegistryA(LPCSTR lpMachineName, HKEY hKey, PHKEY phkResult);
     * }
     */
    public static int RegConnectRegistryA(MemorySegment lpMachineName, MemorySegment hKey, MemorySegment phkResult) {
        var mh$ = RegConnectRegistryA$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, hKey, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryW$MH() {
        return RuntimeHelper.requireNonNull(constants$567.RegConnectRegistryW$MH,"RegConnectRegistryW");
    }
    /**
     * {@snippet :
     * LSTATUS RegConnectRegistryW(LPCWSTR lpMachineName, HKEY hKey, PHKEY phkResult);
     * }
     */
    public static int RegConnectRegistryW(MemorySegment lpMachineName, MemorySegment hKey, MemorySegment phkResult) {
        var mh$ = RegConnectRegistryW$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, hKey, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryExA$MH() {
        return RuntimeHelper.requireNonNull(constants$567.RegConnectRegistryExA$MH,"RegConnectRegistryExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegConnectRegistryExA(LPCSTR lpMachineName, HKEY hKey, ULONG Flags, PHKEY phkResult);
     * }
     */
    public static int RegConnectRegistryExA(MemorySegment lpMachineName, MemorySegment hKey, int Flags, MemorySegment phkResult) {
        var mh$ = RegConnectRegistryExA$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, hKey, Flags, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryExW$MH() {
        return RuntimeHelper.requireNonNull(constants$567.RegConnectRegistryExW$MH,"RegConnectRegistryExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegConnectRegistryExW(LPCWSTR lpMachineName, HKEY hKey, ULONG Flags, PHKEY phkResult);
     * }
     */
    public static int RegConnectRegistryExW(MemorySegment lpMachineName, MemorySegment hKey, int Flags, MemorySegment phkResult) {
        var mh$ = RegConnectRegistryExW$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, hKey, Flags, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$568.RegCreateKeyA$MH,"RegCreateKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegCreateKeyA(HKEY hKey, LPCSTR lpSubKey, PHKEY phkResult);
     * }
     */
    public static int RegCreateKeyA(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment phkResult) {
        var mh$ = RegCreateKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$568.RegCreateKeyW$MH,"RegCreateKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegCreateKeyW(HKEY hKey, LPCWSTR lpSubKey, PHKEY phkResult);
     * }
     */
    public static int RegCreateKeyW(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment phkResult) {
        var mh$ = RegCreateKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$568.RegCreateKeyExA$MH,"RegCreateKeyExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegCreateKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD Reserved, LPSTR lpClass, DWORD dwOptions, REGSAM samDesired, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition);
     * }
     */
    public static int RegCreateKeyExA(MemorySegment hKey, MemorySegment lpSubKey, int Reserved, MemorySegment lpClass, int dwOptions, int samDesired, MemorySegment lpSecurityAttributes, MemorySegment phkResult, MemorySegment lpdwDisposition) {
        var mh$ = RegCreateKeyExA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$568.RegCreateKeyExW$MH,"RegCreateKeyExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegCreateKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR lpClass, DWORD dwOptions, REGSAM samDesired, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition);
     * }
     */
    public static int RegCreateKeyExW(MemorySegment hKey, MemorySegment lpSubKey, int Reserved, MemorySegment lpClass, int dwOptions, int samDesired, MemorySegment lpSecurityAttributes, MemorySegment phkResult, MemorySegment lpdwDisposition) {
        var mh$ = RegCreateKeyExW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyTransactedA$MH() {
        return RuntimeHelper.requireNonNull(constants$568.RegCreateKeyTransactedA$MH,"RegCreateKeyTransactedA");
    }
    /**
     * {@snippet :
     * LSTATUS RegCreateKeyTransactedA(HKEY hKey, LPCSTR lpSubKey, DWORD Reserved, LPSTR lpClass, DWORD dwOptions, REGSAM samDesired, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition, HANDLE hTransaction, PVOID pExtendedParemeter);
     * }
     */
    public static int RegCreateKeyTransactedA(MemorySegment hKey, MemorySegment lpSubKey, int Reserved, MemorySegment lpClass, int dwOptions, int samDesired, MemorySegment lpSecurityAttributes, MemorySegment phkResult, MemorySegment lpdwDisposition, MemorySegment hTransaction, MemorySegment pExtendedParemeter) {
        var mh$ = RegCreateKeyTransactedA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition, hTransaction, pExtendedParemeter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyTransactedW$MH() {
        return RuntimeHelper.requireNonNull(constants$568.RegCreateKeyTransactedW$MH,"RegCreateKeyTransactedW");
    }
    /**
     * {@snippet :
     * LSTATUS RegCreateKeyTransactedW(HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR lpClass, DWORD dwOptions, REGSAM samDesired, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition, HANDLE hTransaction, PVOID pExtendedParemeter);
     * }
     */
    public static int RegCreateKeyTransactedW(MemorySegment hKey, MemorySegment lpSubKey, int Reserved, MemorySegment lpClass, int dwOptions, int samDesired, MemorySegment lpSecurityAttributes, MemorySegment phkResult, MemorySegment lpdwDisposition, MemorySegment hTransaction, MemorySegment pExtendedParemeter) {
        var mh$ = RegCreateKeyTransactedW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition, hTransaction, pExtendedParemeter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegDeleteKeyA$MH,"RegDeleteKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyA(HKEY hKey, LPCSTR lpSubKey);
     * }
     */
    public static int RegDeleteKeyA(MemorySegment hKey, MemorySegment lpSubKey) {
        var mh$ = RegDeleteKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegDeleteKeyW$MH,"RegDeleteKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyW(HKEY hKey, LPCWSTR lpSubKey);
     * }
     */
    public static int RegDeleteKeyW(MemorySegment hKey, MemorySegment lpSubKey) {
        var mh$ = RegDeleteKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegDeleteKeyExA$MH,"RegDeleteKeyExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyExA(HKEY hKey, LPCSTR lpSubKey, REGSAM samDesired, DWORD Reserved);
     * }
     */
    public static int RegDeleteKeyExA(MemorySegment hKey, MemorySegment lpSubKey, int samDesired, int Reserved) {
        var mh$ = RegDeleteKeyExA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, samDesired, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegDeleteKeyExW$MH,"RegDeleteKeyExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyExW(HKEY hKey, LPCWSTR lpSubKey, REGSAM samDesired, DWORD Reserved);
     * }
     */
    public static int RegDeleteKeyExW(MemorySegment hKey, MemorySegment lpSubKey, int samDesired, int Reserved) {
        var mh$ = RegDeleteKeyExW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, samDesired, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyTransactedA$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegDeleteKeyTransactedA$MH,"RegDeleteKeyTransactedA");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyTransactedA(HKEY hKey, LPCSTR lpSubKey, REGSAM samDesired, DWORD Reserved, HANDLE hTransaction, PVOID pExtendedParameter);
     * }
     */
    public static int RegDeleteKeyTransactedA(MemorySegment hKey, MemorySegment lpSubKey, int samDesired, int Reserved, MemorySegment hTransaction, MemorySegment pExtendedParameter) {
        var mh$ = RegDeleteKeyTransactedA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, samDesired, Reserved, hTransaction, pExtendedParameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyTransactedW$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegDeleteKeyTransactedW$MH,"RegDeleteKeyTransactedW");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyTransactedW(HKEY hKey, LPCWSTR lpSubKey, REGSAM samDesired, DWORD Reserved, HANDLE hTransaction, PVOID pExtendedParameter);
     * }
     */
    public static int RegDeleteKeyTransactedW(MemorySegment hKey, MemorySegment lpSubKey, int samDesired, int Reserved, MemorySegment hTransaction, MemorySegment pExtendedParameter) {
        var mh$ = RegDeleteKeyTransactedW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, samDesired, Reserved, hTransaction, pExtendedParameter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDisableReflectionKey$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegDisableReflectionKey$MH,"RegDisableReflectionKey");
    }
    /**
     * {@snippet :
     * LONG RegDisableReflectionKey(HKEY hBase);
     * }
     */
    public static int RegDisableReflectionKey(MemorySegment hBase) {
        var mh$ = RegDisableReflectionKey$MH();
        try {
            return (int)mh$.invokeExact(hBase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnableReflectionKey$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegEnableReflectionKey$MH,"RegEnableReflectionKey");
    }
    /**
     * {@snippet :
     * LONG RegEnableReflectionKey(HKEY hBase);
     * }
     */
    public static int RegEnableReflectionKey(MemorySegment hBase) {
        var mh$ = RegEnableReflectionKey$MH();
        try {
            return (int)mh$.invokeExact(hBase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryReflectionKey$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegQueryReflectionKey$MH,"RegQueryReflectionKey");
    }
    /**
     * {@snippet :
     * LONG RegQueryReflectionKey(HKEY hBase, BOOL* bIsReflectionDisabled);
     * }
     */
    public static int RegQueryReflectionKey(MemorySegment hBase, MemorySegment bIsReflectionDisabled) {
        var mh$ = RegQueryReflectionKey$MH();
        try {
            return (int)mh$.invokeExact(hBase, bIsReflectionDisabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegDeleteValueA$MH,"RegDeleteValueA");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteValueA(HKEY hKey, LPCSTR lpValueName);
     * }
     */
    public static int RegDeleteValueA(MemorySegment hKey, MemorySegment lpValueName) {
        var mh$ = RegDeleteValueA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegDeleteValueW$MH,"RegDeleteValueW");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteValueW(HKEY hKey, LPCWSTR lpValueName);
     * }
     */
    public static int RegDeleteValueW(MemorySegment hKey, MemorySegment lpValueName) {
        var mh$ = RegDeleteValueW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegEnumKeyA$MH,"RegEnumKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegEnumKeyA(HKEY hKey, DWORD dwIndex, LPSTR lpName, DWORD cchName);
     * }
     */
    public static int RegEnumKeyA(MemorySegment hKey, int dwIndex, MemorySegment lpName, int cchName) {
        var mh$ = RegEnumKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, dwIndex, lpName, cchName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$571.RegEnumKeyW$MH,"RegEnumKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegEnumKeyW(HKEY hKey, DWORD dwIndex, LPWSTR lpName, DWORD cchName);
     * }
     */
    public static int RegEnumKeyW(MemorySegment hKey, int dwIndex, MemorySegment lpName, int cchName) {
        var mh$ = RegEnumKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, dwIndex, lpName, cchName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$571.RegEnumKeyExA$MH,"RegEnumKeyExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegEnumKeyExA(HKEY hKey, DWORD dwIndex, LPSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPSTR lpClass, LPDWORD lpcchClass, PFILETIME lpftLastWriteTime);
     * }
     */
    public static int RegEnumKeyExA(MemorySegment hKey, int dwIndex, MemorySegment lpName, MemorySegment lpcchName, MemorySegment lpReserved, MemorySegment lpClass, MemorySegment lpcchClass, MemorySegment lpftLastWriteTime) {
        var mh$ = RegEnumKeyExA$MH();
        try {
            return (int)mh$.invokeExact(hKey, dwIndex, lpName, lpcchName, lpReserved, lpClass, lpcchClass, lpftLastWriteTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$571.RegEnumKeyExW$MH,"RegEnumKeyExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegEnumKeyExW(HKEY hKey, DWORD dwIndex, LPWSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPWSTR lpClass, LPDWORD lpcchClass, PFILETIME lpftLastWriteTime);
     * }
     */
    public static int RegEnumKeyExW(MemorySegment hKey, int dwIndex, MemorySegment lpName, MemorySegment lpcchName, MemorySegment lpReserved, MemorySegment lpClass, MemorySegment lpcchClass, MemorySegment lpftLastWriteTime) {
        var mh$ = RegEnumKeyExW$MH();
        try {
            return (int)mh$.invokeExact(hKey, dwIndex, lpName, lpcchName, lpReserved, lpClass, lpcchClass, lpftLastWriteTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$571.RegEnumValueA$MH,"RegEnumValueA");
    }
    /**
     * {@snippet :
     * LSTATUS RegEnumValueA(HKEY hKey, DWORD dwIndex, LPSTR lpValueName, LPDWORD lpcchValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData);
     * }
     */
    public static int RegEnumValueA(MemorySegment hKey, int dwIndex, MemorySegment lpValueName, MemorySegment lpcchValueName, MemorySegment lpReserved, MemorySegment lpType, MemorySegment lpData, MemorySegment lpcbData) {
        var mh$ = RegEnumValueA$MH();
        try {
            return (int)mh$.invokeExact(hKey, dwIndex, lpValueName, lpcchValueName, lpReserved, lpType, lpData, lpcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$571.RegEnumValueW$MH,"RegEnumValueW");
    }
    /**
     * {@snippet :
     * LSTATUS RegEnumValueW(HKEY hKey, DWORD dwIndex, LPWSTR lpValueName, LPDWORD lpcchValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData);
     * }
     */
    public static int RegEnumValueW(MemorySegment hKey, int dwIndex, MemorySegment lpValueName, MemorySegment lpcchValueName, MemorySegment lpReserved, MemorySegment lpType, MemorySegment lpData, MemorySegment lpcbData) {
        var mh$ = RegEnumValueW$MH();
        try {
            return (int)mh$.invokeExact(hKey, dwIndex, lpValueName, lpcchValueName, lpReserved, lpType, lpData, lpcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegFlushKey$MH() {
        return RuntimeHelper.requireNonNull(constants$571.RegFlushKey$MH,"RegFlushKey");
    }
    /**
     * {@snippet :
     * LSTATUS RegFlushKey(HKEY hKey);
     * }
     */
    public static int RegFlushKey(MemorySegment hKey) {
        var mh$ = RegFlushKey$MH();
        try {
            return (int)mh$.invokeExact(hKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegGetKeySecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$572.RegGetKeySecurity$MH,"RegGetKeySecurity");
    }
    /**
     * {@snippet :
     * LSTATUS RegGetKeySecurity(HKEY hKey, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor, LPDWORD lpcbSecurityDescriptor);
     * }
     */
    public static int RegGetKeySecurity(MemorySegment hKey, int SecurityInformation, MemorySegment pSecurityDescriptor, MemorySegment lpcbSecurityDescriptor) {
        var mh$ = RegGetKeySecurity$MH();
        try {
            return (int)mh$.invokeExact(hKey, SecurityInformation, pSecurityDescriptor, lpcbSecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$572.RegLoadKeyA$MH,"RegLoadKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegLoadKeyA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpFile);
     * }
     */
    public static int RegLoadKeyA(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpFile) {
        var mh$ = RegLoadKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$572.RegLoadKeyW$MH,"RegLoadKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegLoadKeyW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpFile);
     * }
     */
    public static int RegLoadKeyW(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpFile) {
        var mh$ = RegLoadKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegNotifyChangeKeyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$572.RegNotifyChangeKeyValue$MH,"RegNotifyChangeKeyValue");
    }
    /**
     * {@snippet :
     * LSTATUS RegNotifyChangeKeyValue(HKEY hKey, BOOL bWatchSubtree, DWORD dwNotifyFilter, HANDLE hEvent, BOOL fAsynchronous);
     * }
     */
    public static int RegNotifyChangeKeyValue(MemorySegment hKey, int bWatchSubtree, int dwNotifyFilter, MemorySegment hEvent, int fAsynchronous) {
        var mh$ = RegNotifyChangeKeyValue$MH();
        try {
            return (int)mh$.invokeExact(hKey, bWatchSubtree, dwNotifyFilter, hEvent, fAsynchronous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$572.RegOpenKeyA$MH,"RegOpenKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenKeyA(HKEY hKey, LPCSTR lpSubKey, PHKEY phkResult);
     * }
     */
    public static int RegOpenKeyA(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment phkResult) {
        var mh$ = RegOpenKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$572.RegOpenKeyW$MH,"RegOpenKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenKeyW(HKEY hKey, LPCWSTR lpSubKey, PHKEY phkResult);
     * }
     */
    public static int RegOpenKeyW(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment phkResult) {
        var mh$ = RegOpenKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$573.RegOpenKeyExA$MH,"RegOpenKeyExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult);
     * }
     */
    public static int RegOpenKeyExA(MemorySegment hKey, MemorySegment lpSubKey, int ulOptions, int samDesired, MemorySegment phkResult) {
        var mh$ = RegOpenKeyExA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, ulOptions, samDesired, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$573.RegOpenKeyExW$MH,"RegOpenKeyExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult);
     * }
     */
    public static int RegOpenKeyExW(MemorySegment hKey, MemorySegment lpSubKey, int ulOptions, int samDesired, MemorySegment phkResult) {
        var mh$ = RegOpenKeyExW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, ulOptions, samDesired, phkResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyTransactedA$MH() {
        return RuntimeHelper.requireNonNull(constants$573.RegOpenKeyTransactedA$MH,"RegOpenKeyTransactedA");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenKeyTransactedA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult, HANDLE hTransaction, PVOID pExtendedParemeter);
     * }
     */
    public static int RegOpenKeyTransactedA(MemorySegment hKey, MemorySegment lpSubKey, int ulOptions, int samDesired, MemorySegment phkResult, MemorySegment hTransaction, MemorySegment pExtendedParemeter) {
        var mh$ = RegOpenKeyTransactedA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, ulOptions, samDesired, phkResult, hTransaction, pExtendedParemeter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyTransactedW$MH() {
        return RuntimeHelper.requireNonNull(constants$573.RegOpenKeyTransactedW$MH,"RegOpenKeyTransactedW");
    }
    /**
     * {@snippet :
     * LSTATUS RegOpenKeyTransactedW(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult, HANDLE hTransaction, PVOID pExtendedParemeter);
     * }
     */
    public static int RegOpenKeyTransactedW(MemorySegment hKey, MemorySegment lpSubKey, int ulOptions, int samDesired, MemorySegment phkResult, MemorySegment hTransaction, MemorySegment pExtendedParemeter) {
        var mh$ = RegOpenKeyTransactedW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, ulOptions, samDesired, phkResult, hTransaction, pExtendedParemeter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryInfoKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$573.RegQueryInfoKeyA$MH,"RegQueryInfoKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryInfoKeyA(HKEY hKey, LPSTR lpClass, LPDWORD lpcchClass, LPDWORD lpReserved, LPDWORD lpcSubKeys, LPDWORD lpcbMaxSubKeyLen, LPDWORD lpcbMaxClassLen, LPDWORD lpcValues, LPDWORD lpcbMaxValueNameLen, LPDWORD lpcbMaxValueLen, LPDWORD lpcbSecurityDescriptor, PFILETIME lpftLastWriteTime);
     * }
     */
    public static int RegQueryInfoKeyA(MemorySegment hKey, MemorySegment lpClass, MemorySegment lpcchClass, MemorySegment lpReserved, MemorySegment lpcSubKeys, MemorySegment lpcbMaxSubKeyLen, MemorySegment lpcbMaxClassLen, MemorySegment lpcValues, MemorySegment lpcbMaxValueNameLen, MemorySegment lpcbMaxValueLen, MemorySegment lpcbSecurityDescriptor, MemorySegment lpftLastWriteTime) {
        var mh$ = RegQueryInfoKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpClass, lpcchClass, lpReserved, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryInfoKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$573.RegQueryInfoKeyW$MH,"RegQueryInfoKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryInfoKeyW(HKEY hKey, LPWSTR lpClass, LPDWORD lpcchClass, LPDWORD lpReserved, LPDWORD lpcSubKeys, LPDWORD lpcbMaxSubKeyLen, LPDWORD lpcbMaxClassLen, LPDWORD lpcValues, LPDWORD lpcbMaxValueNameLen, LPDWORD lpcbMaxValueLen, LPDWORD lpcbSecurityDescriptor, PFILETIME lpftLastWriteTime);
     * }
     */
    public static int RegQueryInfoKeyW(MemorySegment hKey, MemorySegment lpClass, MemorySegment lpcchClass, MemorySegment lpReserved, MemorySegment lpcSubKeys, MemorySegment lpcbMaxSubKeyLen, MemorySegment lpcbMaxClassLen, MemorySegment lpcValues, MemorySegment lpcbMaxValueNameLen, MemorySegment lpcbMaxValueLen, MemorySegment lpcbSecurityDescriptor, MemorySegment lpftLastWriteTime) {
        var mh$ = RegQueryInfoKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpClass, lpcchClass, lpReserved, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$574.RegQueryValueA$MH,"RegQueryValueA");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryValueA(HKEY hKey, LPCSTR lpSubKey, LPSTR lpData, PLONG lpcbData);
     * }
     */
    public static int RegQueryValueA(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpData, MemorySegment lpcbData) {
        var mh$ = RegQueryValueA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpData, lpcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$574.RegQueryValueW$MH,"RegQueryValueW");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryValueW(HKEY hKey, LPCWSTR lpSubKey, LPWSTR lpData, PLONG lpcbData);
     * }
     */
    public static int RegQueryValueW(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpData, MemorySegment lpcbData) {
        var mh$ = RegQueryValueW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpData, lpcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryMultipleValuesA$MH() {
        return RuntimeHelper.requireNonNull(constants$574.RegQueryMultipleValuesA$MH,"RegQueryMultipleValuesA");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryMultipleValuesA(HKEY hKey, PVALENTA val_list, DWORD num_vals, LPSTR lpValueBuf, LPDWORD ldwTotsize);
     * }
     */
    public static int RegQueryMultipleValuesA(MemorySegment hKey, MemorySegment val_list, int num_vals, MemorySegment lpValueBuf, MemorySegment ldwTotsize) {
        var mh$ = RegQueryMultipleValuesA$MH();
        try {
            return (int)mh$.invokeExact(hKey, val_list, num_vals, lpValueBuf, ldwTotsize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryMultipleValuesW$MH() {
        return RuntimeHelper.requireNonNull(constants$574.RegQueryMultipleValuesW$MH,"RegQueryMultipleValuesW");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryMultipleValuesW(HKEY hKey, PVALENTW val_list, DWORD num_vals, LPWSTR lpValueBuf, LPDWORD ldwTotsize);
     * }
     */
    public static int RegQueryMultipleValuesW(MemorySegment hKey, MemorySegment val_list, int num_vals, MemorySegment lpValueBuf, MemorySegment ldwTotsize) {
        var mh$ = RegQueryMultipleValuesW$MH();
        try {
            return (int)mh$.invokeExact(hKey, val_list, num_vals, lpValueBuf, ldwTotsize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueExA$MH() {
        return RuntimeHelper.requireNonNull(constants$574.RegQueryValueExA$MH,"RegQueryValueExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryValueExA(HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData);
     * }
     */
    public static int RegQueryValueExA(MemorySegment hKey, MemorySegment lpValueName, MemorySegment lpReserved, MemorySegment lpType, MemorySegment lpData, MemorySegment lpcbData) {
        var mh$ = RegQueryValueExA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpValueName, lpReserved, lpType, lpData, lpcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueExW$MH() {
        return RuntimeHelper.requireNonNull(constants$574.RegQueryValueExW$MH,"RegQueryValueExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegQueryValueExW(HKEY hKey, LPCWSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData);
     * }
     */
    public static int RegQueryValueExW(MemorySegment hKey, MemorySegment lpValueName, MemorySegment lpReserved, MemorySegment lpType, MemorySegment lpData, MemorySegment lpcbData) {
        var mh$ = RegQueryValueExW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpValueName, lpReserved, lpType, lpData, lpcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegReplaceKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$575.RegReplaceKeyA$MH,"RegReplaceKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegReplaceKeyA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpNewFile, LPCSTR lpOldFile);
     * }
     */
    public static int RegReplaceKeyA(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpNewFile, MemorySegment lpOldFile) {
        var mh$ = RegReplaceKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpNewFile, lpOldFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegReplaceKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$575.RegReplaceKeyW$MH,"RegReplaceKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegReplaceKeyW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpNewFile, LPCWSTR lpOldFile);
     * }
     */
    public static int RegReplaceKeyW(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpNewFile, MemorySegment lpOldFile) {
        var mh$ = RegReplaceKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpNewFile, lpOldFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegRestoreKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$575.RegRestoreKeyA$MH,"RegRestoreKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegRestoreKeyA(HKEY hKey, LPCSTR lpFile, DWORD dwFlags);
     * }
     */
    public static int RegRestoreKeyA(MemorySegment hKey, MemorySegment lpFile, int dwFlags) {
        var mh$ = RegRestoreKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpFile, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegRestoreKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$575.RegRestoreKeyW$MH,"RegRestoreKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegRestoreKeyW(HKEY hKey, LPCWSTR lpFile, DWORD dwFlags);
     * }
     */
    public static int RegRestoreKeyW(MemorySegment hKey, MemorySegment lpFile, int dwFlags) {
        var mh$ = RegRestoreKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpFile, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegRenameKey$MH() {
        return RuntimeHelper.requireNonNull(constants$575.RegRenameKey$MH,"RegRenameKey");
    }
    /**
     * {@snippet :
     * LSTATUS RegRenameKey(HKEY hKey, LPCWSTR lpSubKeyName, LPCWSTR lpNewKeyName);
     * }
     */
    public static int RegRenameKey(MemorySegment hKey, MemorySegment lpSubKeyName, MemorySegment lpNewKeyName) {
        var mh$ = RegRenameKey$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKeyName, lpNewKeyName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$575.RegSaveKeyA$MH,"RegSaveKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegSaveKeyA(HKEY hKey, LPCSTR lpFile, const LPSECURITY_ATTRIBUTES lpSecurityAttributes);
     * }
     */
    public static int RegSaveKeyA(MemorySegment hKey, MemorySegment lpFile, MemorySegment lpSecurityAttributes) {
        var mh$ = RegSaveKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpFile, lpSecurityAttributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$576.RegSaveKeyW$MH,"RegSaveKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegSaveKeyW(HKEY hKey, LPCWSTR lpFile, const LPSECURITY_ATTRIBUTES lpSecurityAttributes);
     * }
     */
    public static int RegSaveKeyW(MemorySegment hKey, MemorySegment lpFile, MemorySegment lpSecurityAttributes) {
        var mh$ = RegSaveKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpFile, lpSecurityAttributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetKeySecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$576.RegSetKeySecurity$MH,"RegSetKeySecurity");
    }
    /**
     * {@snippet :
     * LSTATUS RegSetKeySecurity(HKEY hKey, SECURITY_INFORMATION SecurityInformation, PSECURITY_DESCRIPTOR pSecurityDescriptor);
     * }
     */
    public static int RegSetKeySecurity(MemorySegment hKey, int SecurityInformation, MemorySegment pSecurityDescriptor) {
        var mh$ = RegSetKeySecurity$MH();
        try {
            return (int)mh$.invokeExact(hKey, SecurityInformation, pSecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$576.RegSetValueA$MH,"RegSetValueA");
    }
    /**
     * {@snippet :
     * LSTATUS RegSetValueA(HKEY hKey, LPCSTR lpSubKey, DWORD dwType, LPCSTR lpData, DWORD cbData);
     * }
     */
    public static int RegSetValueA(MemorySegment hKey, MemorySegment lpSubKey, int dwType, MemorySegment lpData, int cbData) {
        var mh$ = RegSetValueA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, dwType, lpData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$576.RegSetValueW$MH,"RegSetValueW");
    }
    /**
     * {@snippet :
     * LSTATUS RegSetValueW(HKEY hKey, LPCWSTR lpSubKey, DWORD dwType, LPCWSTR lpData, DWORD cbData);
     * }
     */
    public static int RegSetValueW(MemorySegment hKey, MemorySegment lpSubKey, int dwType, MemorySegment lpData, int cbData) {
        var mh$ = RegSetValueW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, dwType, lpData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueExA$MH() {
        return RuntimeHelper.requireNonNull(constants$576.RegSetValueExA$MH,"RegSetValueExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegSetValueExA(HKEY hKey, LPCSTR lpValueName, DWORD Reserved, DWORD dwType, const BYTE* lpData, DWORD cbData);
     * }
     */
    public static int RegSetValueExA(MemorySegment hKey, MemorySegment lpValueName, int Reserved, int dwType, MemorySegment lpData, int cbData) {
        var mh$ = RegSetValueExA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpValueName, Reserved, dwType, lpData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueExW$MH() {
        return RuntimeHelper.requireNonNull(constants$576.RegSetValueExW$MH,"RegSetValueExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegSetValueExW(HKEY hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, const BYTE* lpData, DWORD cbData);
     * }
     */
    public static int RegSetValueExW(MemorySegment hKey, MemorySegment lpValueName, int Reserved, int dwType, MemorySegment lpData, int cbData) {
        var mh$ = RegSetValueExW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpValueName, Reserved, dwType, lpData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegUnLoadKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$577.RegUnLoadKeyA$MH,"RegUnLoadKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegUnLoadKeyA(HKEY hKey, LPCSTR lpSubKey);
     * }
     */
    public static int RegUnLoadKeyA(MemorySegment hKey, MemorySegment lpSubKey) {
        var mh$ = RegUnLoadKeyA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegUnLoadKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$577.RegUnLoadKeyW$MH,"RegUnLoadKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegUnLoadKeyW(HKEY hKey, LPCWSTR lpSubKey);
     * }
     */
    public static int RegUnLoadKeyW(MemorySegment hKey, MemorySegment lpSubKey) {
        var mh$ = RegUnLoadKeyW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$577.RegDeleteKeyValueA$MH,"RegDeleteKeyValueA");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyValueA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpValueName);
     * }
     */
    public static int RegDeleteKeyValueA(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpValueName) {
        var mh$ = RegDeleteKeyValueA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$577.RegDeleteKeyValueW$MH,"RegDeleteKeyValueW");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteKeyValueW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpValueName);
     * }
     */
    public static int RegDeleteKeyValueW(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpValueName) {
        var mh$ = RegDeleteKeyValueW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetKeyValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$577.RegSetKeyValueA$MH,"RegSetKeyValueA");
    }
    /**
     * {@snippet :
     * LSTATUS RegSetKeyValueA(HKEY hKey, LPCSTR lpSubKey, LPCSTR lpValueName, DWORD dwType, LPCVOID lpData, DWORD cbData);
     * }
     */
    public static int RegSetKeyValueA(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpValueName, int dwType, MemorySegment lpData, int cbData) {
        var mh$ = RegSetKeyValueA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpValueName, dwType, lpData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetKeyValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$577.RegSetKeyValueW$MH,"RegSetKeyValueW");
    }
    /**
     * {@snippet :
     * LSTATUS RegSetKeyValueW(HKEY hKey, LPCWSTR lpSubKey, LPCWSTR lpValueName, DWORD dwType, LPCVOID lpData, DWORD cbData);
     * }
     */
    public static int RegSetKeyValueW(MemorySegment hKey, MemorySegment lpSubKey, MemorySegment lpValueName, int dwType, MemorySegment lpData, int cbData) {
        var mh$ = RegSetKeyValueW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey, lpValueName, dwType, lpData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteTreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$578.RegDeleteTreeA$MH,"RegDeleteTreeA");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteTreeA(HKEY hKey, LPCSTR lpSubKey);
     * }
     */
    public static int RegDeleteTreeA(MemorySegment hKey, MemorySegment lpSubKey) {
        var mh$ = RegDeleteTreeA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteTreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$578.RegDeleteTreeW$MH,"RegDeleteTreeW");
    }
    /**
     * {@snippet :
     * LSTATUS RegDeleteTreeW(HKEY hKey, LPCWSTR lpSubKey);
     * }
     */
    public static int RegDeleteTreeW(MemorySegment hKey, MemorySegment lpSubKey) {
        var mh$ = RegDeleteTreeW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpSubKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCopyTreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$578.RegCopyTreeA$MH,"RegCopyTreeA");
    }
    /**
     * {@snippet :
     * LSTATUS RegCopyTreeA(HKEY hKeySrc, LPCSTR lpSubKey, HKEY hKeyDest);
     * }
     */
    public static int RegCopyTreeA(MemorySegment hKeySrc, MemorySegment lpSubKey, MemorySegment hKeyDest) {
        var mh$ = RegCopyTreeA$MH();
        try {
            return (int)mh$.invokeExact(hKeySrc, lpSubKey, hKeyDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegGetValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$578.RegGetValueA$MH,"RegGetValueA");
    }
    /**
     * {@snippet :
     * LSTATUS RegGetValueA(HKEY hkey, LPCSTR lpSubKey, LPCSTR lpValue, DWORD dwFlags, LPDWORD pdwType, PVOID pvData, LPDWORD pcbData);
     * }
     */
    public static int RegGetValueA(MemorySegment hkey, MemorySegment lpSubKey, MemorySegment lpValue, int dwFlags, MemorySegment pdwType, MemorySegment pvData, MemorySegment pcbData) {
        var mh$ = RegGetValueA$MH();
        try {
            return (int)mh$.invokeExact(hkey, lpSubKey, lpValue, dwFlags, pdwType, pvData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegGetValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$578.RegGetValueW$MH,"RegGetValueW");
    }
    /**
     * {@snippet :
     * LSTATUS RegGetValueW(HKEY hkey, LPCWSTR lpSubKey, LPCWSTR lpValue, DWORD dwFlags, LPDWORD pdwType, PVOID pvData, LPDWORD pcbData);
     * }
     */
    public static int RegGetValueW(MemorySegment hkey, MemorySegment lpSubKey, MemorySegment lpValue, int dwFlags, MemorySegment pdwType, MemorySegment pvData, MemorySegment pcbData) {
        var mh$ = RegGetValueW$MH();
        try {
            return (int)mh$.invokeExact(hkey, lpSubKey, lpValue, dwFlags, pdwType, pvData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCopyTreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$578.RegCopyTreeW$MH,"RegCopyTreeW");
    }
    /**
     * {@snippet :
     * LSTATUS RegCopyTreeW(HKEY hKeySrc, LPCWSTR lpSubKey, HKEY hKeyDest);
     * }
     */
    public static int RegCopyTreeW(MemorySegment hKeySrc, MemorySegment lpSubKey, MemorySegment hKeyDest) {
        var mh$ = RegCopyTreeW$MH();
        try {
            return (int)mh$.invokeExact(hKeySrc, lpSubKey, hKeyDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadMUIStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$579.RegLoadMUIStringA$MH,"RegLoadMUIStringA");
    }
    /**
     * {@snippet :
     * LSTATUS RegLoadMUIStringA(HKEY hKey, LPCSTR pszValue, LPSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCSTR pszDirectory);
     * }
     */
    public static int RegLoadMUIStringA(MemorySegment hKey, MemorySegment pszValue, MemorySegment pszOutBuf, int cbOutBuf, MemorySegment pcbData, int Flags, MemorySegment pszDirectory) {
        var mh$ = RegLoadMUIStringA$MH();
        try {
            return (int)mh$.invokeExact(hKey, pszValue, pszOutBuf, cbOutBuf, pcbData, Flags, pszDirectory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadMUIStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$579.RegLoadMUIStringW$MH,"RegLoadMUIStringW");
    }
    /**
     * {@snippet :
     * LSTATUS RegLoadMUIStringW(HKEY hKey, LPCWSTR pszValue, LPWSTR pszOutBuf, DWORD cbOutBuf, LPDWORD pcbData, DWORD Flags, LPCWSTR pszDirectory);
     * }
     */
    public static int RegLoadMUIStringW(MemorySegment hKey, MemorySegment pszValue, MemorySegment pszOutBuf, int cbOutBuf, MemorySegment pcbData, int Flags, MemorySegment pszDirectory) {
        var mh$ = RegLoadMUIStringW$MH();
        try {
            return (int)mh$.invokeExact(hKey, pszValue, pszOutBuf, cbOutBuf, pcbData, Flags, pszDirectory);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadAppKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$579.RegLoadAppKeyA$MH,"RegLoadAppKeyA");
    }
    /**
     * {@snippet :
     * LSTATUS RegLoadAppKeyA(LPCSTR lpFile, PHKEY phkResult, REGSAM samDesired, DWORD dwOptions, DWORD Reserved);
     * }
     */
    public static int RegLoadAppKeyA(MemorySegment lpFile, MemorySegment phkResult, int samDesired, int dwOptions, int Reserved) {
        var mh$ = RegLoadAppKeyA$MH();
        try {
            return (int)mh$.invokeExact(lpFile, phkResult, samDesired, dwOptions, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadAppKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$579.RegLoadAppKeyW$MH,"RegLoadAppKeyW");
    }
    /**
     * {@snippet :
     * LSTATUS RegLoadAppKeyW(LPCWSTR lpFile, PHKEY phkResult, REGSAM samDesired, DWORD dwOptions, DWORD Reserved);
     * }
     */
    public static int RegLoadAppKeyW(MemorySegment lpFile, MemorySegment phkResult, int samDesired, int dwOptions, int Reserved) {
        var mh$ = RegLoadAppKeyW$MH();
        try {
            return (int)mh$.invokeExact(lpFile, phkResult, samDesired, dwOptions, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownA$MH() {
        return RuntimeHelper.requireNonNull(constants$579.InitiateSystemShutdownA$MH,"InitiateSystemShutdownA");
    }
    /**
     * {@snippet :
     * BOOL InitiateSystemShutdownA(LPSTR lpMachineName, LPSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown);
     * }
     */
    public static int InitiateSystemShutdownA(MemorySegment lpMachineName, MemorySegment lpMessage, int dwTimeout, int bForceAppsClosed, int bRebootAfterShutdown) {
        var mh$ = InitiateSystemShutdownA$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownW$MH() {
        return RuntimeHelper.requireNonNull(constants$579.InitiateSystemShutdownW$MH,"InitiateSystemShutdownW");
    }
    /**
     * {@snippet :
     * BOOL InitiateSystemShutdownW(LPWSTR lpMachineName, LPWSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown);
     * }
     */
    public static int InitiateSystemShutdownW(MemorySegment lpMachineName, MemorySegment lpMessage, int dwTimeout, int bForceAppsClosed, int bRebootAfterShutdown) {
        var mh$ = InitiateSystemShutdownW$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortSystemShutdownA$MH() {
        return RuntimeHelper.requireNonNull(constants$580.AbortSystemShutdownA$MH,"AbortSystemShutdownA");
    }
    /**
     * {@snippet :
     * BOOL AbortSystemShutdownA(LPSTR lpMachineName);
     * }
     */
    public static int AbortSystemShutdownA(MemorySegment lpMachineName) {
        var mh$ = AbortSystemShutdownA$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortSystemShutdownW$MH() {
        return RuntimeHelper.requireNonNull(constants$580.AbortSystemShutdownW$MH,"AbortSystemShutdownW");
    }
    /**
     * {@snippet :
     * BOOL AbortSystemShutdownW(LPWSTR lpMachineName);
     * }
     */
    public static int AbortSystemShutdownW(MemorySegment lpMachineName) {
        var mh$ = AbortSystemShutdownW$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownExA$MH() {
        return RuntimeHelper.requireNonNull(constants$580.InitiateSystemShutdownExA$MH,"InitiateSystemShutdownExA");
    }
    /**
     * {@snippet :
     * BOOL InitiateSystemShutdownExA(LPSTR lpMachineName, LPSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown, DWORD dwReason);
     * }
     */
    public static int InitiateSystemShutdownExA(MemorySegment lpMachineName, MemorySegment lpMessage, int dwTimeout, int bForceAppsClosed, int bRebootAfterShutdown, int dwReason) {
        var mh$ = InitiateSystemShutdownExA$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownExW$MH() {
        return RuntimeHelper.requireNonNull(constants$580.InitiateSystemShutdownExW$MH,"InitiateSystemShutdownExW");
    }
    /**
     * {@snippet :
     * BOOL InitiateSystemShutdownExW(LPWSTR lpMachineName, LPWSTR lpMessage, DWORD dwTimeout, BOOL bForceAppsClosed, BOOL bRebootAfterShutdown, DWORD dwReason);
     * }
     */
    public static int InitiateSystemShutdownExW(MemorySegment lpMachineName, MemorySegment lpMessage, int dwTimeout, int bForceAppsClosed, int bRebootAfterShutdown, int dwReason) {
        var mh$ = InitiateSystemShutdownExW$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateShutdownA$MH() {
        return RuntimeHelper.requireNonNull(constants$580.InitiateShutdownA$MH,"InitiateShutdownA");
    }
    /**
     * {@snippet :
     * DWORD InitiateShutdownA(LPSTR lpMachineName, LPSTR lpMessage, DWORD dwGracePeriod, DWORD dwShutdownFlags, DWORD dwReason);
     * }
     */
    public static int InitiateShutdownA(MemorySegment lpMachineName, MemorySegment lpMessage, int dwGracePeriod, int dwShutdownFlags, int dwReason) {
        var mh$ = InitiateShutdownA$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, lpMessage, dwGracePeriod, dwShutdownFlags, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateShutdownW$MH() {
        return RuntimeHelper.requireNonNull(constants$580.InitiateShutdownW$MH,"InitiateShutdownW");
    }
    /**
     * {@snippet :
     * DWORD InitiateShutdownW(LPWSTR lpMachineName, LPWSTR lpMessage, DWORD dwGracePeriod, DWORD dwShutdownFlags, DWORD dwReason);
     * }
     */
    public static int InitiateShutdownW(MemorySegment lpMachineName, MemorySegment lpMessage, int dwGracePeriod, int dwShutdownFlags, int dwReason) {
        var mh$ = InitiateShutdownW$MH();
        try {
            return (int)mh$.invokeExact(lpMachineName, lpMessage, dwGracePeriod, dwShutdownFlags, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CheckForHiberboot$MH() {
        return RuntimeHelper.requireNonNull(constants$581.CheckForHiberboot$MH,"CheckForHiberboot");
    }
    /**
     * {@snippet :
     * DWORD CheckForHiberboot(PBOOLEAN pHiberboot, BOOLEAN bClearFlag);
     * }
     */
    public static int CheckForHiberboot(MemorySegment pHiberboot, byte bClearFlag) {
        var mh$ = CheckForHiberboot$MH();
        try {
            return (int)mh$.invokeExact(pHiberboot, bClearFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$581.RegSaveKeyExA$MH,"RegSaveKeyExA");
    }
    /**
     * {@snippet :
     * LSTATUS RegSaveKeyExA(HKEY hKey, LPCSTR lpFile, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD Flags);
     * }
     */
    public static int RegSaveKeyExA(MemorySegment hKey, MemorySegment lpFile, MemorySegment lpSecurityAttributes, int Flags) {
        var mh$ = RegSaveKeyExA$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpFile, lpSecurityAttributes, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$581.RegSaveKeyExW$MH,"RegSaveKeyExW");
    }
    /**
     * {@snippet :
     * LSTATUS RegSaveKeyExW(HKEY hKey, LPCWSTR lpFile, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD Flags);
     * }
     */
    public static int RegSaveKeyExW(MemorySegment hKey, MemorySegment lpFile, MemorySegment lpSecurityAttributes, int Flags) {
        var mh$ = RegSaveKeyExW$MH();
        try {
            return (int)mh$.invokeExact(hKey, lpFile, lpSecurityAttributes, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _NETRESOURCEA* LPNETRESOURCEA;
     * }
     */
    public static final OfAddress LPNETRESOURCEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _NETRESOURCEW* LPNETRESOURCEW;
     * }
     */
    public static final OfAddress LPNETRESOURCEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _NETRESOURCEA* LPNETRESOURCE;
     * }
     */
    public static final OfAddress LPNETRESOURCE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle WNetAddConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$581.WNetAddConnectionA$MH,"WNetAddConnectionA");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnectionA(LPCSTR lpRemoteName, LPCSTR lpPassword, LPCSTR lpLocalName);
     * }
     */
    public static int WNetAddConnectionA(MemorySegment lpRemoteName, MemorySegment lpPassword, MemorySegment lpLocalName) {
        var mh$ = WNetAddConnectionA$MH();
        try {
            return (int)mh$.invokeExact(lpRemoteName, lpPassword, lpLocalName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$581.WNetAddConnectionW$MH,"WNetAddConnectionW");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnectionW(LPCWSTR lpRemoteName, LPCWSTR lpPassword, LPCWSTR lpLocalName);
     * }
     */
    public static int WNetAddConnectionW(MemorySegment lpRemoteName, MemorySegment lpPassword, MemorySegment lpLocalName) {
        var mh$ = WNetAddConnectionW$MH();
        try {
            return (int)mh$.invokeExact(lpRemoteName, lpPassword, lpLocalName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$581.WNetAddConnection2A$MH,"WNetAddConnection2A");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnection2A(LPNETRESOURCEA lpNetResource, LPCSTR lpPassword, LPCSTR lpUserName, DWORD dwFlags);
     * }
     */
    public static int WNetAddConnection2A(MemorySegment lpNetResource, MemorySegment lpPassword, MemorySegment lpUserName, int dwFlags) {
        var mh$ = WNetAddConnection2A$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpPassword, lpUserName, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$582.WNetAddConnection2W$MH,"WNetAddConnection2W");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnection2W(LPNETRESOURCEW lpNetResource, LPCWSTR lpPassword, LPCWSTR lpUserName, DWORD dwFlags);
     * }
     */
    public static int WNetAddConnection2W(MemorySegment lpNetResource, MemorySegment lpPassword, MemorySegment lpUserName, int dwFlags) {
        var mh$ = WNetAddConnection2W$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpPassword, lpUserName, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection3A$MH() {
        return RuntimeHelper.requireNonNull(constants$582.WNetAddConnection3A$MH,"WNetAddConnection3A");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnection3A(HWND hwndOwner, LPNETRESOURCEA lpNetResource, LPCSTR lpPassword, LPCSTR lpUserName, DWORD dwFlags);
     * }
     */
    public static int WNetAddConnection3A(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment lpPassword, MemorySegment lpUserName, int dwFlags) {
        var mh$ = WNetAddConnection3A$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, lpPassword, lpUserName, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection3W$MH() {
        return RuntimeHelper.requireNonNull(constants$582.WNetAddConnection3W$MH,"WNetAddConnection3W");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnection3W(HWND hwndOwner, LPNETRESOURCEW lpNetResource, LPCWSTR lpPassword, LPCWSTR lpUserName, DWORD dwFlags);
     * }
     */
    public static int WNetAddConnection3W(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment lpPassword, MemorySegment lpUserName, int dwFlags) {
        var mh$ = WNetAddConnection3W$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, lpPassword, lpUserName, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection4A$MH() {
        return RuntimeHelper.requireNonNull(constants$582.WNetAddConnection4A$MH,"WNetAddConnection4A");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnection4A(HWND hwndOwner, LPNETRESOURCEA lpNetResource, PVOID pAuthBuffer, DWORD cbAuthBuffer, DWORD dwFlags, PBYTE lpUseOptions, DWORD cbUseOptions);
     * }
     */
    public static int WNetAddConnection4A(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment pAuthBuffer, int cbAuthBuffer, int dwFlags, MemorySegment lpUseOptions, int cbUseOptions) {
        var mh$ = WNetAddConnection4A$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection4W$MH() {
        return RuntimeHelper.requireNonNull(constants$582.WNetAddConnection4W$MH,"WNetAddConnection4W");
    }
    /**
     * {@snippet :
     * DWORD WNetAddConnection4W(HWND hwndOwner, LPNETRESOURCEW lpNetResource, PVOID pAuthBuffer, DWORD cbAuthBuffer, DWORD dwFlags, PBYTE lpUseOptions, DWORD cbUseOptions);
     * }
     */
    public static int WNetAddConnection4W(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment pAuthBuffer, int cbAuthBuffer, int dwFlags, MemorySegment lpUseOptions, int cbUseOptions) {
        var mh$ = WNetAddConnection4W$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$582.WNetCancelConnectionA$MH,"WNetCancelConnectionA");
    }
    /**
     * {@snippet :
     * DWORD WNetCancelConnectionA(LPCSTR lpName, BOOL fForce);
     * }
     */
    public static int WNetCancelConnectionA(MemorySegment lpName, int fForce) {
        var mh$ = WNetCancelConnectionA$MH();
        try {
            return (int)mh$.invokeExact(lpName, fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$583.WNetCancelConnectionW$MH,"WNetCancelConnectionW");
    }
    /**
     * {@snippet :
     * DWORD WNetCancelConnectionW(LPCWSTR lpName, BOOL fForce);
     * }
     */
    public static int WNetCancelConnectionW(MemorySegment lpName, int fForce) {
        var mh$ = WNetCancelConnectionW$MH();
        try {
            return (int)mh$.invokeExact(lpName, fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$583.WNetCancelConnection2A$MH,"WNetCancelConnection2A");
    }
    /**
     * {@snippet :
     * DWORD WNetCancelConnection2A(LPCSTR lpName, DWORD dwFlags, BOOL fForce);
     * }
     */
    public static int WNetCancelConnection2A(MemorySegment lpName, int dwFlags, int fForce) {
        var mh$ = WNetCancelConnection2A$MH();
        try {
            return (int)mh$.invokeExact(lpName, dwFlags, fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$583.WNetCancelConnection2W$MH,"WNetCancelConnection2W");
    }
    /**
     * {@snippet :
     * DWORD WNetCancelConnection2W(LPCWSTR lpName, DWORD dwFlags, BOOL fForce);
     * }
     */
    public static int WNetCancelConnection2W(MemorySegment lpName, int dwFlags, int fForce) {
        var mh$ = WNetCancelConnection2W$MH();
        try {
            return (int)mh$.invokeExact(lpName, dwFlags, fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$583.WNetGetConnectionA$MH,"WNetGetConnectionA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetConnectionA(LPCSTR lpLocalName, LPSTR lpRemoteName, LPDWORD lpnLength);
     * }
     */
    public static int WNetGetConnectionA(MemorySegment lpLocalName, MemorySegment lpRemoteName, MemorySegment lpnLength) {
        var mh$ = WNetGetConnectionA$MH();
        try {
            return (int)mh$.invokeExact(lpLocalName, lpRemoteName, lpnLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$583.WNetGetConnectionW$MH,"WNetGetConnectionW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetConnectionW(LPCWSTR lpLocalName, LPWSTR lpRemoteName, LPDWORD lpnLength);
     * }
     */
    public static int WNetGetConnectionW(MemorySegment lpLocalName, MemorySegment lpRemoteName, MemorySegment lpnLength) {
        var mh$ = WNetGetConnectionW$MH();
        try {
            return (int)mh$.invokeExact(lpLocalName, lpRemoteName, lpnLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetRestoreSingleConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$583.WNetRestoreSingleConnectionW$MH,"WNetRestoreSingleConnectionW");
    }
    /**
     * {@snippet :
     * DWORD WNetRestoreSingleConnectionW(HWND hwndParent, LPCWSTR lpDevice, BOOL fUseUI);
     * }
     */
    public static int WNetRestoreSingleConnectionW(MemorySegment hwndParent, MemorySegment lpDevice, int fUseUI) {
        var mh$ = WNetRestoreSingleConnectionW$MH();
        try {
            return (int)mh$.invokeExact(hwndParent, lpDevice, fUseUI);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetUseConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$584.WNetUseConnectionA$MH,"WNetUseConnectionA");
    }
    /**
     * {@snippet :
     * DWORD WNetUseConnectionA(HWND hwndOwner, LPNETRESOURCEA lpNetResource, LPCSTR lpPassword, LPCSTR lpUserId, DWORD dwFlags, LPSTR lpAccessName, LPDWORD lpBufferSize, LPDWORD lpResult);
     * }
     */
    public static int WNetUseConnectionA(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment lpPassword, MemorySegment lpUserId, int dwFlags, MemorySegment lpAccessName, MemorySegment lpBufferSize, MemorySegment lpResult) {
        var mh$ = WNetUseConnectionA$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, lpPassword, lpUserId, dwFlags, lpAccessName, lpBufferSize, lpResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetUseConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$584.WNetUseConnectionW$MH,"WNetUseConnectionW");
    }
    /**
     * {@snippet :
     * DWORD WNetUseConnectionW(HWND hwndOwner, LPNETRESOURCEW lpNetResource, LPCWSTR lpPassword, LPCWSTR lpUserId, DWORD dwFlags, LPWSTR lpAccessName, LPDWORD lpBufferSize, LPDWORD lpResult);
     * }
     */
    public static int WNetUseConnectionW(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment lpPassword, MemorySegment lpUserId, int dwFlags, MemorySegment lpAccessName, MemorySegment lpBufferSize, MemorySegment lpResult) {
        var mh$ = WNetUseConnectionW$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, lpPassword, lpUserId, dwFlags, lpAccessName, lpBufferSize, lpResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetUseConnection4A$MH() {
        return RuntimeHelper.requireNonNull(constants$584.WNetUseConnection4A$MH,"WNetUseConnection4A");
    }
    /**
     * {@snippet :
     * DWORD WNetUseConnection4A(HWND hwndOwner, LPNETRESOURCEA lpNetResource, PVOID pAuthBuffer, DWORD cbAuthBuffer, DWORD dwFlags, PBYTE lpUseOptions, DWORD cbUseOptions, LPSTR lpAccessName, LPDWORD lpBufferSize, LPDWORD lpResult);
     * }
     */
    public static int WNetUseConnection4A(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment pAuthBuffer, int cbAuthBuffer, int dwFlags, MemorySegment lpUseOptions, int cbUseOptions, MemorySegment lpAccessName, MemorySegment lpBufferSize, MemorySegment lpResult) {
        var mh$ = WNetUseConnection4A$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions, lpAccessName, lpBufferSize, lpResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetUseConnection4W$MH() {
        return RuntimeHelper.requireNonNull(constants$584.WNetUseConnection4W$MH,"WNetUseConnection4W");
    }
    /**
     * {@snippet :
     * DWORD WNetUseConnection4W(HWND hwndOwner, LPNETRESOURCEW lpNetResource, PVOID pAuthBuffer, DWORD cbAuthBuffer, DWORD dwFlags, PBYTE lpUseOptions, DWORD cbUseOptions, LPWSTR lpAccessName, LPDWORD lpBufferSize, LPDWORD lpResult);
     * }
     */
    public static int WNetUseConnection4W(MemorySegment hwndOwner, MemorySegment lpNetResource, MemorySegment pAuthBuffer, int cbAuthBuffer, int dwFlags, MemorySegment lpUseOptions, int cbUseOptions, MemorySegment lpAccessName, MemorySegment lpBufferSize, MemorySegment lpResult) {
        var mh$ = WNetUseConnection4W$MH();
        try {
            return (int)mh$.invokeExact(hwndOwner, lpNetResource, pAuthBuffer, cbAuthBuffer, dwFlags, lpUseOptions, cbUseOptions, lpAccessName, lpBufferSize, lpResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetConnectionDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$584.WNetConnectionDialog$MH,"WNetConnectionDialog");
    }
    /**
     * {@snippet :
     * DWORD WNetConnectionDialog(HWND hwnd, DWORD dwType);
     * }
     */
    public static int WNetConnectionDialog(MemorySegment hwnd, int dwType) {
        var mh$ = WNetConnectionDialog$MH();
        try {
            return (int)mh$.invokeExact(hwnd, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetDisconnectDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$584.WNetDisconnectDialog$MH,"WNetDisconnectDialog");
    }
    /**
     * {@snippet :
     * DWORD WNetDisconnectDialog(HWND hwnd, DWORD dwType);
     * }
     */
    public static int WNetDisconnectDialog(MemorySegment hwnd, int dwType) {
        var mh$ = WNetDisconnectDialog$MH();
        try {
            return (int)mh$.invokeExact(hwnd, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _CONNECTDLGSTRUCTA* LPCONNECTDLGSTRUCTA;
     * }
     */
    public static final OfAddress LPCONNECTDLGSTRUCTA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CONNECTDLGSTRUCTW* LPCONNECTDLGSTRUCTW;
     * }
     */
    public static final OfAddress LPCONNECTDLGSTRUCTW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CONNECTDLGSTRUCTA* LPCONNECTDLGSTRUCT;
     * }
     */
    public static final OfAddress LPCONNECTDLGSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle WNetConnectionDialog1A$MH() {
        return RuntimeHelper.requireNonNull(constants$585.WNetConnectionDialog1A$MH,"WNetConnectionDialog1A");
    }
    /**
     * {@snippet :
     * DWORD WNetConnectionDialog1A(LPCONNECTDLGSTRUCTA lpConnDlgStruct);
     * }
     */
    public static int WNetConnectionDialog1A(MemorySegment lpConnDlgStruct) {
        var mh$ = WNetConnectionDialog1A$MH();
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetConnectionDialog1W$MH() {
        return RuntimeHelper.requireNonNull(constants$585.WNetConnectionDialog1W$MH,"WNetConnectionDialog1W");
    }
    /**
     * {@snippet :
     * DWORD WNetConnectionDialog1W(LPCONNECTDLGSTRUCTW lpConnDlgStruct);
     * }
     */
    public static int WNetConnectionDialog1W(MemorySegment lpConnDlgStruct) {
        var mh$ = WNetConnectionDialog1W$MH();
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _DISCDLGSTRUCTA* LPDISCDLGSTRUCTA;
     * }
     */
    public static final OfAddress LPDISCDLGSTRUCTA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISCDLGSTRUCTW* LPDISCDLGSTRUCTW;
     * }
     */
    public static final OfAddress LPDISCDLGSTRUCTW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISCDLGSTRUCTA* LPDISCDLGSTRUCT;
     * }
     */
    public static final OfAddress LPDISCDLGSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle WNetDisconnectDialog1A$MH() {
        return RuntimeHelper.requireNonNull(constants$585.WNetDisconnectDialog1A$MH,"WNetDisconnectDialog1A");
    }
    /**
     * {@snippet :
     * DWORD WNetDisconnectDialog1A(LPDISCDLGSTRUCTA lpConnDlgStruct);
     * }
     */
    public static int WNetDisconnectDialog1A(MemorySegment lpConnDlgStruct) {
        var mh$ = WNetDisconnectDialog1A$MH();
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetDisconnectDialog1W$MH() {
        return RuntimeHelper.requireNonNull(constants$585.WNetDisconnectDialog1W$MH,"WNetDisconnectDialog1W");
    }
    /**
     * {@snippet :
     * DWORD WNetDisconnectDialog1W(LPDISCDLGSTRUCTW lpConnDlgStruct);
     * }
     */
    public static int WNetDisconnectDialog1W(MemorySegment lpConnDlgStruct) {
        var mh$ = WNetDisconnectDialog1W$MH();
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetOpenEnumA$MH() {
        return RuntimeHelper.requireNonNull(constants$585.WNetOpenEnumA$MH,"WNetOpenEnumA");
    }
    /**
     * {@snippet :
     * DWORD WNetOpenEnumA(DWORD dwScope, DWORD dwType, DWORD dwUsage, LPNETRESOURCEA lpNetResource, LPHANDLE lphEnum);
     * }
     */
    public static int WNetOpenEnumA(int dwScope, int dwType, int dwUsage, MemorySegment lpNetResource, MemorySegment lphEnum) {
        var mh$ = WNetOpenEnumA$MH();
        try {
            return (int)mh$.invokeExact(dwScope, dwType, dwUsage, lpNetResource, lphEnum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetOpenEnumW$MH() {
        return RuntimeHelper.requireNonNull(constants$585.WNetOpenEnumW$MH,"WNetOpenEnumW");
    }
    /**
     * {@snippet :
     * DWORD WNetOpenEnumW(DWORD dwScope, DWORD dwType, DWORD dwUsage, LPNETRESOURCEW lpNetResource, LPHANDLE lphEnum);
     * }
     */
    public static int WNetOpenEnumW(int dwScope, int dwType, int dwUsage, MemorySegment lpNetResource, MemorySegment lphEnum) {
        var mh$ = WNetOpenEnumW$MH();
        try {
            return (int)mh$.invokeExact(dwScope, dwType, dwUsage, lpNetResource, lphEnum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetEnumResourceA$MH() {
        return RuntimeHelper.requireNonNull(constants$586.WNetEnumResourceA$MH,"WNetEnumResourceA");
    }
    /**
     * {@snippet :
     * DWORD WNetEnumResourceA(HANDLE hEnum, LPDWORD lpcCount, LPVOID lpBuffer, LPDWORD lpBufferSize);
     * }
     */
    public static int WNetEnumResourceA(MemorySegment hEnum, MemorySegment lpcCount, MemorySegment lpBuffer, MemorySegment lpBufferSize) {
        var mh$ = WNetEnumResourceA$MH();
        try {
            return (int)mh$.invokeExact(hEnum, lpcCount, lpBuffer, lpBufferSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetEnumResourceW$MH() {
        return RuntimeHelper.requireNonNull(constants$586.WNetEnumResourceW$MH,"WNetEnumResourceW");
    }
    /**
     * {@snippet :
     * DWORD WNetEnumResourceW(HANDLE hEnum, LPDWORD lpcCount, LPVOID lpBuffer, LPDWORD lpBufferSize);
     * }
     */
    public static int WNetEnumResourceW(MemorySegment hEnum, MemorySegment lpcCount, MemorySegment lpBuffer, MemorySegment lpBufferSize) {
        var mh$ = WNetEnumResourceW$MH();
        try {
            return (int)mh$.invokeExact(hEnum, lpcCount, lpBuffer, lpBufferSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCloseEnum$MH() {
        return RuntimeHelper.requireNonNull(constants$586.WNetCloseEnum$MH,"WNetCloseEnum");
    }
    /**
     * {@snippet :
     * DWORD WNetCloseEnum(HANDLE hEnum);
     * }
     */
    public static int WNetCloseEnum(MemorySegment hEnum) {
        var mh$ = WNetCloseEnum$MH();
        try {
            return (int)mh$.invokeExact(hEnum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceParentA$MH() {
        return RuntimeHelper.requireNonNull(constants$586.WNetGetResourceParentA$MH,"WNetGetResourceParentA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetResourceParentA(LPNETRESOURCEA lpNetResource, LPVOID lpBuffer, LPDWORD lpcbBuffer);
     * }
     */
    public static int WNetGetResourceParentA(MemorySegment lpNetResource, MemorySegment lpBuffer, MemorySegment lpcbBuffer) {
        var mh$ = WNetGetResourceParentA$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpBuffer, lpcbBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceParentW$MH() {
        return RuntimeHelper.requireNonNull(constants$586.WNetGetResourceParentW$MH,"WNetGetResourceParentW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetResourceParentW(LPNETRESOURCEW lpNetResource, LPVOID lpBuffer, LPDWORD lpcbBuffer);
     * }
     */
    public static int WNetGetResourceParentW(MemorySegment lpNetResource, MemorySegment lpBuffer, MemorySegment lpcbBuffer) {
        var mh$ = WNetGetResourceParentW$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpBuffer, lpcbBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceInformationA$MH() {
        return RuntimeHelper.requireNonNull(constants$586.WNetGetResourceInformationA$MH,"WNetGetResourceInformationA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetResourceInformationA(LPNETRESOURCEA lpNetResource, LPVOID lpBuffer, LPDWORD lpcbBuffer, LPSTR* lplpSystem);
     * }
     */
    public static int WNetGetResourceInformationA(MemorySegment lpNetResource, MemorySegment lpBuffer, MemorySegment lpcbBuffer, MemorySegment lplpSystem) {
        var mh$ = WNetGetResourceInformationA$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpBuffer, lpcbBuffer, lplpSystem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceInformationW$MH() {
        return RuntimeHelper.requireNonNull(constants$587.WNetGetResourceInformationW$MH,"WNetGetResourceInformationW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetResourceInformationW(LPNETRESOURCEW lpNetResource, LPVOID lpBuffer, LPDWORD lpcbBuffer, LPWSTR* lplpSystem);
     * }
     */
    public static int WNetGetResourceInformationW(MemorySegment lpNetResource, MemorySegment lpBuffer, MemorySegment lpcbBuffer, MemorySegment lplpSystem) {
        var mh$ = WNetGetResourceInformationW$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpBuffer, lpcbBuffer, lplpSystem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _UNIVERSAL_NAME_INFOA* LPUNIVERSAL_NAME_INFOA;
     * }
     */
    public static final OfAddress LPUNIVERSAL_NAME_INFOA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _UNIVERSAL_NAME_INFOW* LPUNIVERSAL_NAME_INFOW;
     * }
     */
    public static final OfAddress LPUNIVERSAL_NAME_INFOW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _UNIVERSAL_NAME_INFOA* LPUNIVERSAL_NAME_INFO;
     * }
     */
    public static final OfAddress LPUNIVERSAL_NAME_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REMOTE_NAME_INFOA* LPREMOTE_NAME_INFOA;
     * }
     */
    public static final OfAddress LPREMOTE_NAME_INFOA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REMOTE_NAME_INFOW* LPREMOTE_NAME_INFOW;
     * }
     */
    public static final OfAddress LPREMOTE_NAME_INFOW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REMOTE_NAME_INFOA* LPREMOTE_NAME_INFO;
     * }
     */
    public static final OfAddress LPREMOTE_NAME_INFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle WNetGetUniversalNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$587.WNetGetUniversalNameA$MH,"WNetGetUniversalNameA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetUniversalNameA(LPCSTR lpLocalPath, DWORD dwInfoLevel, LPVOID lpBuffer, LPDWORD lpBufferSize);
     * }
     */
    public static int WNetGetUniversalNameA(MemorySegment lpLocalPath, int dwInfoLevel, MemorySegment lpBuffer, MemorySegment lpBufferSize) {
        var mh$ = WNetGetUniversalNameA$MH();
        try {
            return (int)mh$.invokeExact(lpLocalPath, dwInfoLevel, lpBuffer, lpBufferSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetUniversalNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$587.WNetGetUniversalNameW$MH,"WNetGetUniversalNameW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetUniversalNameW(LPCWSTR lpLocalPath, DWORD dwInfoLevel, LPVOID lpBuffer, LPDWORD lpBufferSize);
     * }
     */
    public static int WNetGetUniversalNameW(MemorySegment lpLocalPath, int dwInfoLevel, MemorySegment lpBuffer, MemorySegment lpBufferSize) {
        var mh$ = WNetGetUniversalNameW$MH();
        try {
            return (int)mh$.invokeExact(lpLocalPath, dwInfoLevel, lpBuffer, lpBufferSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetUserA$MH() {
        return RuntimeHelper.requireNonNull(constants$587.WNetGetUserA$MH,"WNetGetUserA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetUserA(LPCSTR lpName, LPSTR lpUserName, LPDWORD lpnLength);
     * }
     */
    public static int WNetGetUserA(MemorySegment lpName, MemorySegment lpUserName, MemorySegment lpnLength) {
        var mh$ = WNetGetUserA$MH();
        try {
            return (int)mh$.invokeExact(lpName, lpUserName, lpnLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetUserW$MH() {
        return RuntimeHelper.requireNonNull(constants$587.WNetGetUserW$MH,"WNetGetUserW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetUserW(LPCWSTR lpName, LPWSTR lpUserName, LPDWORD lpnLength);
     * }
     */
    public static int WNetGetUserW(MemorySegment lpName, MemorySegment lpUserName, MemorySegment lpnLength) {
        var mh$ = WNetGetUserW$MH();
        try {
            return (int)mh$.invokeExact(lpName, lpUserName, lpnLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$587.WNetGetProviderNameA$MH,"WNetGetProviderNameA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetProviderNameA(DWORD dwNetType, LPSTR lpProviderName, LPDWORD lpBufferSize);
     * }
     */
    public static int WNetGetProviderNameA(int dwNetType, MemorySegment lpProviderName, MemorySegment lpBufferSize) {
        var mh$ = WNetGetProviderNameA$MH();
        try {
            return (int)mh$.invokeExact(dwNetType, lpProviderName, lpBufferSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$588.WNetGetProviderNameW$MH,"WNetGetProviderNameW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetProviderNameW(DWORD dwNetType, LPWSTR lpProviderName, LPDWORD lpBufferSize);
     * }
     */
    public static int WNetGetProviderNameW(int dwNetType, MemorySegment lpProviderName, MemorySegment lpBufferSize) {
        var mh$ = WNetGetProviderNameW$MH();
        try {
            return (int)mh$.invokeExact(dwNetType, lpProviderName, lpBufferSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _NETINFOSTRUCT* LPNETINFOSTRUCT;
     * }
     */
    public static final OfAddress LPNETINFOSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle WNetGetNetworkInformationA$MH() {
        return RuntimeHelper.requireNonNull(constants$588.WNetGetNetworkInformationA$MH,"WNetGetNetworkInformationA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetNetworkInformationA(LPCSTR lpProvider, LPNETINFOSTRUCT lpNetInfoStruct);
     * }
     */
    public static int WNetGetNetworkInformationA(MemorySegment lpProvider, MemorySegment lpNetInfoStruct) {
        var mh$ = WNetGetNetworkInformationA$MH();
        try {
            return (int)mh$.invokeExact(lpProvider, lpNetInfoStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetNetworkInformationW$MH() {
        return RuntimeHelper.requireNonNull(constants$588.WNetGetNetworkInformationW$MH,"WNetGetNetworkInformationW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetNetworkInformationW(LPCWSTR lpProvider, LPNETINFOSTRUCT lpNetInfoStruct);
     * }
     */
    public static int WNetGetNetworkInformationW(MemorySegment lpProvider, MemorySegment lpNetInfoStruct) {
        var mh$ = WNetGetNetworkInformationW$MH();
        try {
            return (int)mh$.invokeExact(lpProvider, lpNetInfoStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetLastErrorA$MH() {
        return RuntimeHelper.requireNonNull(constants$588.WNetGetLastErrorA$MH,"WNetGetLastErrorA");
    }
    /**
     * {@snippet :
     * DWORD WNetGetLastErrorA(LPDWORD lpError, LPSTR lpErrorBuf, DWORD nErrorBufSize, LPSTR lpNameBuf, DWORD nNameBufSize);
     * }
     */
    public static int WNetGetLastErrorA(MemorySegment lpError, MemorySegment lpErrorBuf, int nErrorBufSize, MemorySegment lpNameBuf, int nNameBufSize) {
        var mh$ = WNetGetLastErrorA$MH();
        try {
            return (int)mh$.invokeExact(lpError, lpErrorBuf, nErrorBufSize, lpNameBuf, nNameBufSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetLastErrorW$MH() {
        return RuntimeHelper.requireNonNull(constants$588.WNetGetLastErrorW$MH,"WNetGetLastErrorW");
    }
    /**
     * {@snippet :
     * DWORD WNetGetLastErrorW(LPDWORD lpError, LPWSTR lpErrorBuf, DWORD nErrorBufSize, LPWSTR lpNameBuf, DWORD nNameBufSize);
     * }
     */
    public static int WNetGetLastErrorW(MemorySegment lpError, MemorySegment lpErrorBuf, int nErrorBufSize, MemorySegment lpNameBuf, int nNameBufSize) {
        var mh$ = WNetGetLastErrorW$MH();
        try {
            return (int)mh$.invokeExact(lpError, lpErrorBuf, nErrorBufSize, lpNameBuf, nNameBufSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _NETCONNECTINFOSTRUCT* LPNETCONNECTINFOSTRUCT;
     * }
     */
    public static final OfAddress LPNETCONNECTINFOSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle MultinetGetConnectionPerformanceA$MH() {
        return RuntimeHelper.requireNonNull(constants$588.MultinetGetConnectionPerformanceA$MH,"MultinetGetConnectionPerformanceA");
    }
    /**
     * {@snippet :
     * DWORD MultinetGetConnectionPerformanceA(LPNETRESOURCEA lpNetResource, LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct);
     * }
     */
    public static int MultinetGetConnectionPerformanceA(MemorySegment lpNetResource, MemorySegment lpNetConnectInfoStruct) {
        var mh$ = MultinetGetConnectionPerformanceA$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpNetConnectInfoStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MultinetGetConnectionPerformanceW$MH() {
        return RuntimeHelper.requireNonNull(constants$589.MultinetGetConnectionPerformanceW$MH,"MultinetGetConnectionPerformanceW");
    }
    /**
     * {@snippet :
     * DWORD MultinetGetConnectionPerformanceW(LPNETRESOURCEW lpNetResource, LPNETCONNECTINFOSTRUCT lpNetConnectInfoStruct);
     * }
     */
    public static int MultinetGetConnectionPerformanceW(MemorySegment lpNetResource, MemorySegment lpNetConnectInfoStruct) {
        var mh$ = MultinetGetConnectionPerformanceW$MH();
        try {
            return (int)mh$.invokeExact(lpNetResource, lpNetConnectInfoStruct);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeSetQualityOfService$MH() {
        return RuntimeHelper.requireNonNull(constants$589.DdeSetQualityOfService$MH,"DdeSetQualityOfService");
    }
    /**
     * {@snippet :
     * BOOL DdeSetQualityOfService(HWND hwndClient, const SECURITY_QUALITY_OF_SERVICE* pqosNew, PSECURITY_QUALITY_OF_SERVICE pqosPrev);
     * }
     */
    public static int DdeSetQualityOfService(MemorySegment hwndClient, MemorySegment pqosNew, MemorySegment pqosPrev) {
        var mh$ = DdeSetQualityOfService$MH();
        try {
            return (int)mh$.invokeExact(hwndClient, pqosNew, pqosPrev);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImpersonateDdeClientWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$589.ImpersonateDdeClientWindow$MH,"ImpersonateDdeClientWindow");
    }
    /**
     * {@snippet :
     * BOOL ImpersonateDdeClientWindow(HWND hWndClient, HWND hWndServer);
     * }
     */
    public static int ImpersonateDdeClientWindow(MemorySegment hWndClient, MemorySegment hWndServer) {
        var mh$ = ImpersonateDdeClientWindow$MH();
        try {
            return (int)mh$.invokeExact(hWndClient, hWndServer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PackDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$589.PackDDElParam$MH,"PackDDElParam");
    }
    /**
     * {@snippet :
     * LPARAM PackDDElParam(UINT msg, UINT_PTR uiLo, UINT_PTR uiHi);
     * }
     */
    public static long PackDDElParam(int msg, long uiLo, long uiHi) {
        var mh$ = PackDDElParam$MH();
        try {
            return (long)mh$.invokeExact(msg, uiLo, uiHi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnpackDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$589.UnpackDDElParam$MH,"UnpackDDElParam");
    }
    /**
     * {@snippet :
     * BOOL UnpackDDElParam(UINT msg, LPARAM lParam, PUINT_PTR puiLo, PUINT_PTR puiHi);
     * }
     */
    public static int UnpackDDElParam(int msg, long lParam, MemorySegment puiLo, MemorySegment puiHi) {
        var mh$ = UnpackDDElParam$MH();
        try {
            return (int)mh$.invokeExact(msg, lParam, puiLo, puiHi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreeDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$589.FreeDDElParam$MH,"FreeDDElParam");
    }
    /**
     * {@snippet :
     * BOOL FreeDDElParam(UINT msg, LPARAM lParam);
     * }
     */
    public static int FreeDDElParam(int msg, long lParam) {
        var mh$ = FreeDDElParam$MH();
        try {
            return (int)mh$.invokeExact(msg, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReuseDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$590.ReuseDDElParam$MH,"ReuseDDElParam");
    }
    /**
     * {@snippet :
     * LPARAM ReuseDDElParam(LPARAM lParam, UINT msgIn, UINT msgOut, UINT_PTR uiLo, UINT_PTR uiHi);
     * }
     */
    public static long ReuseDDElParam(long lParam, int msgIn, int msgOut, long uiLo, long uiHi) {
        var mh$ = ReuseDDElParam$MH();
        try {
            return (long)mh$.invokeExact(lParam, msgIn, msgOut, uiLo, uiHi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct HCONVLIST__* HCONVLIST;
     * }
     */
    public static final OfAddress HCONVLIST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HCONV__* HCONV;
     * }
     */
    public static final OfAddress HCONV = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HSZ__* HSZ;
     * }
     */
    public static final OfAddress HSZ = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HDDEDATA__* HDDEDATA;
     * }
     */
    public static final OfAddress HDDEDATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagHSZPAIR* PHSZPAIR;
     * }
     */
    public static final OfAddress PHSZPAIR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagCONVCONTEXT* PCONVCONTEXT;
     * }
     */
    public static final OfAddress PCONVCONTEXT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagCONVINFO* PCONVINFO;
     * }
     */
    public static final OfAddress PCONVINFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle DdeInitializeA$MH() {
        return RuntimeHelper.requireNonNull(constants$590.DdeInitializeA$MH,"DdeInitializeA");
    }
    /**
     * {@snippet :
     * UINT DdeInitializeA(LPDWORD pidInst, PFNCALLBACK pfnCallback, DWORD afCmd, DWORD ulRes);
     * }
     */
    public static int DdeInitializeA(MemorySegment pidInst, MemorySegment pfnCallback, int afCmd, int ulRes) {
        var mh$ = DdeInitializeA$MH();
        try {
            return (int)mh$.invokeExact(pidInst, pfnCallback, afCmd, ulRes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeInitializeW$MH() {
        return RuntimeHelper.requireNonNull(constants$591.DdeInitializeW$MH,"DdeInitializeW");
    }
    /**
     * {@snippet :
     * UINT DdeInitializeW(LPDWORD pidInst, PFNCALLBACK pfnCallback, DWORD afCmd, DWORD ulRes);
     * }
     */
    public static int DdeInitializeW(MemorySegment pidInst, MemorySegment pfnCallback, int afCmd, int ulRes) {
        var mh$ = DdeInitializeW$MH();
        try {
            return (int)mh$.invokeExact(pidInst, pfnCallback, afCmd, ulRes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeUninitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$591.DdeUninitialize$MH,"DdeUninitialize");
    }
    /**
     * {@snippet :
     * BOOL DdeUninitialize(DWORD idInst);
     * }
     */
    public static int DdeUninitialize(int idInst) {
        var mh$ = DdeUninitialize$MH();
        try {
            return (int)mh$.invokeExact(idInst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeConnectList$MH() {
        return RuntimeHelper.requireNonNull(constants$591.DdeConnectList$MH,"DdeConnectList");
    }
    /**
     * {@snippet :
     * HCONVLIST DdeConnectList(DWORD idInst, HSZ hszService, HSZ hszTopic, HCONVLIST hConvList, PCONVCONTEXT pCC);
     * }
     */
    public static MemorySegment DdeConnectList(int idInst, MemorySegment hszService, MemorySegment hszTopic, MemorySegment hConvList, MemorySegment pCC) {
        var mh$ = DdeConnectList$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(idInst, hszService, hszTopic, hConvList, pCC);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryNextServer$MH() {
        return RuntimeHelper.requireNonNull(constants$591.DdeQueryNextServer$MH,"DdeQueryNextServer");
    }
    /**
     * {@snippet :
     * HCONV DdeQueryNextServer(HCONVLIST hConvList, HCONV hConvPrev);
     * }
     */
    public static MemorySegment DdeQueryNextServer(MemorySegment hConvList, MemorySegment hConvPrev) {
        var mh$ = DdeQueryNextServer$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hConvList, hConvPrev);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeDisconnectList$MH() {
        return RuntimeHelper.requireNonNull(constants$591.DdeDisconnectList$MH,"DdeDisconnectList");
    }
    /**
     * {@snippet :
     * BOOL DdeDisconnectList(HCONVLIST hConvList);
     * }
     */
    public static int DdeDisconnectList(MemorySegment hConvList) {
        var mh$ = DdeDisconnectList$MH();
        try {
            return (int)mh$.invokeExact(hConvList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeConnect$MH() {
        return RuntimeHelper.requireNonNull(constants$591.DdeConnect$MH,"DdeConnect");
    }
    /**
     * {@snippet :
     * HCONV DdeConnect(DWORD idInst, HSZ hszService, HSZ hszTopic, PCONVCONTEXT pCC);
     * }
     */
    public static MemorySegment DdeConnect(int idInst, MemorySegment hszService, MemorySegment hszTopic, MemorySegment pCC) {
        var mh$ = DdeConnect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(idInst, hszService, hszTopic, pCC);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$592.DdeDisconnect$MH,"DdeDisconnect");
    }
    /**
     * {@snippet :
     * BOOL DdeDisconnect(HCONV hConv);
     * }
     */
    public static int DdeDisconnect(MemorySegment hConv) {
        var mh$ = DdeDisconnect$MH();
        try {
            return (int)mh$.invokeExact(hConv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeReconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$592.DdeReconnect$MH,"DdeReconnect");
    }
    /**
     * {@snippet :
     * HCONV DdeReconnect(HCONV hConv);
     * }
     */
    public static MemorySegment DdeReconnect(MemorySegment hConv) {
        var mh$ = DdeReconnect$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hConv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryConvInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$592.DdeQueryConvInfo$MH,"DdeQueryConvInfo");
    }
    /**
     * {@snippet :
     * UINT DdeQueryConvInfo(HCONV hConv, DWORD idTransaction, PCONVINFO pConvInfo);
     * }
     */
    public static int DdeQueryConvInfo(MemorySegment hConv, int idTransaction, MemorySegment pConvInfo) {
        var mh$ = DdeQueryConvInfo$MH();
        try {
            return (int)mh$.invokeExact(hConv, idTransaction, pConvInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeSetUserHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$592.DdeSetUserHandle$MH,"DdeSetUserHandle");
    }
    /**
     * {@snippet :
     * BOOL DdeSetUserHandle(HCONV hConv, DWORD id, DWORD_PTR hUser);
     * }
     */
    public static int DdeSetUserHandle(MemorySegment hConv, int id, long hUser) {
        var mh$ = DdeSetUserHandle$MH();
        try {
            return (int)mh$.invokeExact(hConv, id, hUser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeAbandonTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$592.DdeAbandonTransaction$MH,"DdeAbandonTransaction");
    }
    /**
     * {@snippet :
     * BOOL DdeAbandonTransaction(DWORD idInst, HCONV hConv, DWORD idTransaction);
     * }
     */
    public static int DdeAbandonTransaction(int idInst, MemorySegment hConv, int idTransaction) {
        var mh$ = DdeAbandonTransaction$MH();
        try {
            return (int)mh$.invokeExact(idInst, hConv, idTransaction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdePostAdvise$MH() {
        return RuntimeHelper.requireNonNull(constants$592.DdePostAdvise$MH,"DdePostAdvise");
    }
    /**
     * {@snippet :
     * BOOL DdePostAdvise(DWORD idInst, HSZ hszTopic, HSZ hszItem);
     * }
     */
    public static int DdePostAdvise(int idInst, MemorySegment hszTopic, MemorySegment hszItem) {
        var mh$ = DdePostAdvise$MH();
        try {
            return (int)mh$.invokeExact(idInst, hszTopic, hszItem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeEnableCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$593.DdeEnableCallback$MH,"DdeEnableCallback");
    }
    /**
     * {@snippet :
     * BOOL DdeEnableCallback(DWORD idInst, HCONV hConv, UINT wCmd);
     * }
     */
    public static int DdeEnableCallback(int idInst, MemorySegment hConv, int wCmd) {
        var mh$ = DdeEnableCallback$MH();
        try {
            return (int)mh$.invokeExact(idInst, hConv, wCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeImpersonateClient$MH() {
        return RuntimeHelper.requireNonNull(constants$593.DdeImpersonateClient$MH,"DdeImpersonateClient");
    }
    /**
     * {@snippet :
     * BOOL DdeImpersonateClient(HCONV hConv);
     * }
     */
    public static int DdeImpersonateClient(MemorySegment hConv) {
        var mh$ = DdeImpersonateClient$MH();
        try {
            return (int)mh$.invokeExact(hConv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeNameService$MH() {
        return RuntimeHelper.requireNonNull(constants$593.DdeNameService$MH,"DdeNameService");
    }
    /**
     * {@snippet :
     * HDDEDATA DdeNameService(DWORD idInst, HSZ hsz1, HSZ hsz2, UINT afCmd);
     * }
     */
    public static MemorySegment DdeNameService(int idInst, MemorySegment hsz1, MemorySegment hsz2, int afCmd) {
        var mh$ = DdeNameService$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(idInst, hsz1, hsz2, afCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeClientTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$593.DdeClientTransaction$MH,"DdeClientTransaction");
    }
    /**
     * {@snippet :
     * HDDEDATA DdeClientTransaction(LPBYTE pData, DWORD cbData, HCONV hConv, HSZ hszItem, UINT wFmt, UINT wType, DWORD dwTimeout, LPDWORD pdwResult);
     * }
     */
    public static MemorySegment DdeClientTransaction(MemorySegment pData, int cbData, MemorySegment hConv, MemorySegment hszItem, int wFmt, int wType, int dwTimeout, MemorySegment pdwResult) {
        var mh$ = DdeClientTransaction$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pData, cbData, hConv, hszItem, wFmt, wType, dwTimeout, pdwResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateDataHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$593.DdeCreateDataHandle$MH,"DdeCreateDataHandle");
    }
    /**
     * {@snippet :
     * HDDEDATA DdeCreateDataHandle(DWORD idInst, LPBYTE pSrc, DWORD cb, DWORD cbOff, HSZ hszItem, UINT wFmt, UINT afCmd);
     * }
     */
    public static MemorySegment DdeCreateDataHandle(int idInst, MemorySegment pSrc, int cb, int cbOff, MemorySegment hszItem, int wFmt, int afCmd) {
        var mh$ = DdeCreateDataHandle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(idInst, pSrc, cb, cbOff, hszItem, wFmt, afCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeAddData$MH() {
        return RuntimeHelper.requireNonNull(constants$593.DdeAddData$MH,"DdeAddData");
    }
    /**
     * {@snippet :
     * HDDEDATA DdeAddData(HDDEDATA hData, LPBYTE pSrc, DWORD cb, DWORD cbOff);
     * }
     */
    public static MemorySegment DdeAddData(MemorySegment hData, MemorySegment pSrc, int cb, int cbOff) {
        var mh$ = DdeAddData$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hData, pSrc, cb, cbOff);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeGetData$MH() {
        return RuntimeHelper.requireNonNull(constants$594.DdeGetData$MH,"DdeGetData");
    }
    /**
     * {@snippet :
     * DWORD DdeGetData(HDDEDATA hData, LPBYTE pDst, DWORD cbMax, DWORD cbOff);
     * }
     */
    public static int DdeGetData(MemorySegment hData, MemorySegment pDst, int cbMax, int cbOff) {
        var mh$ = DdeGetData$MH();
        try {
            return (int)mh$.invokeExact(hData, pDst, cbMax, cbOff);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeAccessData$MH() {
        return RuntimeHelper.requireNonNull(constants$594.DdeAccessData$MH,"DdeAccessData");
    }
    /**
     * {@snippet :
     * LPBYTE DdeAccessData(HDDEDATA hData, LPDWORD pcbDataSize);
     * }
     */
    public static MemorySegment DdeAccessData(MemorySegment hData, MemorySegment pcbDataSize) {
        var mh$ = DdeAccessData$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hData, pcbDataSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeUnaccessData$MH() {
        return RuntimeHelper.requireNonNull(constants$594.DdeUnaccessData$MH,"DdeUnaccessData");
    }
    /**
     * {@snippet :
     * BOOL DdeUnaccessData(HDDEDATA hData);
     * }
     */
    public static int DdeUnaccessData(MemorySegment hData) {
        var mh$ = DdeUnaccessData$MH();
        try {
            return (int)mh$.invokeExact(hData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeFreeDataHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$594.DdeFreeDataHandle$MH,"DdeFreeDataHandle");
    }
    /**
     * {@snippet :
     * BOOL DdeFreeDataHandle(HDDEDATA hData);
     * }
     */
    public static int DdeFreeDataHandle(MemorySegment hData) {
        var mh$ = DdeFreeDataHandle$MH();
        try {
            return (int)mh$.invokeExact(hData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeGetLastError$MH() {
        return RuntimeHelper.requireNonNull(constants$594.DdeGetLastError$MH,"DdeGetLastError");
    }
    /**
     * {@snippet :
     * UINT DdeGetLastError(DWORD idInst);
     * }
     */
    public static int DdeGetLastError(int idInst) {
        var mh$ = DdeGetLastError$MH();
        try {
            return (int)mh$.invokeExact(idInst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateStringHandleA$MH() {
        return RuntimeHelper.requireNonNull(constants$594.DdeCreateStringHandleA$MH,"DdeCreateStringHandleA");
    }
    /**
     * {@snippet :
     * HSZ DdeCreateStringHandleA(DWORD idInst, LPCSTR psz, int iCodePage);
     * }
     */
    public static MemorySegment DdeCreateStringHandleA(int idInst, MemorySegment psz, int iCodePage) {
        var mh$ = DdeCreateStringHandleA$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(idInst, psz, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateStringHandleW$MH() {
        return RuntimeHelper.requireNonNull(constants$595.DdeCreateStringHandleW$MH,"DdeCreateStringHandleW");
    }
    /**
     * {@snippet :
     * HSZ DdeCreateStringHandleW(DWORD idInst, LPCWSTR psz, int iCodePage);
     * }
     */
    public static MemorySegment DdeCreateStringHandleW(int idInst, MemorySegment psz, int iCodePage) {
        var mh$ = DdeCreateStringHandleW$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(idInst, psz, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$595.DdeQueryStringA$MH,"DdeQueryStringA");
    }
    /**
     * {@snippet :
     * DWORD DdeQueryStringA(DWORD idInst, HSZ hsz, LPSTR psz, DWORD cchMax, int iCodePage);
     * }
     */
    public static int DdeQueryStringA(int idInst, MemorySegment hsz, MemorySegment psz, int cchMax, int iCodePage) {
        var mh$ = DdeQueryStringA$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz, psz, cchMax, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$595.DdeQueryStringW$MH,"DdeQueryStringW");
    }
    /**
     * {@snippet :
     * DWORD DdeQueryStringW(DWORD idInst, HSZ hsz, LPWSTR psz, DWORD cchMax, int iCodePage);
     * }
     */
    public static int DdeQueryStringW(int idInst, MemorySegment hsz, MemorySegment psz, int cchMax, int iCodePage) {
        var mh$ = DdeQueryStringW$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz, psz, cchMax, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeFreeStringHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$595.DdeFreeStringHandle$MH,"DdeFreeStringHandle");
    }
    /**
     * {@snippet :
     * BOOL DdeFreeStringHandle(DWORD idInst, HSZ hsz);
     * }
     */
    public static int DdeFreeStringHandle(int idInst, MemorySegment hsz) {
        var mh$ = DdeFreeStringHandle$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeKeepStringHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$595.DdeKeepStringHandle$MH,"DdeKeepStringHandle");
    }
    /**
     * {@snippet :
     * BOOL DdeKeepStringHandle(DWORD idInst, HSZ hsz);
     * }
     */
    public static int DdeKeepStringHandle(int idInst, MemorySegment hsz) {
        var mh$ = DdeKeepStringHandle$MH();
        try {
            return (int)mh$.invokeExact(idInst, hsz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCmpStringHandles$MH() {
        return RuntimeHelper.requireNonNull(constants$595.DdeCmpStringHandles$MH,"DdeCmpStringHandles");
    }
    /**
     * {@snippet :
     * int DdeCmpStringHandles(HSZ hsz1, HSZ hsz2);
     * }
     */
    public static int DdeCmpStringHandles(MemorySegment hsz1, MemorySegment hsz2) {
        var mh$ = DdeCmpStringHandles$MH();
        try {
            return (int)mh$.invokeExact(hsz1, hsz2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagDDEML_MSG_HOOK_DATA* PDDEML_MSG_HOOK_DATA;
     * }
     */
    public static final OfAddress PDDEML_MSG_HOOK_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONMSGSTRUCT* PMONMSGSTRUCT;
     * }
     */
    public static final OfAddress PMONMSGSTRUCT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONCBSTRUCT* PMONCBSTRUCT;
     * }
     */
    public static final OfAddress PMONCBSTRUCT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONHSZSTRUCTA* PMONHSZSTRUCTA;
     * }
     */
    public static final OfAddress PMONHSZSTRUCTA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONHSZSTRUCTW* PMONHSZSTRUCTW;
     * }
     */
    public static final OfAddress PMONHSZSTRUCTW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONHSZSTRUCTA* PMONHSZSTRUCT;
     * }
     */
    public static final OfAddress PMONHSZSTRUCT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONERRSTRUCT* PMONERRSTRUCT;
     * }
     */
    public static final OfAddress PMONERRSTRUCT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONLINKSTRUCT* PMONLINKSTRUCT;
     * }
     */
    public static final OfAddress PMONLINKSTRUCT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMONCONVSTRUCT* PMONCONVSTRUCT;
     * }
     */
    public static final OfAddress PMONCONVSTRUCT = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle LZStart$MH() {
        return RuntimeHelper.requireNonNull(constants$596.LZStart$MH,"LZStart");
    }
    /**
     * {@snippet :
     * INT LZStart();
     * }
     */
    public static int LZStart() {
        var mh$ = LZStart$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZDone$MH() {
        return RuntimeHelper.requireNonNull(constants$596.LZDone$MH,"LZDone");
    }
    /**
     * {@snippet :
     * void LZDone();
     * }
     */
    public static void LZDone() {
        var mh$ = LZDone$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyLZFile$MH() {
        return RuntimeHelper.requireNonNull(constants$596.CopyLZFile$MH,"CopyLZFile");
    }
    /**
     * {@snippet :
     * LONG CopyLZFile(INT hfSource, INT hfDest);
     * }
     */
    public static int CopyLZFile(int hfSource, int hfDest) {
        var mh$ = CopyLZFile$MH();
        try {
            return (int)mh$.invokeExact(hfSource, hfDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$596.LZCopy$MH,"LZCopy");
    }
    /**
     * {@snippet :
     * LONG LZCopy(INT hfSource, INT hfDest);
     * }
     */
    public static int LZCopy(int hfSource, int hfDest) {
        var mh$ = LZCopy$MH();
        try {
            return (int)mh$.invokeExact(hfSource, hfDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZInit$MH() {
        return RuntimeHelper.requireNonNull(constants$596.LZInit$MH,"LZInit");
    }
    /**
     * {@snippet :
     * INT LZInit(INT hfSource);
     * }
     */
    public static int LZInit(int hfSource) {
        var mh$ = LZInit$MH();
        try {
            return (int)mh$.invokeExact(hfSource);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetExpandedNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$596.GetExpandedNameA$MH,"GetExpandedNameA");
    }
    /**
     * {@snippet :
     * INT GetExpandedNameA(LPSTR lpszSource, LPSTR lpszBuffer);
     * }
     */
    public static int GetExpandedNameA(MemorySegment lpszSource, MemorySegment lpszBuffer) {
        var mh$ = GetExpandedNameA$MH();
        try {
            return (int)mh$.invokeExact(lpszSource, lpszBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetExpandedNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$597.GetExpandedNameW$MH,"GetExpandedNameW");
    }
    /**
     * {@snippet :
     * INT GetExpandedNameW(LPWSTR lpszSource, LPWSTR lpszBuffer);
     * }
     */
    public static int GetExpandedNameW(MemorySegment lpszSource, MemorySegment lpszBuffer) {
        var mh$ = GetExpandedNameW$MH();
        try {
            return (int)mh$.invokeExact(lpszSource, lpszBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZOpenFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$597.LZOpenFileA$MH,"LZOpenFileA");
    }
    /**
     * {@snippet :
     * INT LZOpenFileA(LPSTR lpFileName, LPOFSTRUCT lpReOpenBuf, WORD wStyle);
     * }
     */
    public static int LZOpenFileA(MemorySegment lpFileName, MemorySegment lpReOpenBuf, short wStyle) {
        var mh$ = LZOpenFileA$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, lpReOpenBuf, wStyle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZOpenFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$597.LZOpenFileW$MH,"LZOpenFileW");
    }
    /**
     * {@snippet :
     * INT LZOpenFileW(LPWSTR lpFileName, LPOFSTRUCT lpReOpenBuf, WORD wStyle);
     * }
     */
    public static int LZOpenFileW(MemorySegment lpFileName, MemorySegment lpReOpenBuf, short wStyle) {
        var mh$ = LZOpenFileW$MH();
        try {
            return (int)mh$.invokeExact(lpFileName, lpReOpenBuf, wStyle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZSeek$MH() {
        return RuntimeHelper.requireNonNull(constants$597.LZSeek$MH,"LZSeek");
    }
    /**
     * {@snippet :
     * LONG LZSeek(INT hFile, LONG lOffset, INT iOrigin);
     * }
     */
    public static int LZSeek(int hFile, int lOffset, int iOrigin) {
        var mh$ = LZSeek$MH();
        try {
            return (int)mh$.invokeExact(hFile, lOffset, iOrigin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZRead$MH() {
        return RuntimeHelper.requireNonNull(constants$597.LZRead$MH,"LZRead");
    }
    /**
     * {@snippet :
     * INT LZRead(INT hFile, CHAR* lpBuffer, INT cbRead);
     * }
     */
    public static int LZRead(int hFile, MemorySegment lpBuffer, int cbRead) {
        var mh$ = LZRead$MH();
        try {
            return (int)mh$.invokeExact(hFile, lpBuffer, cbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZClose$MH() {
        return RuntimeHelper.requireNonNull(constants$597.LZClose$MH,"LZClose");
    }
    /**
     * {@snippet :
     * void LZClose(INT hFile);
     * }
     */
    public static void LZClose(int hFile) {
        var mh$ = LZClose$MH();
        try {
            mh$.invokeExact(hFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned int MMVERSION;
     * }
     */
    public static final OfInt MMVERSION = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int MMRESULT;
     * }
     */
    public static final OfInt MMRESULT = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int* LPUINT;
     * }
     */
    public static final OfAddress LPUINT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct mmtime_tag* PMMTIME;
     * }
     */
    public static final OfAddress PMMTIME = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct mmtime_tag* NPMMTIME;
     * }
     */
    public static final OfAddress NPMMTIME = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct mmtime_tag* LPMMTIME;
     * }
     */
    public static final OfAddress LPMMTIME = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HDRVR__* HDRVR;
     * }
     */
    public static final OfAddress HDRVR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long MCIERROR;
     * }
     */
    public static final OfInt MCIERROR = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int MCIDEVICEID;
     * }
     */
    public static final OfInt MCIDEVICEID = Constants$root.C_LONG$LAYOUT;
    public static MethodHandle mciSendCommandA$MH() {
        return RuntimeHelper.requireNonNull(constants$599.mciSendCommandA$MH,"mciSendCommandA");
    }
    /**
     * {@snippet :
     * MCIERROR mciSendCommandA(MCIDEVICEID mciId, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2);
     * }
     */
    public static int mciSendCommandA(int mciId, int uMsg, long dwParam1, long dwParam2) {
        var mh$ = mciSendCommandA$MH();
        try {
            return (int)mh$.invokeExact(mciId, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendCommandW$MH() {
        return RuntimeHelper.requireNonNull(constants$599.mciSendCommandW$MH,"mciSendCommandW");
    }
    /**
     * {@snippet :
     * MCIERROR mciSendCommandW(MCIDEVICEID mciId, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2);
     * }
     */
    public static int mciSendCommandW(int mciId, int uMsg, long dwParam1, long dwParam2) {
        var mh$ = mciSendCommandW$MH();
        try {
            return (int)mh$.invokeExact(mciId, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$599.mciSendStringA$MH,"mciSendStringA");
    }
    /**
     * {@snippet :
     * MCIERROR mciSendStringA(LPCSTR lpstrCommand, LPSTR lpstrReturnString, UINT uReturnLength, HWND hwndCallback);
     * }
     */
    public static int mciSendStringA(MemorySegment lpstrCommand, MemorySegment lpstrReturnString, int uReturnLength, MemorySegment hwndCallback) {
        var mh$ = mciSendStringA$MH();
        try {
            return (int)mh$.invokeExact(lpstrCommand, lpstrReturnString, uReturnLength, hwndCallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$599.mciSendStringW$MH,"mciSendStringW");
    }
    /**
     * {@snippet :
     * MCIERROR mciSendStringW(LPCWSTR lpstrCommand, LPWSTR lpstrReturnString, UINT uReturnLength, HWND hwndCallback);
     * }
     */
    public static int mciSendStringW(MemorySegment lpstrCommand, MemorySegment lpstrReturnString, int uReturnLength, MemorySegment hwndCallback) {
        var mh$ = mciSendStringW$MH();
        try {
            return (int)mh$.invokeExact(lpstrCommand, lpstrReturnString, uReturnLength, hwndCallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDA$MH() {
        return RuntimeHelper.requireNonNull(constants$600.mciGetDeviceIDA$MH,"mciGetDeviceIDA");
    }
    /**
     * {@snippet :
     * MCIDEVICEID mciGetDeviceIDA(LPCSTR pszDevice);
     * }
     */
    public static int mciGetDeviceIDA(MemorySegment pszDevice) {
        var mh$ = mciGetDeviceIDA$MH();
        try {
            return (int)mh$.invokeExact(pszDevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDW$MH() {
        return RuntimeHelper.requireNonNull(constants$600.mciGetDeviceIDW$MH,"mciGetDeviceIDW");
    }
    /**
     * {@snippet :
     * MCIDEVICEID mciGetDeviceIDW(LPCWSTR pszDevice);
     * }
     */
    public static int mciGetDeviceIDW(MemorySegment pszDevice) {
        var mh$ = mciGetDeviceIDW$MH();
        try {
            return (int)mh$.invokeExact(pszDevice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDFromElementIDA$MH() {
        return RuntimeHelper.requireNonNull(constants$600.mciGetDeviceIDFromElementIDA$MH,"mciGetDeviceIDFromElementIDA");
    }
    /**
     * {@snippet :
     * MCIDEVICEID mciGetDeviceIDFromElementIDA(DWORD dwElementID, LPCSTR lpstrType);
     * }
     */
    public static int mciGetDeviceIDFromElementIDA(int dwElementID, MemorySegment lpstrType) {
        var mh$ = mciGetDeviceIDFromElementIDA$MH();
        try {
            return (int)mh$.invokeExact(dwElementID, lpstrType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDFromElementIDW$MH() {
        return RuntimeHelper.requireNonNull(constants$600.mciGetDeviceIDFromElementIDW$MH,"mciGetDeviceIDFromElementIDW");
    }
    /**
     * {@snippet :
     * MCIDEVICEID mciGetDeviceIDFromElementIDW(DWORD dwElementID, LPCWSTR lpstrType);
     * }
     */
    public static int mciGetDeviceIDFromElementIDW(int dwElementID, MemorySegment lpstrType) {
        var mh$ = mciGetDeviceIDFromElementIDW$MH();
        try {
            return (int)mh$.invokeExact(dwElementID, lpstrType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetErrorStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$600.mciGetErrorStringA$MH,"mciGetErrorStringA");
    }
    /**
     * {@snippet :
     * BOOL mciGetErrorStringA(MCIERROR mcierr, LPSTR pszText, UINT cchText);
     * }
     */
    public static int mciGetErrorStringA(int mcierr, MemorySegment pszText, int cchText) {
        var mh$ = mciGetErrorStringA$MH();
        try {
            return (int)mh$.invokeExact(mcierr, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetErrorStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$600.mciGetErrorStringW$MH,"mciGetErrorStringW");
    }
    /**
     * {@snippet :
     * BOOL mciGetErrorStringW(MCIERROR mcierr, LPWSTR pszText, UINT cchText);
     * }
     */
    public static int mciGetErrorStringW(int mcierr, MemorySegment pszText, int cchText) {
        var mh$ = mciGetErrorStringW$MH();
        try {
            return (int)mh$.invokeExact(mcierr, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSetYieldProc$MH() {
        return RuntimeHelper.requireNonNull(constants$601.mciSetYieldProc$MH,"mciSetYieldProc");
    }
    /**
     * {@snippet :
     * BOOL mciSetYieldProc(MCIDEVICEID mciId, YIELDPROC fpYieldProc, DWORD dwYieldData);
     * }
     */
    public static int mciSetYieldProc(int mciId, MemorySegment fpYieldProc, int dwYieldData) {
        var mh$ = mciSetYieldProc$MH();
        try {
            return (int)mh$.invokeExact(mciId, fpYieldProc, dwYieldData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetCreatorTask$MH() {
        return RuntimeHelper.requireNonNull(constants$601.mciGetCreatorTask$MH,"mciGetCreatorTask");
    }
    /**
     * {@snippet :
     * HTASK mciGetCreatorTask(MCIDEVICEID mciId);
     * }
     */
    public static MemorySegment mciGetCreatorTask(int mciId) {
        var mh$ = mciGetCreatorTask$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mciId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetYieldProc$MH() {
        return RuntimeHelper.requireNonNull(constants$601.mciGetYieldProc$MH,"mciGetYieldProc");
    }
    /**
     * {@snippet :
     * YIELDPROC mciGetYieldProc(MCIDEVICEID mciId, LPDWORD pdwYieldData);
     * }
     */
    public static MemorySegment mciGetYieldProc(int mciId, MemorySegment pdwYieldData) {
        var mh$ = mciGetYieldProc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(mciId, pdwYieldData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagMCI_GENERIC_PARMS* PMCI_GENERIC_PARMS;
     * }
     */
    public static final OfAddress PMCI_GENERIC_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_GENERIC_PARMS* LPMCI_GENERIC_PARMS;
     * }
     */
    public static final OfAddress LPMCI_GENERIC_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OPEN_PARMSA* PMCI_OPEN_PARMSA;
     * }
     */
    public static final OfAddress PMCI_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OPEN_PARMSA* LPMCI_OPEN_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OPEN_PARMSW* PMCI_OPEN_PARMSW;
     * }
     */
    public static final OfAddress PMCI_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OPEN_PARMSW* LPMCI_OPEN_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OPEN_PARMSA* PMCI_OPEN_PARMS;
     * }
     */
    public static final OfAddress PMCI_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OPEN_PARMSA* LPMCI_OPEN_PARMS;
     * }
     */
    public static final OfAddress LPMCI_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_PLAY_PARMS* PMCI_PLAY_PARMS;
     * }
     */
    public static final OfAddress PMCI_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_PLAY_PARMS* LPMCI_PLAY_PARMS;
     * }
     */
    public static final OfAddress LPMCI_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SEEK_PARMS* PMCI_SEEK_PARMS;
     * }
     */
    public static final OfAddress PMCI_SEEK_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SEEK_PARMS* LPMCI_SEEK_PARMS;
     * }
     */
    public static final OfAddress LPMCI_SEEK_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_STATUS_PARMS* PMCI_STATUS_PARMS;
     * }
     */
    public static final OfAddress PMCI_STATUS_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_STATUS_PARMS* LPMCI_STATUS_PARMS;
     * }
     */
    public static final OfAddress LPMCI_STATUS_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_INFO_PARMSA* LPMCI_INFO_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_INFO_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_INFO_PARMSW* LPMCI_INFO_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_INFO_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_INFO_PARMSA* LPMCI_INFO_PARMS;
     * }
     */
    public static final OfAddress LPMCI_INFO_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_GETDEVCAPS_PARMS* PMCI_GETDEVCAPS_PARMS;
     * }
     */
    public static final OfAddress PMCI_GETDEVCAPS_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_GETDEVCAPS_PARMS* LPMCI_GETDEVCAPS_PARMS;
     * }
     */
    public static final OfAddress LPMCI_GETDEVCAPS_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SYSINFO_PARMSA* PMCI_SYSINFO_PARMSA;
     * }
     */
    public static final OfAddress PMCI_SYSINFO_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SYSINFO_PARMSA* LPMCI_SYSINFO_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_SYSINFO_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SYSINFO_PARMSW* PMCI_SYSINFO_PARMSW;
     * }
     */
    public static final OfAddress PMCI_SYSINFO_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SYSINFO_PARMSW* LPMCI_SYSINFO_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_SYSINFO_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SYSINFO_PARMSA* PMCI_SYSINFO_PARMS;
     * }
     */
    public static final OfAddress PMCI_SYSINFO_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SYSINFO_PARMSA* LPMCI_SYSINFO_PARMS;
     * }
     */
    public static final OfAddress LPMCI_SYSINFO_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SET_PARMS* PMCI_SET_PARMS;
     * }
     */
    public static final OfAddress PMCI_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SET_PARMS* LPMCI_SET_PARMS;
     * }
     */
    public static final OfAddress LPMCI_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_BREAK_PARMS* PMCI_BREAK_PARMS;
     * }
     */
    public static final OfAddress PMCI_BREAK_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_BREAK_PARMS* LPMCI_BREAK_PARMS;
     * }
     */
    public static final OfAddress LPMCI_BREAK_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SAVE_PARMSA* PMCI_SAVE_PARMSA;
     * }
     */
    public static final OfAddress PMCI_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SAVE_PARMSA* LPMCI_SAVE_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SAVE_PARMSW* PMCI_SAVE_PARMSW;
     * }
     */
    public static final OfAddress PMCI_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SAVE_PARMSW* LPMCI_SAVE_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SAVE_PARMSA* PMCI_SAVE_PARMS;
     * }
     */
    public static final OfAddress PMCI_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SAVE_PARMSA* LPMCI_SAVE_PARMS;
     * }
     */
    public static final OfAddress LPMCI_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_LOAD_PARMSA* PMCI_LOAD_PARMSA;
     * }
     */
    public static final OfAddress PMCI_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_LOAD_PARMSA* LPMCI_LOAD_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_LOAD_PARMSW* PMCI_LOAD_PARMSW;
     * }
     */
    public static final OfAddress PMCI_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_LOAD_PARMSW* LPMCI_LOAD_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_LOAD_PARMSA* PMCI_LOAD_PARMS;
     * }
     */
    public static final OfAddress PMCI_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_LOAD_PARMSA* LPMCI_LOAD_PARMS;
     * }
     */
    public static final OfAddress LPMCI_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_RECORD_PARMS* LPMCI_RECORD_PARMS;
     * }
     */
    public static final OfAddress LPMCI_RECORD_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_PLAY_PARMS* PMCI_VD_PLAY_PARMS;
     * }
     */
    public static final OfAddress PMCI_VD_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_PLAY_PARMS* LPMCI_VD_PLAY_PARMS;
     * }
     */
    public static final OfAddress LPMCI_VD_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_STEP_PARMS* PMCI_VD_STEP_PARMS;
     * }
     */
    public static final OfAddress PMCI_VD_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_STEP_PARMS* LPMCI_VD_STEP_PARMS;
     * }
     */
    public static final OfAddress LPMCI_VD_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_ESCAPE_PARMSA* PMCI_VD_ESCAPE_PARMSA;
     * }
     */
    public static final OfAddress PMCI_VD_ESCAPE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_ESCAPE_PARMSA* LPMCI_VD_ESCAPE_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_VD_ESCAPE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_ESCAPE_PARMSW* PMCI_VD_ESCAPE_PARMSW;
     * }
     */
    public static final OfAddress PMCI_VD_ESCAPE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_ESCAPE_PARMSW* LPMCI_VD_ESCAPE_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_VD_ESCAPE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_ESCAPE_PARMSA* PMCI_VD_ESCAPE_PARMS;
     * }
     */
    public static final OfAddress PMCI_VD_ESCAPE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_VD_ESCAPE_PARMSA* LPMCI_VD_ESCAPE_PARMS;
     * }
     */
    public static final OfAddress LPMCI_VD_ESCAPE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_OPEN_PARMSA* PMCI_WAVE_OPEN_PARMSA;
     * }
     */
    public static final OfAddress PMCI_WAVE_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_OPEN_PARMSA* LPMCI_WAVE_OPEN_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_WAVE_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_OPEN_PARMSW* PMCI_WAVE_OPEN_PARMSW;
     * }
     */
    public static final OfAddress PMCI_WAVE_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_OPEN_PARMSW* LPMCI_WAVE_OPEN_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_WAVE_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_OPEN_PARMSA* PMCI_WAVE_OPEN_PARMS;
     * }
     */
    public static final OfAddress PMCI_WAVE_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_OPEN_PARMSA* LPMCI_WAVE_OPEN_PARMS;
     * }
     */
    public static final OfAddress LPMCI_WAVE_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_DELETE_PARMS* PMCI_WAVE_DELETE_PARMS;
     * }
     */
    public static final OfAddress PMCI_WAVE_DELETE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_DELETE_PARMS* LPMCI_WAVE_DELETE_PARMS;
     * }
     */
    public static final OfAddress LPMCI_WAVE_DELETE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_SET_PARMS* PMCI_WAVE_SET_PARMS;
     * }
     */
    public static final OfAddress PMCI_WAVE_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_WAVE_SET_PARMS* LPMCI_WAVE_SET_PARMS;
     * }
     */
    public static final OfAddress LPMCI_WAVE_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SEQ_SET_PARMS* PMCI_SEQ_SET_PARMS;
     * }
     */
    public static final OfAddress PMCI_SEQ_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_SEQ_SET_PARMS* LPMCI_SEQ_SET_PARMS;
     * }
     */
    public static final OfAddress LPMCI_SEQ_SET_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_OPEN_PARMSA* PMCI_ANIM_OPEN_PARMSA;
     * }
     */
    public static final OfAddress PMCI_ANIM_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_OPEN_PARMSA* LPMCI_ANIM_OPEN_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_ANIM_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_OPEN_PARMSW* PMCI_ANIM_OPEN_PARMSW;
     * }
     */
    public static final OfAddress PMCI_ANIM_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_OPEN_PARMSW* LPMCI_ANIM_OPEN_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_ANIM_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_OPEN_PARMSA* PMCI_ANIM_OPEN_PARMS;
     * }
     */
    public static final OfAddress PMCI_ANIM_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_OPEN_PARMSA* LPMCI_ANIM_OPEN_PARMS;
     * }
     */
    public static final OfAddress LPMCI_ANIM_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_PLAY_PARMS* PMCI_ANIM_PLAY_PARMS;
     * }
     */
    public static final OfAddress PMCI_ANIM_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_PLAY_PARMS* LPMCI_ANIM_PLAY_PARMS;
     * }
     */
    public static final OfAddress LPMCI_ANIM_PLAY_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_STEP_PARMS* PMCI_ANIM_STEP_PARMS;
     * }
     */
    public static final OfAddress PMCI_ANIM_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_STEP_PARMS* LPMCI_ANIM_STEP_PARMS;
     * }
     */
    public static final OfAddress LPMCI_ANIM_STEP_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_WINDOW_PARMSA* PMCI_ANIM_WINDOW_PARMSA;
     * }
     */
    public static final OfAddress PMCI_ANIM_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_WINDOW_PARMSA* LPMCI_ANIM_WINDOW_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_ANIM_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_WINDOW_PARMSW* PMCI_ANIM_WINDOW_PARMSW;
     * }
     */
    public static final OfAddress PMCI_ANIM_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_WINDOW_PARMSW* LPMCI_ANIM_WINDOW_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_ANIM_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_WINDOW_PARMSA* PMCI_ANIM_WINDOW_PARMS;
     * }
     */
    public static final OfAddress PMCI_ANIM_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_WINDOW_PARMSA* LPMCI_ANIM_WINDOW_PARMS;
     * }
     */
    public static final OfAddress LPMCI_ANIM_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_RECT_PARMS* PMCI_ANIM_RECT_PARMS;
     * }
     */
    public static final OfAddress PMCI_ANIM_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_RECT_PARMS* LPMCI_ANIM_RECT_PARMS;
     * }
     */
    public static final OfAddress LPMCI_ANIM_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_UPDATE_PARMS* PMCI_ANIM_UPDATE_PARMS;
     * }
     */
    public static final OfAddress PMCI_ANIM_UPDATE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_ANIM_UPDATE_PARMS* LPMCI_ANIM_UPDATE_PARMS;
     * }
     */
    public static final OfAddress LPMCI_ANIM_UPDATE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_OPEN_PARMSA* PMCI_OVLY_OPEN_PARMSA;
     * }
     */
    public static final OfAddress PMCI_OVLY_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_OPEN_PARMSA* LPMCI_OVLY_OPEN_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_OVLY_OPEN_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_OPEN_PARMSW* PMCI_OVLY_OPEN_PARMSW;
     * }
     */
    public static final OfAddress PMCI_OVLY_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_OPEN_PARMSW* LPMCI_OVLY_OPEN_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_OVLY_OPEN_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_OPEN_PARMSA* PMCI_OVLY_OPEN_PARMS;
     * }
     */
    public static final OfAddress PMCI_OVLY_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_OPEN_PARMSA* LPMCI_OVLY_OPEN_PARMS;
     * }
     */
    public static final OfAddress LPMCI_OVLY_OPEN_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_WINDOW_PARMSA* PMCI_OVLY_WINDOW_PARMSA;
     * }
     */
    public static final OfAddress PMCI_OVLY_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_WINDOW_PARMSA* LPMCI_OVLY_WINDOW_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_OVLY_WINDOW_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_WINDOW_PARMSW* PMCI_OVLY_WINDOW_PARMSW;
     * }
     */
    public static final OfAddress PMCI_OVLY_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_WINDOW_PARMSW* LPMCI_OVLY_WINDOW_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_OVLY_WINDOW_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_WINDOW_PARMSA* PMCI_OVLY_WINDOW_PARMS;
     * }
     */
    public static final OfAddress PMCI_OVLY_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_WINDOW_PARMSA* LPMCI_OVLY_WINDOW_PARMS;
     * }
     */
    public static final OfAddress LPMCI_OVLY_WINDOW_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_RECT_PARMS* PMCI_OVLY_RECT_PARMS;
     * }
     */
    public static final OfAddress PMCI_OVLY_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_RECT_PARMS* LPMCI_OVLY_RECT_PARMS;
     * }
     */
    public static final OfAddress LPMCI_OVLY_RECT_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_SAVE_PARMSA* PMCI_OVLY_SAVE_PARMSA;
     * }
     */
    public static final OfAddress PMCI_OVLY_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_SAVE_PARMSA* LPMCI_OVLY_SAVE_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_OVLY_SAVE_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_SAVE_PARMSW* PMCI_OVLY_SAVE_PARMSW;
     * }
     */
    public static final OfAddress PMCI_OVLY_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_SAVE_PARMSW* LPMCI_OVLY_SAVE_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_OVLY_SAVE_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_SAVE_PARMSA* PMCI_OVLY_SAVE_PARMS;
     * }
     */
    public static final OfAddress PMCI_OVLY_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_SAVE_PARMSA* LPMCI_OVLY_SAVE_PARMS;
     * }
     */
    public static final OfAddress LPMCI_OVLY_SAVE_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_LOAD_PARMSA* PMCI_OVLY_LOAD_PARMSA;
     * }
     */
    public static final OfAddress PMCI_OVLY_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_LOAD_PARMSA* LPMCI_OVLY_LOAD_PARMSA;
     * }
     */
    public static final OfAddress LPMCI_OVLY_LOAD_PARMSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_LOAD_PARMSW* PMCI_OVLY_LOAD_PARMSW;
     * }
     */
    public static final OfAddress PMCI_OVLY_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_LOAD_PARMSW* LPMCI_OVLY_LOAD_PARMSW;
     * }
     */
    public static final OfAddress LPMCI_OVLY_LOAD_PARMSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_LOAD_PARMSA* PMCI_OVLY_LOAD_PARMS;
     * }
     */
    public static final OfAddress PMCI_OVLY_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMCI_OVLY_LOAD_PARMSA* LPMCI_OVLY_LOAD_PARMS;
     * }
     */
    public static final OfAddress LPMCI_OVLY_LOAD_PARMS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mciGetDriverData$MH() {
        return RuntimeHelper.requireNonNull(constants$601.mciGetDriverData$MH,"mciGetDriverData");
    }
    /**
     * {@snippet :
     * DWORD_PTR mciGetDriverData(MCIDEVICEID wDeviceID);
     * }
     */
    public static long mciGetDriverData(int wDeviceID) {
        var mh$ = mciGetDriverData$MH();
        try {
            return (long)mh$.invokeExact(wDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciLoadCommandResource$MH() {
        return RuntimeHelper.requireNonNull(constants$601.mciLoadCommandResource$MH,"mciLoadCommandResource");
    }
    /**
     * {@snippet :
     * UINT mciLoadCommandResource(HANDLE hInstance, LPCWSTR lpResName, UINT wType);
     * }
     */
    public static int mciLoadCommandResource(MemorySegment hInstance, MemorySegment lpResName, int wType) {
        var mh$ = mciLoadCommandResource$MH();
        try {
            return (int)mh$.invokeExact(hInstance, lpResName, wType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSetDriverData$MH() {
        return RuntimeHelper.requireNonNull(constants$601.mciSetDriverData$MH,"mciSetDriverData");
    }
    /**
     * {@snippet :
     * BOOL mciSetDriverData(MCIDEVICEID wDeviceID, DWORD_PTR dwData);
     * }
     */
    public static int mciSetDriverData(int wDeviceID, long dwData) {
        var mh$ = mciSetDriverData$MH();
        try {
            return (int)mh$.invokeExact(wDeviceID, dwData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciDriverYield$MH() {
        return RuntimeHelper.requireNonNull(constants$602.mciDriverYield$MH,"mciDriverYield");
    }
    /**
     * {@snippet :
     * UINT mciDriverYield(MCIDEVICEID wDeviceID);
     * }
     */
    public static int mciDriverYield(int wDeviceID) {
        var mh$ = mciDriverYield$MH();
        try {
            return (int)mh$.invokeExact(wDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciDriverNotify$MH() {
        return RuntimeHelper.requireNonNull(constants$602.mciDriverNotify$MH,"mciDriverNotify");
    }
    /**
     * {@snippet :
     * BOOL mciDriverNotify(HANDLE hwndCallback, MCIDEVICEID wDeviceID, UINT uStatus);
     * }
     */
    public static int mciDriverNotify(MemorySegment hwndCallback, int wDeviceID, int uStatus) {
        var mh$ = mciDriverNotify$MH();
        try {
            return (int)mh$.invokeExact(hwndCallback, wDeviceID, uStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciFreeCommandResource$MH() {
        return RuntimeHelper.requireNonNull(constants$602.mciFreeCommandResource$MH,"mciFreeCommandResource");
    }
    /**
     * {@snippet :
     * BOOL mciFreeCommandResource(UINT wTable);
     * }
     */
    public static int mciFreeCommandResource(int wTable) {
        var mh$ = mciFreeCommandResource$MH();
        try {
            return (int)mh$.invokeExact(wTable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct DRVCONFIGINFOEX* PDRVCONFIGINFOEX;
     * }
     */
    public static final OfAddress PDRVCONFIGINFOEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct DRVCONFIGINFOEX* NPDRVCONFIGINFOEX;
     * }
     */
    public static final OfAddress NPDRVCONFIGINFOEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct DRVCONFIGINFOEX* LPDRVCONFIGINFOEX;
     * }
     */
    public static final OfAddress LPDRVCONFIGINFOEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagDRVCONFIGINFO* PDRVCONFIGINFO;
     * }
     */
    public static final OfAddress PDRVCONFIGINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagDRVCONFIGINFO* NPDRVCONFIGINFO;
     * }
     */
    public static final OfAddress NPDRVCONFIGINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagDRVCONFIGINFO* LPDRVCONFIGINFO;
     * }
     */
    public static final OfAddress LPDRVCONFIGINFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CloseDriver$MH() {
        return RuntimeHelper.requireNonNull(constants$602.CloseDriver$MH,"CloseDriver");
    }
    /**
     * {@snippet :
     * LRESULT CloseDriver(HDRVR hDriver, LPARAM lParam1, LPARAM lParam2);
     * }
     */
    public static long CloseDriver(MemorySegment hDriver, long lParam1, long lParam2) {
        var mh$ = CloseDriver$MH();
        try {
            return (long)mh$.invokeExact(hDriver, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenDriver$MH() {
        return RuntimeHelper.requireNonNull(constants$603.OpenDriver$MH,"OpenDriver");
    }
    /**
     * {@snippet :
     * HDRVR OpenDriver(LPCWSTR szDriverName, LPCWSTR szSectionName, LPARAM lParam2);
     * }
     */
    public static MemorySegment OpenDriver(MemorySegment szDriverName, MemorySegment szSectionName, long lParam2) {
        var mh$ = OpenDriver$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(szDriverName, szSectionName, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendDriverMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$603.SendDriverMessage$MH,"SendDriverMessage");
    }
    /**
     * {@snippet :
     * LRESULT SendDriverMessage(HDRVR hDriver, UINT message, LPARAM lParam1, LPARAM lParam2);
     * }
     */
    public static long SendDriverMessage(MemorySegment hDriver, int message, long lParam1, long lParam2) {
        var mh$ = SendDriverMessage$MH();
        try {
            return (long)mh$.invokeExact(hDriver, message, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrvGetModuleHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$603.DrvGetModuleHandle$MH,"DrvGetModuleHandle");
    }
    /**
     * {@snippet :
     * HMODULE DrvGetModuleHandle(HDRVR hDriver);
     * }
     */
    public static MemorySegment DrvGetModuleHandle(MemorySegment hDriver) {
        var mh$ = DrvGetModuleHandle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hDriver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDriverModuleHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$603.GetDriverModuleHandle$MH,"GetDriverModuleHandle");
    }
    /**
     * {@snippet :
     * HMODULE GetDriverModuleHandle(HDRVR hDriver);
     * }
     */
    public static MemorySegment GetDriverModuleHandle(MemorySegment hDriver) {
        var mh$ = GetDriverModuleHandle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(hDriver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefDriverProc$MH() {
        return RuntimeHelper.requireNonNull(constants$603.DefDriverProc$MH,"DefDriverProc");
    }
    /**
     * {@snippet :
     * LRESULT DefDriverProc(DWORD_PTR dwDriverIdentifier, HDRVR hdrvr, UINT uMsg, LPARAM lParam1, LPARAM lParam2);
     * }
     */
    public static long DefDriverProc(long dwDriverIdentifier, MemorySegment hdrvr, int uMsg, long lParam1, long lParam2) {
        var mh$ = DefDriverProc$MH();
        try {
            return (long)mh$.invokeExact(dwDriverIdentifier, hdrvr, uMsg, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DriverCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$603.DriverCallback$MH,"DriverCallback");
    }
    /**
     * {@snippet :
     * BOOL DriverCallback(DWORD_PTR dwCallback, DWORD dwFlags, HDRVR hDevice, DWORD dwMsg, DWORD_PTR dwUser, DWORD_PTR dwParam1, DWORD_PTR dwParam2);
     * }
     */
    public static int DriverCallback(long dwCallback, int dwFlags, MemorySegment hDevice, int dwMsg, long dwUser, long dwParam1, long dwParam2) {
        var mh$ = DriverCallback$MH();
        try {
            return (int)mh$.invokeExact(dwCallback, dwFlags, hDevice, dwMsg, dwUser, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndOpenSound$MH() {
        return RuntimeHelper.requireNonNull(constants$604.sndOpenSound$MH,"sndOpenSound");
    }
    /**
     * {@snippet :
     * LONG sndOpenSound(LPCWSTR EventName, LPCWSTR AppName, INT32 Flags, PHANDLE FileHandle);
     * }
     */
    public static int sndOpenSound(MemorySegment EventName, MemorySegment AppName, int Flags, MemorySegment FileHandle) {
        var mh$ = sndOpenSound$MH();
        try {
            return (int)mh$.invokeExact(EventName, AppName, Flags, FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmDrvInstall$MH() {
        return RuntimeHelper.requireNonNull(constants$604.mmDrvInstall$MH,"mmDrvInstall");
    }
    /**
     * {@snippet :
     * UINT mmDrvInstall(HDRVR hDriver, LPCWSTR wszDrvEntry, DRIVERMSGPROC drvMessage, UINT wFlags);
     * }
     */
    public static int mmDrvInstall(MemorySegment hDriver, MemorySegment wszDrvEntry, MemorySegment drvMessage, int wFlags) {
        var mh$ = mmDrvInstall$MH();
        try {
            return (int)mh$.invokeExact(hDriver, wszDrvEntry, drvMessage, wFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned long FOURCC;
     * }
     */
    public static final OfInt FOURCC = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef char* HPSTR;
     * }
     */
    public static final OfAddress HPSTR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMMIO__* HMMIO;
     * }
     */
    public static final OfAddress HMMIO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMIOINFO* PMMIOINFO;
     * }
     */
    public static final OfAddress PMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMIOINFO* NPMMIOINFO;
     * }
     */
    public static final OfAddress NPMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMIOINFO* LPMMIOINFO;
     * }
     */
    public static final OfAddress LPMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMIOINFO* LPCMMIOINFO;
     * }
     */
    public static final OfAddress LPCMMIOINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMCKINFO* PMMCKINFO;
     * }
     */
    public static final OfAddress PMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMCKINFO* NPMMCKINFO;
     * }
     */
    public static final OfAddress NPMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMCKINFO* LPMMCKINFO;
     * }
     */
    public static final OfAddress LPMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MMCKINFO* LPCMMCKINFO;
     * }
     */
    public static final OfAddress LPCMMCKINFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mmioStringToFOURCCA$MH() {
        return RuntimeHelper.requireNonNull(constants$605.mmioStringToFOURCCA$MH,"mmioStringToFOURCCA");
    }
    /**
     * {@snippet :
     * FOURCC mmioStringToFOURCCA(LPCSTR sz, UINT uFlags);
     * }
     */
    public static int mmioStringToFOURCCA(MemorySegment sz, int uFlags) {
        var mh$ = mmioStringToFOURCCA$MH();
        try {
            return (int)mh$.invokeExact(sz, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioStringToFOURCCW$MH() {
        return RuntimeHelper.requireNonNull(constants$605.mmioStringToFOURCCW$MH,"mmioStringToFOURCCW");
    }
    /**
     * {@snippet :
     * FOURCC mmioStringToFOURCCW(LPCWSTR sz, UINT uFlags);
     * }
     */
    public static int mmioStringToFOURCCW(MemorySegment sz, int uFlags) {
        var mh$ = mmioStringToFOURCCW$MH();
        try {
            return (int)mh$.invokeExact(sz, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioInstallIOProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$605.mmioInstallIOProcA$MH,"mmioInstallIOProcA");
    }
    /**
     * {@snippet :
     * LPMMIOPROC mmioInstallIOProcA(FOURCC fccIOProc, LPMMIOPROC pIOProc, DWORD dwFlags);
     * }
     */
    public static MemorySegment mmioInstallIOProcA(int fccIOProc, MemorySegment pIOProc, int dwFlags) {
        var mh$ = mmioInstallIOProcA$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fccIOProc, pIOProc, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioInstallIOProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$605.mmioInstallIOProcW$MH,"mmioInstallIOProcW");
    }
    /**
     * {@snippet :
     * LPMMIOPROC mmioInstallIOProcW(FOURCC fccIOProc, LPMMIOPROC pIOProc, DWORD dwFlags);
     * }
     */
    public static MemorySegment mmioInstallIOProcW(int fccIOProc, MemorySegment pIOProc, int dwFlags) {
        var mh$ = mmioInstallIOProcW$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(fccIOProc, pIOProc, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioOpenA$MH() {
        return RuntimeHelper.requireNonNull(constants$606.mmioOpenA$MH,"mmioOpenA");
    }
    /**
     * {@snippet :
     * HMMIO mmioOpenA(LPSTR pszFileName, LPMMIOINFO pmmioinfo, DWORD fdwOpen);
     * }
     */
    public static MemorySegment mmioOpenA(MemorySegment pszFileName, MemorySegment pmmioinfo, int fdwOpen) {
        var mh$ = mmioOpenA$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pszFileName, pmmioinfo, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioOpenW$MH() {
        return RuntimeHelper.requireNonNull(constants$606.mmioOpenW$MH,"mmioOpenW");
    }
    /**
     * {@snippet :
     * HMMIO mmioOpenW(LPWSTR pszFileName, LPMMIOINFO pmmioinfo, DWORD fdwOpen);
     * }
     */
    public static MemorySegment mmioOpenW(MemorySegment pszFileName, MemorySegment pmmioinfo, int fdwOpen) {
        var mh$ = mmioOpenW$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(pszFileName, pmmioinfo, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRenameA$MH() {
        return RuntimeHelper.requireNonNull(constants$606.mmioRenameA$MH,"mmioRenameA");
    }
    /**
     * {@snippet :
     * MMRESULT mmioRenameA(LPCSTR pszFileName, LPCSTR pszNewFileName, LPCMMIOINFO pmmioinfo, DWORD fdwRename);
     * }
     */
    public static int mmioRenameA(MemorySegment pszFileName, MemorySegment pszNewFileName, MemorySegment pmmioinfo, int fdwRename) {
        var mh$ = mmioRenameA$MH();
        try {
            return (int)mh$.invokeExact(pszFileName, pszNewFileName, pmmioinfo, fdwRename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRenameW$MH() {
        return RuntimeHelper.requireNonNull(constants$606.mmioRenameW$MH,"mmioRenameW");
    }
    /**
     * {@snippet :
     * MMRESULT mmioRenameW(LPCWSTR pszFileName, LPCWSTR pszNewFileName, LPCMMIOINFO pmmioinfo, DWORD fdwRename);
     * }
     */
    public static int mmioRenameW(MemorySegment pszFileName, MemorySegment pszNewFileName, MemorySegment pmmioinfo, int fdwRename) {
        var mh$ = mmioRenameW$MH();
        try {
            return (int)mh$.invokeExact(pszFileName, pszNewFileName, pmmioinfo, fdwRename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioClose$MH() {
        return RuntimeHelper.requireNonNull(constants$606.mmioClose$MH,"mmioClose");
    }
    /**
     * {@snippet :
     * MMRESULT mmioClose(HMMIO hmmio, UINT fuClose);
     * }
     */
    public static int mmioClose(MemorySegment hmmio, int fuClose) {
        var mh$ = mmioClose$MH();
        try {
            return (int)mh$.invokeExact(hmmio, fuClose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRead$MH() {
        return RuntimeHelper.requireNonNull(constants$606.mmioRead$MH,"mmioRead");
    }
    /**
     * {@snippet :
     * LONG mmioRead(HMMIO hmmio, HPSTR pch, LONG cch);
     * }
     */
    public static int mmioRead(MemorySegment hmmio, MemorySegment pch, int cch) {
        var mh$ = mmioRead$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pch, cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$607.mmioWrite$MH,"mmioWrite");
    }
    /**
     * {@snippet :
     * LONG mmioWrite(HMMIO hmmio, char* pch, LONG cch);
     * }
     */
    public static int mmioWrite(MemorySegment hmmio, MemorySegment pch, int cch) {
        var mh$ = mmioWrite$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pch, cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSeek$MH() {
        return RuntimeHelper.requireNonNull(constants$607.mmioSeek$MH,"mmioSeek");
    }
    /**
     * {@snippet :
     * LONG mmioSeek(HMMIO hmmio, LONG lOffset, int iOrigin);
     * }
     */
    public static int mmioSeek(MemorySegment hmmio, int lOffset, int iOrigin) {
        var mh$ = mmioSeek$MH();
        try {
            return (int)mh$.invokeExact(hmmio, lOffset, iOrigin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioGetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$607.mmioGetInfo$MH,"mmioGetInfo");
    }
    /**
     * {@snippet :
     * MMRESULT mmioGetInfo(HMMIO hmmio, LPMMIOINFO pmmioinfo, UINT fuInfo);
     * }
     */
    public static int mmioGetInfo(MemorySegment hmmio, MemorySegment pmmioinfo, int fuInfo) {
        var mh$ = mmioGetInfo$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmioinfo, fuInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$607.mmioSetInfo$MH,"mmioSetInfo");
    }
    /**
     * {@snippet :
     * MMRESULT mmioSetInfo(HMMIO hmmio, LPCMMIOINFO pmmioinfo, UINT fuInfo);
     * }
     */
    public static int mmioSetInfo(MemorySegment hmmio, MemorySegment pmmioinfo, int fuInfo) {
        var mh$ = mmioSetInfo$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmioinfo, fuInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$607.mmioSetBuffer$MH,"mmioSetBuffer");
    }
    /**
     * {@snippet :
     * MMRESULT mmioSetBuffer(HMMIO hmmio, LPSTR pchBuffer, LONG cchBuffer, UINT fuBuffer);
     * }
     */
    public static int mmioSetBuffer(MemorySegment hmmio, MemorySegment pchBuffer, int cchBuffer, int fuBuffer) {
        var mh$ = mmioSetBuffer$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pchBuffer, cchBuffer, fuBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioFlush$MH() {
        return RuntimeHelper.requireNonNull(constants$607.mmioFlush$MH,"mmioFlush");
    }
    /**
     * {@snippet :
     * MMRESULT mmioFlush(HMMIO hmmio, UINT fuFlush);
     * }
     */
    public static int mmioFlush(MemorySegment hmmio, int fuFlush) {
        var mh$ = mmioFlush$MH();
        try {
            return (int)mh$.invokeExact(hmmio, fuFlush);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioAdvance$MH() {
        return RuntimeHelper.requireNonNull(constants$608.mmioAdvance$MH,"mmioAdvance");
    }
    /**
     * {@snippet :
     * MMRESULT mmioAdvance(HMMIO hmmio, LPMMIOINFO pmmioinfo, UINT fuAdvance);
     * }
     */
    public static int mmioAdvance(MemorySegment hmmio, MemorySegment pmmioinfo, int fuAdvance) {
        var mh$ = mmioAdvance$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmioinfo, fuAdvance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSendMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$608.mmioSendMessage$MH,"mmioSendMessage");
    }
    /**
     * {@snippet :
     * LRESULT mmioSendMessage(HMMIO hmmio, UINT uMsg, LPARAM lParam1, LPARAM lParam2);
     * }
     */
    public static long mmioSendMessage(MemorySegment hmmio, int uMsg, long lParam1, long lParam2) {
        var mh$ = mmioSendMessage$MH();
        try {
            return (long)mh$.invokeExact(hmmio, uMsg, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioDescend$MH() {
        return RuntimeHelper.requireNonNull(constants$608.mmioDescend$MH,"mmioDescend");
    }
    /**
     * {@snippet :
     * MMRESULT mmioDescend(HMMIO hmmio, LPMMCKINFO pmmcki, const MMCKINFO* pmmckiParent, UINT fuDescend);
     * }
     */
    public static int mmioDescend(MemorySegment hmmio, MemorySegment pmmcki, MemorySegment pmmckiParent, int fuDescend) {
        var mh$ = mmioDescend$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmcki, pmmckiParent, fuDescend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioAscend$MH() {
        return RuntimeHelper.requireNonNull(constants$608.mmioAscend$MH,"mmioAscend");
    }
    /**
     * {@snippet :
     * MMRESULT mmioAscend(HMMIO hmmio, LPMMCKINFO pmmcki, UINT fuAscend);
     * }
     */
    public static int mmioAscend(MemorySegment hmmio, MemorySegment pmmcki, int fuAscend) {
        var mh$ = mmioAscend$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmcki, fuAscend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioCreateChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$608.mmioCreateChunk$MH,"mmioCreateChunk");
    }
    /**
     * {@snippet :
     * MMRESULT mmioCreateChunk(HMMIO hmmio, LPMMCKINFO pmmcki, UINT fuCreate);
     * }
     */
    public static int mmioCreateChunk(MemorySegment hmmio, MemorySegment pmmcki, int fuCreate) {
        var mh$ = mmioCreateChunk$MH();
        try {
            return (int)mh$.invokeExact(hmmio, pmmcki, fuCreate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeSetEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$609.timeSetEvent$MH,"timeSetEvent");
    }
    /**
     * {@snippet :
     * MMRESULT timeSetEvent(UINT uDelay, UINT uResolution, LPTIMECALLBACK fptc, DWORD_PTR dwUser, UINT fuEvent);
     * }
     */
    public static int timeSetEvent(int uDelay, int uResolution, MemorySegment fptc, long dwUser, int fuEvent) {
        var mh$ = timeSetEvent$MH();
        try {
            return (int)mh$.invokeExact(uDelay, uResolution, fptc, dwUser, fuEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeKillEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$609.timeKillEvent$MH,"timeKillEvent");
    }
    /**
     * {@snippet :
     * MMRESULT timeKillEvent(UINT uTimerID);
     * }
     */
    public static int timeKillEvent(int uTimerID) {
        var mh$ = timeKillEvent$MH();
        try {
            return (int)mh$.invokeExact(uTimerID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndPlaySoundA$MH() {
        return RuntimeHelper.requireNonNull(constants$609.sndPlaySoundA$MH,"sndPlaySoundA");
    }
    /**
     * {@snippet :
     * BOOL sndPlaySoundA(LPCSTR pszSound, UINT fuSound);
     * }
     */
    public static int sndPlaySoundA(MemorySegment pszSound, int fuSound) {
        var mh$ = sndPlaySoundA$MH();
        try {
            return (int)mh$.invokeExact(pszSound, fuSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndPlaySoundW$MH() {
        return RuntimeHelper.requireNonNull(constants$610.sndPlaySoundW$MH,"sndPlaySoundW");
    }
    /**
     * {@snippet :
     * BOOL sndPlaySoundW(LPCWSTR pszSound, UINT fuSound);
     * }
     */
    public static int sndPlaySoundW(MemorySegment pszSound, int fuSound) {
        var mh$ = sndPlaySoundW$MH();
        try {
            return (int)mh$.invokeExact(pszSound, fuSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlaySoundA$MH() {
        return RuntimeHelper.requireNonNull(constants$610.PlaySoundA$MH,"PlaySoundA");
    }
    /**
     * {@snippet :
     * BOOL PlaySoundA(LPCSTR pszSound, HMODULE hmod, DWORD fdwSound);
     * }
     */
    public static int PlaySoundA(MemorySegment pszSound, MemorySegment hmod, int fdwSound) {
        var mh$ = PlaySoundA$MH();
        try {
            return (int)mh$.invokeExact(pszSound, hmod, fdwSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlaySoundW$MH() {
        return RuntimeHelper.requireNonNull(constants$610.PlaySoundW$MH,"PlaySoundW");
    }
    /**
     * {@snippet :
     * BOOL PlaySoundW(LPCWSTR pszSound, HMODULE hmod, DWORD fdwSound);
     * }
     */
    public static int PlaySoundW(MemorySegment pszSound, MemorySegment hmod, int fdwSound) {
        var mh$ = PlaySoundW$MH();
        try {
            return (int)mh$.invokeExact(pszSound, hmod, fdwSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct HWAVE__* HWAVE;
     * }
     */
    public static final OfAddress HWAVE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HWAVEIN__* HWAVEIN;
     * }
     */
    public static final OfAddress HWAVEIN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HWAVEOUT__* HWAVEOUT;
     * }
     */
    public static final OfAddress HWAVEOUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HWAVEIN__** LPHWAVEIN;
     * }
     */
    public static final OfAddress LPHWAVEIN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HWAVEOUT__** LPHWAVEOUT;
     * }
     */
    public static final OfAddress LPHWAVEOUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct wavehdr_tag* PWAVEHDR;
     * }
     */
    public static final OfAddress PWAVEHDR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct wavehdr_tag* NPWAVEHDR;
     * }
     */
    public static final OfAddress NPWAVEHDR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct wavehdr_tag* LPWAVEHDR;
     * }
     */
    public static final OfAddress LPWAVEHDR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSA* PWAVEOUTCAPSA;
     * }
     */
    public static final OfAddress PWAVEOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSA* NPWAVEOUTCAPSA;
     * }
     */
    public static final OfAddress NPWAVEOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSA* LPWAVEOUTCAPSA;
     * }
     */
    public static final OfAddress LPWAVEOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSW* PWAVEOUTCAPSW;
     * }
     */
    public static final OfAddress PWAVEOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSW* NPWAVEOUTCAPSW;
     * }
     */
    public static final OfAddress NPWAVEOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSW* LPWAVEOUTCAPSW;
     * }
     */
    public static final OfAddress LPWAVEOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSA* PWAVEOUTCAPS;
     * }
     */
    public static final OfAddress PWAVEOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSA* NPWAVEOUTCAPS;
     * }
     */
    public static final OfAddress NPWAVEOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPSA* LPWAVEOUTCAPS;
     * }
     */
    public static final OfAddress LPWAVEOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2A* PWAVEOUTCAPS2A;
     * }
     */
    public static final OfAddress PWAVEOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2A* NPWAVEOUTCAPS2A;
     * }
     */
    public static final OfAddress NPWAVEOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2A* LPWAVEOUTCAPS2A;
     * }
     */
    public static final OfAddress LPWAVEOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2W* PWAVEOUTCAPS2W;
     * }
     */
    public static final OfAddress PWAVEOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2W* NPWAVEOUTCAPS2W;
     * }
     */
    public static final OfAddress NPWAVEOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2W* LPWAVEOUTCAPS2W;
     * }
     */
    public static final OfAddress LPWAVEOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2A* PWAVEOUTCAPS2;
     * }
     */
    public static final OfAddress PWAVEOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2A* NPWAVEOUTCAPS2;
     * }
     */
    public static final OfAddress NPWAVEOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEOUTCAPS2A* LPWAVEOUTCAPS2;
     * }
     */
    public static final OfAddress LPWAVEOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSA* PWAVEINCAPSA;
     * }
     */
    public static final OfAddress PWAVEINCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSA* NPWAVEINCAPSA;
     * }
     */
    public static final OfAddress NPWAVEINCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSA* LPWAVEINCAPSA;
     * }
     */
    public static final OfAddress LPWAVEINCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSW* PWAVEINCAPSW;
     * }
     */
    public static final OfAddress PWAVEINCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSW* NPWAVEINCAPSW;
     * }
     */
    public static final OfAddress NPWAVEINCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSW* LPWAVEINCAPSW;
     * }
     */
    public static final OfAddress LPWAVEINCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSA* PWAVEINCAPS;
     * }
     */
    public static final OfAddress PWAVEINCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSA* NPWAVEINCAPS;
     * }
     */
    public static final OfAddress NPWAVEINCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPSA* LPWAVEINCAPS;
     * }
     */
    public static final OfAddress LPWAVEINCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2A* PWAVEINCAPS2A;
     * }
     */
    public static final OfAddress PWAVEINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2A* NPWAVEINCAPS2A;
     * }
     */
    public static final OfAddress NPWAVEINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2A* LPWAVEINCAPS2A;
     * }
     */
    public static final OfAddress LPWAVEINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2W* PWAVEINCAPS2W;
     * }
     */
    public static final OfAddress PWAVEINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2W* NPWAVEINCAPS2W;
     * }
     */
    public static final OfAddress NPWAVEINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2W* LPWAVEINCAPS2W;
     * }
     */
    public static final OfAddress LPWAVEINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2A* PWAVEINCAPS2;
     * }
     */
    public static final OfAddress PWAVEINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2A* NPWAVEINCAPS2;
     * }
     */
    public static final OfAddress NPWAVEINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagWAVEINCAPS2A* LPWAVEINCAPS2;
     * }
     */
    public static final OfAddress LPWAVEINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct waveformat_tag* PWAVEFORMAT;
     * }
     */
    public static final OfAddress PWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct waveformat_tag* NPWAVEFORMAT;
     * }
     */
    public static final OfAddress NPWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct waveformat_tag* LPWAVEFORMAT;
     * }
     */
    public static final OfAddress LPWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct pcmwaveformat_tag* PPCMWAVEFORMAT;
     * }
     */
    public static final OfAddress PPCMWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct pcmwaveformat_tag* NPPCMWAVEFORMAT;
     * }
     */
    public static final OfAddress NPPCMWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct pcmwaveformat_tag* LPPCMWAVEFORMAT;
     * }
     */
    public static final OfAddress LPPCMWAVEFORMAT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tWAVEFORMATEX* PWAVEFORMATEX;
     * }
     */
    public static final OfAddress PWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tWAVEFORMATEX* NPWAVEFORMATEX;
     * }
     */
    public static final OfAddress NPWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tWAVEFORMATEX* LPWAVEFORMATEX;
     * }
     */
    public static final OfAddress LPWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tWAVEFORMATEX* LPCWAVEFORMATEX;
     * }
     */
    public static final OfAddress LPCWAVEFORMATEX = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle waveOutGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$611.waveOutGetNumDevs$MH,"waveOutGetNumDevs");
    }
    /**
     * {@snippet :
     * UINT waveOutGetNumDevs();
     * }
     */
    public static int waveOutGetNumDevs() {
        var mh$ = waveOutGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$611.waveOutGetDevCapsA$MH,"waveOutGetDevCapsA");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetDevCapsA(UINT_PTR uDeviceID, LPWAVEOUTCAPSA pwoc, UINT cbwoc);
     * }
     */
    public static int waveOutGetDevCapsA(long uDeviceID, MemorySegment pwoc, int cbwoc) {
        var mh$ = waveOutGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwoc, cbwoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$611.waveOutGetDevCapsW$MH,"waveOutGetDevCapsW");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetDevCapsW(UINT_PTR uDeviceID, LPWAVEOUTCAPSW pwoc, UINT cbwoc);
     * }
     */
    public static int waveOutGetDevCapsW(long uDeviceID, MemorySegment pwoc, int cbwoc) {
        var mh$ = waveOutGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwoc, cbwoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$611.waveOutGetVolume$MH,"waveOutGetVolume");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetVolume(HWAVEOUT hwo, LPDWORD pdwVolume);
     * }
     */
    public static int waveOutGetVolume(MemorySegment hwo, MemorySegment pdwVolume) {
        var mh$ = waveOutGetVolume$MH();
        try {
            return (int)mh$.invokeExact(hwo, pdwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$611.waveOutSetVolume$MH,"waveOutSetVolume");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutSetVolume(HWAVEOUT hwo, DWORD dwVolume);
     * }
     */
    public static int waveOutSetVolume(MemorySegment hwo, int dwVolume) {
        var mh$ = waveOutSetVolume$MH();
        try {
            return (int)mh$.invokeExact(hwo, dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$612.waveOutGetErrorTextA$MH,"waveOutGetErrorTextA");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);
     * }
     */
    public static int waveOutGetErrorTextA(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = waveOutGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$612.waveOutGetErrorTextW$MH,"waveOutGetErrorTextW");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);
     * }
     */
    public static int waveOutGetErrorTextW(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = waveOutGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$612.waveOutOpen$MH,"waveOutOpen");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutOpen(LPHWAVEOUT phwo, UINT uDeviceID, LPCWAVEFORMATEX pwfx, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);
     * }
     */
    public static int waveOutOpen(MemorySegment phwo, int uDeviceID, MemorySegment pwfx, long dwCallback, long dwInstance, int fdwOpen) {
        var mh$ = waveOutOpen$MH();
        try {
            return (int)mh$.invokeExact(phwo, uDeviceID, pwfx, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutClose$MH() {
        return RuntimeHelper.requireNonNull(constants$612.waveOutClose$MH,"waveOutClose");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutClose(HWAVEOUT hwo);
     * }
     */
    public static int waveOutClose(MemorySegment hwo) {
        var mh$ = waveOutClose$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$612.waveOutPrepareHeader$MH,"waveOutPrepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutPrepareHeader(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh);
     * }
     */
    public static int waveOutPrepareHeader(MemorySegment hwo, MemorySegment pwh, int cbwh) {
        var mh$ = waveOutPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwo, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$612.waveOutUnprepareHeader$MH,"waveOutUnprepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutUnprepareHeader(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh);
     * }
     */
    public static int waveOutUnprepareHeader(MemorySegment hwo, MemorySegment pwh, int cbwh) {
        var mh$ = waveOutUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwo, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$613.waveOutWrite$MH,"waveOutWrite");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutWrite(HWAVEOUT hwo, LPWAVEHDR pwh, UINT cbwh);
     * }
     */
    public static int waveOutWrite(MemorySegment hwo, MemorySegment pwh, int cbwh) {
        var mh$ = waveOutWrite$MH();
        try {
            return (int)mh$.invokeExact(hwo, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutPause$MH() {
        return RuntimeHelper.requireNonNull(constants$613.waveOutPause$MH,"waveOutPause");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutPause(HWAVEOUT hwo);
     * }
     */
    public static int waveOutPause(MemorySegment hwo) {
        var mh$ = waveOutPause$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutRestart$MH() {
        return RuntimeHelper.requireNonNull(constants$613.waveOutRestart$MH,"waveOutRestart");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutRestart(HWAVEOUT hwo);
     * }
     */
    public static int waveOutRestart(MemorySegment hwo) {
        var mh$ = waveOutRestart$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutReset$MH() {
        return RuntimeHelper.requireNonNull(constants$613.waveOutReset$MH,"waveOutReset");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutReset(HWAVEOUT hwo);
     * }
     */
    public static int waveOutReset(MemorySegment hwo) {
        var mh$ = waveOutReset$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutBreakLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$613.waveOutBreakLoop$MH,"waveOutBreakLoop");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutBreakLoop(HWAVEOUT hwo);
     * }
     */
    public static int waveOutBreakLoop(MemorySegment hwo) {
        var mh$ = waveOutBreakLoop$MH();
        try {
            return (int)mh$.invokeExact(hwo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$613.waveOutGetPosition$MH,"waveOutGetPosition");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetPosition(HWAVEOUT hwo, LPMMTIME pmmt, UINT cbmmt);
     * }
     */
    public static int waveOutGetPosition(MemorySegment hwo, MemorySegment pmmt, int cbmmt) {
        var mh$ = waveOutGetPosition$MH();
        try {
            return (int)mh$.invokeExact(hwo, pmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPitch$MH() {
        return RuntimeHelper.requireNonNull(constants$614.waveOutGetPitch$MH,"waveOutGetPitch");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetPitch(HWAVEOUT hwo, LPDWORD pdwPitch);
     * }
     */
    public static int waveOutGetPitch(MemorySegment hwo, MemorySegment pdwPitch) {
        var mh$ = waveOutGetPitch$MH();
        try {
            return (int)mh$.invokeExact(hwo, pdwPitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetPitch$MH() {
        return RuntimeHelper.requireNonNull(constants$614.waveOutSetPitch$MH,"waveOutSetPitch");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutSetPitch(HWAVEOUT hwo, DWORD dwPitch);
     * }
     */
    public static int waveOutSetPitch(MemorySegment hwo, int dwPitch) {
        var mh$ = waveOutSetPitch$MH();
        try {
            return (int)mh$.invokeExact(hwo, dwPitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPlaybackRate$MH() {
        return RuntimeHelper.requireNonNull(constants$614.waveOutGetPlaybackRate$MH,"waveOutGetPlaybackRate");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetPlaybackRate(HWAVEOUT hwo, LPDWORD pdwRate);
     * }
     */
    public static int waveOutGetPlaybackRate(MemorySegment hwo, MemorySegment pdwRate) {
        var mh$ = waveOutGetPlaybackRate$MH();
        try {
            return (int)mh$.invokeExact(hwo, pdwRate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetPlaybackRate$MH() {
        return RuntimeHelper.requireNonNull(constants$614.waveOutSetPlaybackRate$MH,"waveOutSetPlaybackRate");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutSetPlaybackRate(HWAVEOUT hwo, DWORD dwRate);
     * }
     */
    public static int waveOutSetPlaybackRate(MemorySegment hwo, int dwRate) {
        var mh$ = waveOutSetPlaybackRate$MH();
        try {
            return (int)mh$.invokeExact(hwo, dwRate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$614.waveOutGetID$MH,"waveOutGetID");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutGetID(HWAVEOUT hwo, LPUINT puDeviceID);
     * }
     */
    public static int waveOutGetID(MemorySegment hwo, MemorySegment puDeviceID) {
        var mh$ = waveOutGetID$MH();
        try {
            return (int)mh$.invokeExact(hwo, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$614.waveOutMessage$MH,"waveOutMessage");
    }
    /**
     * {@snippet :
     * MMRESULT waveOutMessage(HWAVEOUT hwo, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);
     * }
     */
    public static int waveOutMessage(MemorySegment hwo, int uMsg, long dw1, long dw2) {
        var mh$ = waveOutMessage$MH();
        try {
            return (int)mh$.invokeExact(hwo, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$615.waveInGetNumDevs$MH,"waveInGetNumDevs");
    }
    /**
     * {@snippet :
     * UINT waveInGetNumDevs();
     * }
     */
    public static int waveInGetNumDevs() {
        var mh$ = waveInGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$615.waveInGetDevCapsA$MH,"waveInGetDevCapsA");
    }
    /**
     * {@snippet :
     * MMRESULT waveInGetDevCapsA(UINT_PTR uDeviceID, LPWAVEINCAPSA pwic, UINT cbwic);
     * }
     */
    public static int waveInGetDevCapsA(long uDeviceID, MemorySegment pwic, int cbwic) {
        var mh$ = waveInGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwic, cbwic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$615.waveInGetDevCapsW$MH,"waveInGetDevCapsW");
    }
    /**
     * {@snippet :
     * MMRESULT waveInGetDevCapsW(UINT_PTR uDeviceID, LPWAVEINCAPSW pwic, UINT cbwic);
     * }
     */
    public static int waveInGetDevCapsW(long uDeviceID, MemorySegment pwic, int cbwic) {
        var mh$ = waveInGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pwic, cbwic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$615.waveInGetErrorTextA$MH,"waveInGetErrorTextA");
    }
    /**
     * {@snippet :
     * MMRESULT waveInGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);
     * }
     */
    public static int waveInGetErrorTextA(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = waveInGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$615.waveInGetErrorTextW$MH,"waveInGetErrorTextW");
    }
    /**
     * {@snippet :
     * MMRESULT waveInGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);
     * }
     */
    public static int waveInGetErrorTextW(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = waveInGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$615.waveInOpen$MH,"waveInOpen");
    }
    /**
     * {@snippet :
     * MMRESULT waveInOpen(LPHWAVEIN phwi, UINT uDeviceID, LPCWAVEFORMATEX pwfx, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);
     * }
     */
    public static int waveInOpen(MemorySegment phwi, int uDeviceID, MemorySegment pwfx, long dwCallback, long dwInstance, int fdwOpen) {
        var mh$ = waveInOpen$MH();
        try {
            return (int)mh$.invokeExact(phwi, uDeviceID, pwfx, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInClose$MH() {
        return RuntimeHelper.requireNonNull(constants$616.waveInClose$MH,"waveInClose");
    }
    /**
     * {@snippet :
     * MMRESULT waveInClose(HWAVEIN hwi);
     * }
     */
    public static int waveInClose(MemorySegment hwi) {
        var mh$ = waveInClose$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$616.waveInPrepareHeader$MH,"waveInPrepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT waveInPrepareHeader(HWAVEIN hwi, LPWAVEHDR pwh, UINT cbwh);
     * }
     */
    public static int waveInPrepareHeader(MemorySegment hwi, MemorySegment pwh, int cbwh) {
        var mh$ = waveInPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwi, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$616.waveInUnprepareHeader$MH,"waveInUnprepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT waveInUnprepareHeader(HWAVEIN hwi, LPWAVEHDR pwh, UINT cbwh);
     * }
     */
    public static int waveInUnprepareHeader(MemorySegment hwi, MemorySegment pwh, int cbwh) {
        var mh$ = waveInUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hwi, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInAddBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$616.waveInAddBuffer$MH,"waveInAddBuffer");
    }
    /**
     * {@snippet :
     * MMRESULT waveInAddBuffer(HWAVEIN hwi, LPWAVEHDR pwh, UINT cbwh);
     * }
     */
    public static int waveInAddBuffer(MemorySegment hwi, MemorySegment pwh, int cbwh) {
        var mh$ = waveInAddBuffer$MH();
        try {
            return (int)mh$.invokeExact(hwi, pwh, cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInStart$MH() {
        return RuntimeHelper.requireNonNull(constants$616.waveInStart$MH,"waveInStart");
    }
    /**
     * {@snippet :
     * MMRESULT waveInStart(HWAVEIN hwi);
     * }
     */
    public static int waveInStart(MemorySegment hwi) {
        var mh$ = waveInStart$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInStop$MH() {
        return RuntimeHelper.requireNonNull(constants$616.waveInStop$MH,"waveInStop");
    }
    /**
     * {@snippet :
     * MMRESULT waveInStop(HWAVEIN hwi);
     * }
     */
    public static int waveInStop(MemorySegment hwi) {
        var mh$ = waveInStop$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInReset$MH() {
        return RuntimeHelper.requireNonNull(constants$617.waveInReset$MH,"waveInReset");
    }
    /**
     * {@snippet :
     * MMRESULT waveInReset(HWAVEIN hwi);
     * }
     */
    public static int waveInReset(MemorySegment hwi) {
        var mh$ = waveInReset$MH();
        try {
            return (int)mh$.invokeExact(hwi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$617.waveInGetPosition$MH,"waveInGetPosition");
    }
    /**
     * {@snippet :
     * MMRESULT waveInGetPosition(HWAVEIN hwi, LPMMTIME pmmt, UINT cbmmt);
     * }
     */
    public static int waveInGetPosition(MemorySegment hwi, MemorySegment pmmt, int cbmmt) {
        var mh$ = waveInGetPosition$MH();
        try {
            return (int)mh$.invokeExact(hwi, pmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$617.waveInGetID$MH,"waveInGetID");
    }
    /**
     * {@snippet :
     * MMRESULT waveInGetID(HWAVEIN hwi, LPUINT puDeviceID);
     * }
     */
    public static int waveInGetID(MemorySegment hwi, MemorySegment puDeviceID) {
        var mh$ = waveInGetID$MH();
        try {
            return (int)mh$.invokeExact(hwi, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$617.waveInMessage$MH,"waveInMessage");
    }
    /**
     * {@snippet :
     * MMRESULT waveInMessage(HWAVEIN hwi, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);
     * }
     */
    public static int waveInMessage(MemorySegment hwi, int uMsg, long dw1, long dw2) {
        var mh$ = waveInMessage$MH();
        try {
            return (int)mh$.invokeExact(hwi, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct HMIDI__* HMIDI;
     * }
     */
    public static final OfAddress HMIDI = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIDIIN__* HMIDIIN;
     * }
     */
    public static final OfAddress HMIDIIN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIDIOUT__* HMIDIOUT;
     * }
     */
    public static final OfAddress HMIDIOUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIDISTRM__* HMIDISTRM;
     * }
     */
    public static final OfAddress HMIDISTRM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIDI__** LPHMIDI;
     * }
     */
    public static final OfAddress LPHMIDI = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIDIIN__** LPHMIDIIN;
     * }
     */
    public static final OfAddress LPHMIDIIN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIDIOUT__** LPHMIDIOUT;
     * }
     */
    public static final OfAddress LPHMIDIOUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIDISTRM__** LPHMIDISTRM;
     * }
     */
    public static final OfAddress LPHMIDISTRM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short* LPPATCHARRAY;
     * }
     */
    public static final OfAddress LPPATCHARRAY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short* LPKEYARRAY;
     * }
     */
    public static final OfAddress LPKEYARRAY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSA* PMIDIOUTCAPSA;
     * }
     */
    public static final OfAddress PMIDIOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSA* NPMIDIOUTCAPSA;
     * }
     */
    public static final OfAddress NPMIDIOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSA* LPMIDIOUTCAPSA;
     * }
     */
    public static final OfAddress LPMIDIOUTCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSW* PMIDIOUTCAPSW;
     * }
     */
    public static final OfAddress PMIDIOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSW* NPMIDIOUTCAPSW;
     * }
     */
    public static final OfAddress NPMIDIOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSW* LPMIDIOUTCAPSW;
     * }
     */
    public static final OfAddress LPMIDIOUTCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSA* PMIDIOUTCAPS;
     * }
     */
    public static final OfAddress PMIDIOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSA* NPMIDIOUTCAPS;
     * }
     */
    public static final OfAddress NPMIDIOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPSA* LPMIDIOUTCAPS;
     * }
     */
    public static final OfAddress LPMIDIOUTCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2A* PMIDIOUTCAPS2A;
     * }
     */
    public static final OfAddress PMIDIOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2A* NPMIDIOUTCAPS2A;
     * }
     */
    public static final OfAddress NPMIDIOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2A* LPMIDIOUTCAPS2A;
     * }
     */
    public static final OfAddress LPMIDIOUTCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2W* PMIDIOUTCAPS2W;
     * }
     */
    public static final OfAddress PMIDIOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2W* NPMIDIOUTCAPS2W;
     * }
     */
    public static final OfAddress NPMIDIOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2W* LPMIDIOUTCAPS2W;
     * }
     */
    public static final OfAddress LPMIDIOUTCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2A* PMIDIOUTCAPS2;
     * }
     */
    public static final OfAddress PMIDIOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2A* NPMIDIOUTCAPS2;
     * }
     */
    public static final OfAddress NPMIDIOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIOUTCAPS2A* LPMIDIOUTCAPS2;
     * }
     */
    public static final OfAddress LPMIDIOUTCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSA* PMIDIINCAPSA;
     * }
     */
    public static final OfAddress PMIDIINCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSA* NPMIDIINCAPSA;
     * }
     */
    public static final OfAddress NPMIDIINCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSA* LPMIDIINCAPSA;
     * }
     */
    public static final OfAddress LPMIDIINCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSW* PMIDIINCAPSW;
     * }
     */
    public static final OfAddress PMIDIINCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSW* NPMIDIINCAPSW;
     * }
     */
    public static final OfAddress NPMIDIINCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSW* LPMIDIINCAPSW;
     * }
     */
    public static final OfAddress LPMIDIINCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSA* PMIDIINCAPS;
     * }
     */
    public static final OfAddress PMIDIINCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSA* NPMIDIINCAPS;
     * }
     */
    public static final OfAddress NPMIDIINCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPSA* LPMIDIINCAPS;
     * }
     */
    public static final OfAddress LPMIDIINCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2A* PMIDIINCAPS2A;
     * }
     */
    public static final OfAddress PMIDIINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2A* NPMIDIINCAPS2A;
     * }
     */
    public static final OfAddress NPMIDIINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2A* LPMIDIINCAPS2A;
     * }
     */
    public static final OfAddress LPMIDIINCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2W* PMIDIINCAPS2W;
     * }
     */
    public static final OfAddress PMIDIINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2W* NPMIDIINCAPS2W;
     * }
     */
    public static final OfAddress NPMIDIINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2W* LPMIDIINCAPS2W;
     * }
     */
    public static final OfAddress LPMIDIINCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2A* PMIDIINCAPS2;
     * }
     */
    public static final OfAddress PMIDIINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2A* NPMIDIINCAPS2;
     * }
     */
    public static final OfAddress NPMIDIINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIDIINCAPS2A* LPMIDIINCAPS2;
     * }
     */
    public static final OfAddress LPMIDIINCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct midihdr_tag* PMIDIHDR;
     * }
     */
    public static final OfAddress PMIDIHDR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct midihdr_tag* NPMIDIHDR;
     * }
     */
    public static final OfAddress NPMIDIHDR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct midihdr_tag* LPMIDIHDR;
     * }
     */
    public static final OfAddress LPMIDIHDR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct midiproptimediv_tag* LPMIDIPROPTIMEDIV;
     * }
     */
    public static final OfAddress LPMIDIPROPTIMEDIV = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct midiproptempo_tag* LPMIDIPROPTEMPO;
     * }
     */
    public static final OfAddress LPMIDIPROPTEMPO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle midiOutGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$618.midiOutGetNumDevs$MH,"midiOutGetNumDevs");
    }
    /**
     * {@snippet :
     * UINT midiOutGetNumDevs();
     * }
     */
    public static int midiOutGetNumDevs() {
        var mh$ = midiOutGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$618.midiStreamOpen$MH,"midiStreamOpen");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamOpen(LPHMIDISTRM phms, LPUINT puDeviceID, DWORD cMidi, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);
     * }
     */
    public static int midiStreamOpen(MemorySegment phms, MemorySegment puDeviceID, int cMidi, long dwCallback, long dwInstance, int fdwOpen) {
        var mh$ = midiStreamOpen$MH();
        try {
            return (int)mh$.invokeExact(phms, puDeviceID, cMidi, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamClose$MH() {
        return RuntimeHelper.requireNonNull(constants$618.midiStreamClose$MH,"midiStreamClose");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamClose(HMIDISTRM hms);
     * }
     */
    public static int midiStreamClose(MemorySegment hms) {
        var mh$ = midiStreamClose$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$618.midiStreamProperty$MH,"midiStreamProperty");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamProperty(HMIDISTRM hms, LPBYTE lppropdata, DWORD dwProperty);
     * }
     */
    public static int midiStreamProperty(MemorySegment hms, MemorySegment lppropdata, int dwProperty) {
        var mh$ = midiStreamProperty$MH();
        try {
            return (int)mh$.invokeExact(hms, lppropdata, dwProperty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$619.midiStreamPosition$MH,"midiStreamPosition");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamPosition(HMIDISTRM hms, LPMMTIME lpmmt, UINT cbmmt);
     * }
     */
    public static int midiStreamPosition(MemorySegment hms, MemorySegment lpmmt, int cbmmt) {
        var mh$ = midiStreamPosition$MH();
        try {
            return (int)mh$.invokeExact(hms, lpmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamOut$MH() {
        return RuntimeHelper.requireNonNull(constants$619.midiStreamOut$MH,"midiStreamOut");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamOut(HMIDISTRM hms, LPMIDIHDR pmh, UINT cbmh);
     * }
     */
    public static int midiStreamOut(MemorySegment hms, MemorySegment pmh, int cbmh) {
        var mh$ = midiStreamOut$MH();
        try {
            return (int)mh$.invokeExact(hms, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamPause$MH() {
        return RuntimeHelper.requireNonNull(constants$619.midiStreamPause$MH,"midiStreamPause");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamPause(HMIDISTRM hms);
     * }
     */
    public static int midiStreamPause(MemorySegment hms) {
        var mh$ = midiStreamPause$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamRestart$MH() {
        return RuntimeHelper.requireNonNull(constants$619.midiStreamRestart$MH,"midiStreamRestart");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamRestart(HMIDISTRM hms);
     * }
     */
    public static int midiStreamRestart(MemorySegment hms) {
        var mh$ = midiStreamRestart$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamStop$MH() {
        return RuntimeHelper.requireNonNull(constants$619.midiStreamStop$MH,"midiStreamStop");
    }
    /**
     * {@snippet :
     * MMRESULT midiStreamStop(HMIDISTRM hms);
     * }
     */
    public static int midiStreamStop(MemorySegment hms) {
        var mh$ = midiStreamStop$MH();
        try {
            return (int)mh$.invokeExact(hms);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiConnect$MH() {
        return RuntimeHelper.requireNonNull(constants$619.midiConnect$MH,"midiConnect");
    }
    /**
     * {@snippet :
     * MMRESULT midiConnect(HMIDI hmi, HMIDIOUT hmo, LPVOID pReserved);
     * }
     */
    public static int midiConnect(MemorySegment hmi, MemorySegment hmo, MemorySegment pReserved) {
        var mh$ = midiConnect$MH();
        try {
            return (int)mh$.invokeExact(hmi, hmo, pReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$620.midiDisconnect$MH,"midiDisconnect");
    }
    /**
     * {@snippet :
     * MMRESULT midiDisconnect(HMIDI hmi, HMIDIOUT hmo, LPVOID pReserved);
     * }
     */
    public static int midiDisconnect(MemorySegment hmi, MemorySegment hmo, MemorySegment pReserved) {
        var mh$ = midiDisconnect$MH();
        try {
            return (int)mh$.invokeExact(hmi, hmo, pReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$620.midiOutGetDevCapsA$MH,"midiOutGetDevCapsA");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutGetDevCapsA(UINT_PTR uDeviceID, LPMIDIOUTCAPSA pmoc, UINT cbmoc);
     * }
     */
    public static int midiOutGetDevCapsA(long uDeviceID, MemorySegment pmoc, int cbmoc) {
        var mh$ = midiOutGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmoc, cbmoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$620.midiOutGetDevCapsW$MH,"midiOutGetDevCapsW");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutGetDevCapsW(UINT_PTR uDeviceID, LPMIDIOUTCAPSW pmoc, UINT cbmoc);
     * }
     */
    public static int midiOutGetDevCapsW(long uDeviceID, MemorySegment pmoc, int cbmoc) {
        var mh$ = midiOutGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmoc, cbmoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$620.midiOutGetVolume$MH,"midiOutGetVolume");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutGetVolume(HMIDIOUT hmo, LPDWORD pdwVolume);
     * }
     */
    public static int midiOutGetVolume(MemorySegment hmo, MemorySegment pdwVolume) {
        var mh$ = midiOutGetVolume$MH();
        try {
            return (int)mh$.invokeExact(hmo, pdwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$620.midiOutSetVolume$MH,"midiOutSetVolume");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutSetVolume(HMIDIOUT hmo, DWORD dwVolume);
     * }
     */
    public static int midiOutSetVolume(MemorySegment hmo, int dwVolume) {
        var mh$ = midiOutSetVolume$MH();
        try {
            return (int)mh$.invokeExact(hmo, dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$620.midiOutGetErrorTextA$MH,"midiOutGetErrorTextA");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);
     * }
     */
    public static int midiOutGetErrorTextA(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = midiOutGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$621.midiOutGetErrorTextW$MH,"midiOutGetErrorTextW");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);
     * }
     */
    public static int midiOutGetErrorTextW(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = midiOutGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$621.midiOutOpen$MH,"midiOutOpen");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutOpen(LPHMIDIOUT phmo, UINT uDeviceID, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);
     * }
     */
    public static int midiOutOpen(MemorySegment phmo, int uDeviceID, long dwCallback, long dwInstance, int fdwOpen) {
        var mh$ = midiOutOpen$MH();
        try {
            return (int)mh$.invokeExact(phmo, uDeviceID, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutClose$MH() {
        return RuntimeHelper.requireNonNull(constants$621.midiOutClose$MH,"midiOutClose");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutClose(HMIDIOUT hmo);
     * }
     */
    public static int midiOutClose(MemorySegment hmo) {
        var mh$ = midiOutClose$MH();
        try {
            return (int)mh$.invokeExact(hmo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$621.midiOutPrepareHeader$MH,"midiOutPrepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutPrepareHeader(HMIDIOUT hmo, LPMIDIHDR pmh, UINT cbmh);
     * }
     */
    public static int midiOutPrepareHeader(MemorySegment hmo, MemorySegment pmh, int cbmh) {
        var mh$ = midiOutPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmo, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$621.midiOutUnprepareHeader$MH,"midiOutUnprepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutUnprepareHeader(HMIDIOUT hmo, LPMIDIHDR pmh, UINT cbmh);
     * }
     */
    public static int midiOutUnprepareHeader(MemorySegment hmo, MemorySegment pmh, int cbmh) {
        var mh$ = midiOutUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmo, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutShortMsg$MH() {
        return RuntimeHelper.requireNonNull(constants$621.midiOutShortMsg$MH,"midiOutShortMsg");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutShortMsg(HMIDIOUT hmo, DWORD dwMsg);
     * }
     */
    public static int midiOutShortMsg(MemorySegment hmo, int dwMsg) {
        var mh$ = midiOutShortMsg$MH();
        try {
            return (int)mh$.invokeExact(hmo, dwMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutLongMsg$MH() {
        return RuntimeHelper.requireNonNull(constants$622.midiOutLongMsg$MH,"midiOutLongMsg");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutLongMsg(HMIDIOUT hmo, LPMIDIHDR pmh, UINT cbmh);
     * }
     */
    public static int midiOutLongMsg(MemorySegment hmo, MemorySegment pmh, int cbmh) {
        var mh$ = midiOutLongMsg$MH();
        try {
            return (int)mh$.invokeExact(hmo, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutReset$MH() {
        return RuntimeHelper.requireNonNull(constants$622.midiOutReset$MH,"midiOutReset");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutReset(HMIDIOUT hmo);
     * }
     */
    public static int midiOutReset(MemorySegment hmo) {
        var mh$ = midiOutReset$MH();
        try {
            return (int)mh$.invokeExact(hmo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutCachePatches$MH() {
        return RuntimeHelper.requireNonNull(constants$622.midiOutCachePatches$MH,"midiOutCachePatches");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutCachePatches(HMIDIOUT hmo, UINT uBank, LPWORD pwpa, UINT fuCache);
     * }
     */
    public static int midiOutCachePatches(MemorySegment hmo, int uBank, MemorySegment pwpa, int fuCache) {
        var mh$ = midiOutCachePatches$MH();
        try {
            return (int)mh$.invokeExact(hmo, uBank, pwpa, fuCache);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutCacheDrumPatches$MH() {
        return RuntimeHelper.requireNonNull(constants$622.midiOutCacheDrumPatches$MH,"midiOutCacheDrumPatches");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutCacheDrumPatches(HMIDIOUT hmo, UINT uPatch, LPWORD pwkya, UINT fuCache);
     * }
     */
    public static int midiOutCacheDrumPatches(MemorySegment hmo, int uPatch, MemorySegment pwkya, int fuCache) {
        var mh$ = midiOutCacheDrumPatches$MH();
        try {
            return (int)mh$.invokeExact(hmo, uPatch, pwkya, fuCache);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$622.midiOutGetID$MH,"midiOutGetID");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutGetID(HMIDIOUT hmo, LPUINT puDeviceID);
     * }
     */
    public static int midiOutGetID(MemorySegment hmo, MemorySegment puDeviceID) {
        var mh$ = midiOutGetID$MH();
        try {
            return (int)mh$.invokeExact(hmo, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$622.midiOutMessage$MH,"midiOutMessage");
    }
    /**
     * {@snippet :
     * MMRESULT midiOutMessage(HMIDIOUT hmo, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);
     * }
     */
    public static int midiOutMessage(MemorySegment hmo, int uMsg, long dw1, long dw2) {
        var mh$ = midiOutMessage$MH();
        try {
            return (int)mh$.invokeExact(hmo, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$623.midiInGetNumDevs$MH,"midiInGetNumDevs");
    }
    /**
     * {@snippet :
     * UINT midiInGetNumDevs();
     * }
     */
    public static int midiInGetNumDevs() {
        var mh$ = midiInGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$623.midiInGetDevCapsA$MH,"midiInGetDevCapsA");
    }
    /**
     * {@snippet :
     * MMRESULT midiInGetDevCapsA(UINT_PTR uDeviceID, LPMIDIINCAPSA pmic, UINT cbmic);
     * }
     */
    public static int midiInGetDevCapsA(long uDeviceID, MemorySegment pmic, int cbmic) {
        var mh$ = midiInGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmic, cbmic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$623.midiInGetDevCapsW$MH,"midiInGetDevCapsW");
    }
    /**
     * {@snippet :
     * MMRESULT midiInGetDevCapsW(UINT_PTR uDeviceID, LPMIDIINCAPSW pmic, UINT cbmic);
     * }
     */
    public static int midiInGetDevCapsW(long uDeviceID, MemorySegment pmic, int cbmic) {
        var mh$ = midiInGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pmic, cbmic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$623.midiInGetErrorTextA$MH,"midiInGetErrorTextA");
    }
    /**
     * {@snippet :
     * MMRESULT midiInGetErrorTextA(MMRESULT mmrError, LPSTR pszText, UINT cchText);
     * }
     */
    public static int midiInGetErrorTextA(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = midiInGetErrorTextA$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$623.midiInGetErrorTextW$MH,"midiInGetErrorTextW");
    }
    /**
     * {@snippet :
     * MMRESULT midiInGetErrorTextW(MMRESULT mmrError, LPWSTR pszText, UINT cchText);
     * }
     */
    public static int midiInGetErrorTextW(int mmrError, MemorySegment pszText, int cchText) {
        var mh$ = midiInGetErrorTextW$MH();
        try {
            return (int)mh$.invokeExact(mmrError, pszText, cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$623.midiInOpen$MH,"midiInOpen");
    }
    /**
     * {@snippet :
     * MMRESULT midiInOpen(LPHMIDIIN phmi, UINT uDeviceID, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);
     * }
     */
    public static int midiInOpen(MemorySegment phmi, int uDeviceID, long dwCallback, long dwInstance, int fdwOpen) {
        var mh$ = midiInOpen$MH();
        try {
            return (int)mh$.invokeExact(phmi, uDeviceID, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInClose$MH() {
        return RuntimeHelper.requireNonNull(constants$624.midiInClose$MH,"midiInClose");
    }
    /**
     * {@snippet :
     * MMRESULT midiInClose(HMIDIIN hmi);
     * }
     */
    public static int midiInClose(MemorySegment hmi) {
        var mh$ = midiInClose$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$624.midiInPrepareHeader$MH,"midiInPrepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT midiInPrepareHeader(HMIDIIN hmi, LPMIDIHDR pmh, UINT cbmh);
     * }
     */
    public static int midiInPrepareHeader(MemorySegment hmi, MemorySegment pmh, int cbmh) {
        var mh$ = midiInPrepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmi, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$624.midiInUnprepareHeader$MH,"midiInUnprepareHeader");
    }
    /**
     * {@snippet :
     * MMRESULT midiInUnprepareHeader(HMIDIIN hmi, LPMIDIHDR pmh, UINT cbmh);
     * }
     */
    public static int midiInUnprepareHeader(MemorySegment hmi, MemorySegment pmh, int cbmh) {
        var mh$ = midiInUnprepareHeader$MH();
        try {
            return (int)mh$.invokeExact(hmi, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInAddBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$624.midiInAddBuffer$MH,"midiInAddBuffer");
    }
    /**
     * {@snippet :
     * MMRESULT midiInAddBuffer(HMIDIIN hmi, LPMIDIHDR pmh, UINT cbmh);
     * }
     */
    public static int midiInAddBuffer(MemorySegment hmi, MemorySegment pmh, int cbmh) {
        var mh$ = midiInAddBuffer$MH();
        try {
            return (int)mh$.invokeExact(hmi, pmh, cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInStart$MH() {
        return RuntimeHelper.requireNonNull(constants$624.midiInStart$MH,"midiInStart");
    }
    /**
     * {@snippet :
     * MMRESULT midiInStart(HMIDIIN hmi);
     * }
     */
    public static int midiInStart(MemorySegment hmi) {
        var mh$ = midiInStart$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInStop$MH() {
        return RuntimeHelper.requireNonNull(constants$624.midiInStop$MH,"midiInStop");
    }
    /**
     * {@snippet :
     * MMRESULT midiInStop(HMIDIIN hmi);
     * }
     */
    public static int midiInStop(MemorySegment hmi) {
        var mh$ = midiInStop$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInReset$MH() {
        return RuntimeHelper.requireNonNull(constants$625.midiInReset$MH,"midiInReset");
    }
    /**
     * {@snippet :
     * MMRESULT midiInReset(HMIDIIN hmi);
     * }
     */
    public static int midiInReset(MemorySegment hmi) {
        var mh$ = midiInReset$MH();
        try {
            return (int)mh$.invokeExact(hmi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$625.midiInGetID$MH,"midiInGetID");
    }
    /**
     * {@snippet :
     * MMRESULT midiInGetID(HMIDIIN hmi, LPUINT puDeviceID);
     * }
     */
    public static int midiInGetID(MemorySegment hmi, MemorySegment puDeviceID) {
        var mh$ = midiInGetID$MH();
        try {
            return (int)mh$.invokeExact(hmi, puDeviceID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$625.midiInMessage$MH,"midiInMessage");
    }
    /**
     * {@snippet :
     * MMRESULT midiInMessage(HMIDIIN hmi, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);
     * }
     */
    public static int midiInMessage(MemorySegment hmi, int uMsg, long dw1, long dw2) {
        var mh$ = midiInMessage$MH();
        try {
            return (int)mh$.invokeExact(hmi, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSA* PAUXCAPSA;
     * }
     */
    public static final OfAddress PAUXCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSA* NPAUXCAPSA;
     * }
     */
    public static final OfAddress NPAUXCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSA* LPAUXCAPSA;
     * }
     */
    public static final OfAddress LPAUXCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSW* PAUXCAPSW;
     * }
     */
    public static final OfAddress PAUXCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSW* NPAUXCAPSW;
     * }
     */
    public static final OfAddress NPAUXCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSW* LPAUXCAPSW;
     * }
     */
    public static final OfAddress LPAUXCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSA* PAUXCAPS;
     * }
     */
    public static final OfAddress PAUXCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSA* NPAUXCAPS;
     * }
     */
    public static final OfAddress NPAUXCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPSA* LPAUXCAPS;
     * }
     */
    public static final OfAddress LPAUXCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2A* PAUXCAPS2A;
     * }
     */
    public static final OfAddress PAUXCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2A* NPAUXCAPS2A;
     * }
     */
    public static final OfAddress NPAUXCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2A* LPAUXCAPS2A;
     * }
     */
    public static final OfAddress LPAUXCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2W* PAUXCAPS2W;
     * }
     */
    public static final OfAddress PAUXCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2W* NPAUXCAPS2W;
     * }
     */
    public static final OfAddress NPAUXCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2W* LPAUXCAPS2W;
     * }
     */
    public static final OfAddress LPAUXCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2A* PAUXCAPS2;
     * }
     */
    public static final OfAddress PAUXCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2A* NPAUXCAPS2;
     * }
     */
    public static final OfAddress NPAUXCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagAUXCAPS2A* LPAUXCAPS2;
     * }
     */
    public static final OfAddress LPAUXCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle auxGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$625.auxGetNumDevs$MH,"auxGetNumDevs");
    }
    /**
     * {@snippet :
     * UINT auxGetNumDevs();
     * }
     */
    public static int auxGetNumDevs() {
        var mh$ = auxGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$625.auxGetDevCapsA$MH,"auxGetDevCapsA");
    }
    /**
     * {@snippet :
     * MMRESULT auxGetDevCapsA(UINT_PTR uDeviceID, LPAUXCAPSA pac, UINT cbac);
     * }
     */
    public static int auxGetDevCapsA(long uDeviceID, MemorySegment pac, int cbac) {
        var mh$ = auxGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pac, cbac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$625.auxGetDevCapsW$MH,"auxGetDevCapsW");
    }
    /**
     * {@snippet :
     * MMRESULT auxGetDevCapsW(UINT_PTR uDeviceID, LPAUXCAPSW pac, UINT cbac);
     * }
     */
    public static int auxGetDevCapsW(long uDeviceID, MemorySegment pac, int cbac) {
        var mh$ = auxGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pac, cbac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$626.auxSetVolume$MH,"auxSetVolume");
    }
    /**
     * {@snippet :
     * MMRESULT auxSetVolume(UINT uDeviceID, DWORD dwVolume);
     * }
     */
    public static int auxSetVolume(int uDeviceID, int dwVolume) {
        var mh$ = auxSetVolume$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$626.auxGetVolume$MH,"auxGetVolume");
    }
    /**
     * {@snippet :
     * MMRESULT auxGetVolume(UINT uDeviceID, LPDWORD pdwVolume);
     * }
     */
    public static int auxGetVolume(int uDeviceID, MemorySegment pdwVolume) {
        var mh$ = auxGetVolume$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, pdwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$626.auxOutMessage$MH,"auxOutMessage");
    }
    /**
     * {@snippet :
     * MMRESULT auxOutMessage(UINT uDeviceID, UINT uMsg, DWORD_PTR dw1, DWORD_PTR dw2);
     * }
     */
    public static int auxOutMessage(int uDeviceID, int uMsg, long dw1, long dw2) {
        var mh$ = auxOutMessage$MH();
        try {
            return (int)mh$.invokeExact(uDeviceID, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct HMIXEROBJ__* HMIXEROBJ;
     * }
     */
    public static final OfAddress HMIXEROBJ = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIXEROBJ__** LPHMIXEROBJ;
     * }
     */
    public static final OfAddress LPHMIXEROBJ = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIXER__* HMIXER;
     * }
     */
    public static final OfAddress HMIXER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct HMIXER__** LPHMIXER;
     * }
     */
    public static final OfAddress LPHMIXER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$626.mixerGetNumDevs$MH,"mixerGetNumDevs");
    }
    /**
     * {@snippet :
     * UINT mixerGetNumDevs();
     * }
     */
    public static int mixerGetNumDevs() {
        var mh$ = mixerGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPSA* PMIXERCAPSA;
     * }
     */
    public static final OfAddress PMIXERCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPSA* LPMIXERCAPSA;
     * }
     */
    public static final OfAddress LPMIXERCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPSW* PMIXERCAPSW;
     * }
     */
    public static final OfAddress PMIXERCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPSW* LPMIXERCAPSW;
     * }
     */
    public static final OfAddress LPMIXERCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPSA* PMIXERCAPS;
     * }
     */
    public static final OfAddress PMIXERCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPSA* LPMIXERCAPS;
     * }
     */
    public static final OfAddress LPMIXERCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPS2A* PMIXERCAPS2A;
     * }
     */
    public static final OfAddress PMIXERCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPS2A* LPMIXERCAPS2A;
     * }
     */
    public static final OfAddress LPMIXERCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPS2W* PMIXERCAPS2W;
     * }
     */
    public static final OfAddress PMIXERCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPS2W* LPMIXERCAPS2W;
     * }
     */
    public static final OfAddress LPMIXERCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPS2A* PMIXERCAPS2;
     * }
     */
    public static final OfAddress PMIXERCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCAPS2A* LPMIXERCAPS2;
     * }
     */
    public static final OfAddress LPMIXERCAPS2 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$626.mixerGetDevCapsA$MH,"mixerGetDevCapsA");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetDevCapsA(UINT_PTR uMxId, LPMIXERCAPSA pmxcaps, UINT cbmxcaps);
     * }
     */
    public static int mixerGetDevCapsA(long uMxId, MemorySegment pmxcaps, int cbmxcaps) {
        var mh$ = mixerGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uMxId, pmxcaps, cbmxcaps);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$626.mixerGetDevCapsW$MH,"mixerGetDevCapsW");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetDevCapsW(UINT_PTR uMxId, LPMIXERCAPSW pmxcaps, UINT cbmxcaps);
     * }
     */
    public static int mixerGetDevCapsW(long uMxId, MemorySegment pmxcaps, int cbmxcaps) {
        var mh$ = mixerGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uMxId, pmxcaps, cbmxcaps);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$627.mixerOpen$MH,"mixerOpen");
    }
    /**
     * {@snippet :
     * MMRESULT mixerOpen(LPHMIXER phmx, UINT uMxId, DWORD_PTR dwCallback, DWORD_PTR dwInstance, DWORD fdwOpen);
     * }
     */
    public static int mixerOpen(MemorySegment phmx, int uMxId, long dwCallback, long dwInstance, int fdwOpen) {
        var mh$ = mixerOpen$MH();
        try {
            return (int)mh$.invokeExact(phmx, uMxId, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerClose$MH() {
        return RuntimeHelper.requireNonNull(constants$627.mixerClose$MH,"mixerClose");
    }
    /**
     * {@snippet :
     * MMRESULT mixerClose(HMIXER hmx);
     * }
     */
    public static int mixerClose(MemorySegment hmx) {
        var mh$ = mixerClose$MH();
        try {
            return (int)mh$.invokeExact(hmx);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$627.mixerMessage$MH,"mixerMessage");
    }
    /**
     * {@snippet :
     * DWORD mixerMessage(HMIXER hmx, UINT uMsg, DWORD_PTR dwParam1, DWORD_PTR dwParam2);
     * }
     */
    public static int mixerMessage(MemorySegment hmx, int uMsg, long dwParam1, long dwParam2) {
        var mh$ = mixerMessage$MH();
        try {
            return (int)mh$.invokeExact(hmx, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagMIXERLINEA* PMIXERLINEA;
     * }
     */
    public static final OfAddress PMIXERLINEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINEA* LPMIXERLINEA;
     * }
     */
    public static final OfAddress LPMIXERLINEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINEW* PMIXERLINEW;
     * }
     */
    public static final OfAddress PMIXERLINEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINEW* LPMIXERLINEW;
     * }
     */
    public static final OfAddress LPMIXERLINEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINEA* PMIXERLINE;
     * }
     */
    public static final OfAddress PMIXERLINE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINEA* LPMIXERLINE;
     * }
     */
    public static final OfAddress LPMIXERLINE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetLineInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$627.mixerGetLineInfoA$MH,"mixerGetLineInfoA");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetLineInfoA(HMIXEROBJ hmxobj, LPMIXERLINEA pmxl, DWORD fdwInfo);
     * }
     */
    public static int mixerGetLineInfoA(MemorySegment hmxobj, MemorySegment pmxl, int fdwInfo) {
        var mh$ = mixerGetLineInfoA$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxl, fdwInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$627.mixerGetLineInfoW$MH,"mixerGetLineInfoW");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetLineInfoW(HMIXEROBJ hmxobj, LPMIXERLINEW pmxl, DWORD fdwInfo);
     * }
     */
    public static int mixerGetLineInfoW(MemorySegment hmxobj, MemorySegment pmxl, int fdwInfo) {
        var mh$ = mixerGetLineInfoW$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxl, fdwInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$627.mixerGetID$MH,"mixerGetID");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetID(HMIXEROBJ hmxobj, UINT* puMxId, DWORD fdwId);
     * }
     */
    public static int mixerGetID(MemorySegment hmxobj, MemorySegment puMxId, int fdwId) {
        var mh$ = mixerGetID$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, puMxId, fdwId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLA* PMIXERCONTROLA;
     * }
     */
    public static final OfAddress PMIXERCONTROLA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLA* LPMIXERCONTROLA;
     * }
     */
    public static final OfAddress LPMIXERCONTROLA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLW* PMIXERCONTROLW;
     * }
     */
    public static final OfAddress PMIXERCONTROLW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLW* LPMIXERCONTROLW;
     * }
     */
    public static final OfAddress LPMIXERCONTROLW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLA* PMIXERCONTROL;
     * }
     */
    public static final OfAddress PMIXERCONTROL = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLA* LPMIXERCONTROL;
     * }
     */
    public static final OfAddress LPMIXERCONTROL = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINECONTROLSA* PMIXERLINECONTROLSA;
     * }
     */
    public static final OfAddress PMIXERLINECONTROLSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINECONTROLSA* LPMIXERLINECONTROLSA;
     * }
     */
    public static final OfAddress LPMIXERLINECONTROLSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINECONTROLSW* PMIXERLINECONTROLSW;
     * }
     */
    public static final OfAddress PMIXERLINECONTROLSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINECONTROLSW* LPMIXERLINECONTROLSW;
     * }
     */
    public static final OfAddress LPMIXERLINECONTROLSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINECONTROLSA* PMIXERLINECONTROLS;
     * }
     */
    public static final OfAddress PMIXERLINECONTROLS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERLINECONTROLSA* LPMIXERLINECONTROLS;
     * }
     */
    public static final OfAddress LPMIXERLINECONTROLS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetLineControlsA$MH() {
        return RuntimeHelper.requireNonNull(constants$628.mixerGetLineControlsA$MH,"mixerGetLineControlsA");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetLineControlsA(HMIXEROBJ hmxobj, LPMIXERLINECONTROLSA pmxlc, DWORD fdwControls);
     * }
     */
    public static int mixerGetLineControlsA(MemorySegment hmxobj, MemorySegment pmxlc, int fdwControls) {
        var mh$ = mixerGetLineControlsA$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxlc, fdwControls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineControlsW$MH() {
        return RuntimeHelper.requireNonNull(constants$628.mixerGetLineControlsW$MH,"mixerGetLineControlsW");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetLineControlsW(HMIXEROBJ hmxobj, LPMIXERLINECONTROLSW pmxlc, DWORD fdwControls);
     * }
     */
    public static int mixerGetLineControlsW(MemorySegment hmxobj, MemorySegment pmxlc, int fdwControls) {
        var mh$ = mixerGetLineControlsW$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxlc, fdwControls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS* PMIXERCONTROLDETAILS;
     * }
     */
    public static final OfAddress PMIXERCONTROLDETAILS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS* LPMIXERCONTROLDETAILS;
     * }
     */
    public static final OfAddress LPMIXERCONTROLDETAILS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA* PMIXERCONTROLDETAILS_LISTTEXTA;
     * }
     */
    public static final OfAddress PMIXERCONTROLDETAILS_LISTTEXTA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA* LPMIXERCONTROLDETAILS_LISTTEXTA;
     * }
     */
    public static final OfAddress LPMIXERCONTROLDETAILS_LISTTEXTA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW* PMIXERCONTROLDETAILS_LISTTEXTW;
     * }
     */
    public static final OfAddress PMIXERCONTROLDETAILS_LISTTEXTW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW* LPMIXERCONTROLDETAILS_LISTTEXTW;
     * }
     */
    public static final OfAddress LPMIXERCONTROLDETAILS_LISTTEXTW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA* PMIXERCONTROLDETAILS_LISTTEXT;
     * }
     */
    public static final OfAddress PMIXERCONTROLDETAILS_LISTTEXT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA* LPMIXERCONTROLDETAILS_LISTTEXT;
     * }
     */
    public static final OfAddress LPMIXERCONTROLDETAILS_LISTTEXT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS_BOOLEAN* PMIXERCONTROLDETAILS_BOOLEAN;
     * }
     */
    public static final OfAddress PMIXERCONTROLDETAILS_BOOLEAN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS_BOOLEAN* LPMIXERCONTROLDETAILS_BOOLEAN;
     * }
     */
    public static final OfAddress LPMIXERCONTROLDETAILS_BOOLEAN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS_SIGNED* PMIXERCONTROLDETAILS_SIGNED;
     * }
     */
    public static final OfAddress PMIXERCONTROLDETAILS_SIGNED = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS_SIGNED* LPMIXERCONTROLDETAILS_SIGNED;
     * }
     */
    public static final OfAddress LPMIXERCONTROLDETAILS_SIGNED = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS_UNSIGNED* PMIXERCONTROLDETAILS_UNSIGNED;
     * }
     */
    public static final OfAddress PMIXERCONTROLDETAILS_UNSIGNED = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tMIXERCONTROLDETAILS_UNSIGNED* LPMIXERCONTROLDETAILS_UNSIGNED;
     * }
     */
    public static final OfAddress LPMIXERCONTROLDETAILS_UNSIGNED = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle mixerGetControlDetailsA$MH() {
        return RuntimeHelper.requireNonNull(constants$628.mixerGetControlDetailsA$MH,"mixerGetControlDetailsA");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetControlDetailsA(HMIXEROBJ hmxobj, LPMIXERCONTROLDETAILS pmxcd, DWORD fdwDetails);
     * }
     */
    public static int mixerGetControlDetailsA(MemorySegment hmxobj, MemorySegment pmxcd, int fdwDetails) {
        var mh$ = mixerGetControlDetailsA$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxcd, fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetControlDetailsW$MH() {
        return RuntimeHelper.requireNonNull(constants$628.mixerGetControlDetailsW$MH,"mixerGetControlDetailsW");
    }
    /**
     * {@snippet :
     * MMRESULT mixerGetControlDetailsW(HMIXEROBJ hmxobj, LPMIXERCONTROLDETAILS pmxcd, DWORD fdwDetails);
     * }
     */
    public static int mixerGetControlDetailsW(MemorySegment hmxobj, MemorySegment pmxcd, int fdwDetails) {
        var mh$ = mixerGetControlDetailsW$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxcd, fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerSetControlDetails$MH() {
        return RuntimeHelper.requireNonNull(constants$628.mixerSetControlDetails$MH,"mixerSetControlDetails");
    }
    /**
     * {@snippet :
     * MMRESULT mixerSetControlDetails(HMIXEROBJ hmxobj, LPMIXERCONTROLDETAILS pmxcd, DWORD fdwDetails);
     * }
     */
    public static int mixerSetControlDetails(MemorySegment hmxobj, MemorySegment pmxcd, int fdwDetails) {
        var mh$ = mixerSetControlDetails$MH();
        try {
            return (int)mh$.invokeExact(hmxobj, pmxcd, fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct timecaps_tag* PTIMECAPS;
     * }
     */
    public static final OfAddress PTIMECAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct timecaps_tag* NPTIMECAPS;
     * }
     */
    public static final OfAddress NPTIMECAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct timecaps_tag* LPTIMECAPS;
     * }
     */
    public static final OfAddress LPTIMECAPS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle timeGetSystemTime$MH() {
        return RuntimeHelper.requireNonNull(constants$628.timeGetSystemTime$MH,"timeGetSystemTime");
    }
    /**
     * {@snippet :
     * MMRESULT timeGetSystemTime(LPMMTIME pmmt, UINT cbmmt);
     * }
     */
    public static int timeGetSystemTime(MemorySegment pmmt, int cbmmt) {
        var mh$ = timeGetSystemTime$MH();
        try {
            return (int)mh$.invokeExact(pmmt, cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeGetTime$MH() {
        return RuntimeHelper.requireNonNull(constants$629.timeGetTime$MH,"timeGetTime");
    }
    /**
     * {@snippet :
     * DWORD timeGetTime();
     * }
     */
    public static int timeGetTime() {
        var mh$ = timeGetTime$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeGetDevCaps$MH() {
        return RuntimeHelper.requireNonNull(constants$629.timeGetDevCaps$MH,"timeGetDevCaps");
    }
    /**
     * {@snippet :
     * MMRESULT timeGetDevCaps(LPTIMECAPS ptc, UINT cbtc);
     * }
     */
    public static int timeGetDevCaps(MemorySegment ptc, int cbtc) {
        var mh$ = timeGetDevCaps$MH();
        try {
            return (int)mh$.invokeExact(ptc, cbtc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeBeginPeriod$MH() {
        return RuntimeHelper.requireNonNull(constants$629.timeBeginPeriod$MH,"timeBeginPeriod");
    }
    /**
     * {@snippet :
     * MMRESULT timeBeginPeriod(UINT uPeriod);
     * }
     */
    public static int timeBeginPeriod(int uPeriod) {
        var mh$ = timeBeginPeriod$MH();
        try {
            return (int)mh$.invokeExact(uPeriod);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeEndPeriod$MH() {
        return RuntimeHelper.requireNonNull(constants$629.timeEndPeriod$MH,"timeEndPeriod");
    }
    /**
     * {@snippet :
     * MMRESULT timeEndPeriod(UINT uPeriod);
     * }
     */
    public static int timeEndPeriod(int uPeriod) {
        var mh$ = timeEndPeriod$MH();
        try {
            return (int)mh$.invokeExact(uPeriod);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSA* PJOYCAPSA;
     * }
     */
    public static final OfAddress PJOYCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSA* NPJOYCAPSA;
     * }
     */
    public static final OfAddress NPJOYCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSA* LPJOYCAPSA;
     * }
     */
    public static final OfAddress LPJOYCAPSA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSW* PJOYCAPSW;
     * }
     */
    public static final OfAddress PJOYCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSW* NPJOYCAPSW;
     * }
     */
    public static final OfAddress NPJOYCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSW* LPJOYCAPSW;
     * }
     */
    public static final OfAddress LPJOYCAPSW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSA* PJOYCAPS;
     * }
     */
    public static final OfAddress PJOYCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSA* NPJOYCAPS;
     * }
     */
    public static final OfAddress NPJOYCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPSA* LPJOYCAPS;
     * }
     */
    public static final OfAddress LPJOYCAPS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2A* PJOYCAPS2A;
     * }
     */
    public static final OfAddress PJOYCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2A* NPJOYCAPS2A;
     * }
     */
    public static final OfAddress NPJOYCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2A* LPJOYCAPS2A;
     * }
     */
    public static final OfAddress LPJOYCAPS2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2W* PJOYCAPS2W;
     * }
     */
    public static final OfAddress PJOYCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2W* NPJOYCAPS2W;
     * }
     */
    public static final OfAddress NPJOYCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2W* LPJOYCAPS2W;
     * }
     */
    public static final OfAddress LPJOYCAPS2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2A* PJOYCAPS2;
     * }
     */
    public static final OfAddress PJOYCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2A* NPJOYCAPS2;
     * }
     */
    public static final OfAddress NPJOYCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct tagJOYCAPS2A* LPJOYCAPS2;
     * }
     */
    public static final OfAddress LPJOYCAPS2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct joyinfo_tag* PJOYINFO;
     * }
     */
    public static final OfAddress PJOYINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct joyinfo_tag* NPJOYINFO;
     * }
     */
    public static final OfAddress NPJOYINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct joyinfo_tag* LPJOYINFO;
     * }
     */
    public static final OfAddress LPJOYINFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct joyinfoex_tag* PJOYINFOEX;
     * }
     */
    public static final OfAddress PJOYINFOEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct joyinfoex_tag* NPJOYINFOEX;
     * }
     */
    public static final OfAddress NPJOYINFOEX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct joyinfoex_tag* LPJOYINFOEX;
     * }
     */
    public static final OfAddress LPJOYINFOEX = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle joyGetPosEx$MH() {
        return RuntimeHelper.requireNonNull(constants$629.joyGetPosEx$MH,"joyGetPosEx");
    }
    /**
     * {@snippet :
     * MMRESULT joyGetPosEx(UINT uJoyID, LPJOYINFOEX pji);
     * }
     */
    public static int joyGetPosEx(int uJoyID, MemorySegment pji) {
        var mh$ = joyGetPosEx$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pji);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$629.joyGetNumDevs$MH,"joyGetNumDevs");
    }
    /**
     * {@snippet :
     * UINT joyGetNumDevs();
     * }
     */
    public static int joyGetNumDevs() {
        var mh$ = joyGetNumDevs$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$630.joyGetDevCapsA$MH,"joyGetDevCapsA");
    }
    /**
     * {@snippet :
     * MMRESULT joyGetDevCapsA(UINT_PTR uJoyID, LPJOYCAPSA pjc, UINT cbjc);
     * }
     */
    public static int joyGetDevCapsA(long uJoyID, MemorySegment pjc, int cbjc) {
        var mh$ = joyGetDevCapsA$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pjc, cbjc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$630.joyGetDevCapsW$MH,"joyGetDevCapsW");
    }
    /**
     * {@snippet :
     * MMRESULT joyGetDevCapsW(UINT_PTR uJoyID, LPJOYCAPSW pjc, UINT cbjc);
     * }
     */
    public static int joyGetDevCapsW(long uJoyID, MemorySegment pjc, int cbjc) {
        var mh$ = joyGetDevCapsW$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pjc, cbjc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetPos$MH() {
        return RuntimeHelper.requireNonNull(constants$630.joyGetPos$MH,"joyGetPos");
    }
    /**
     * {@snippet :
     * MMRESULT joyGetPos(UINT uJoyID, LPJOYINFO pji);
     * }
     */
    public static int joyGetPos(int uJoyID, MemorySegment pji) {
        var mh$ = joyGetPos$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, pji);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetThreshold$MH() {
        return RuntimeHelper.requireNonNull(constants$630.joyGetThreshold$MH,"joyGetThreshold");
    }
    /**
     * {@snippet :
     * MMRESULT joyGetThreshold(UINT uJoyID, LPUINT puThreshold);
     * }
     */
    public static int joyGetThreshold(int uJoyID, MemorySegment puThreshold) {
        var mh$ = joyGetThreshold$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, puThreshold);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyReleaseCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$630.joyReleaseCapture$MH,"joyReleaseCapture");
    }
    /**
     * {@snippet :
     * MMRESULT joyReleaseCapture(UINT uJoyID);
     * }
     */
    public static int joyReleaseCapture(int uJoyID) {
        var mh$ = joyReleaseCapture$MH();
        try {
            return (int)mh$.invokeExact(uJoyID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joySetCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$630.joySetCapture$MH,"joySetCapture");
    }
    /**
     * {@snippet :
     * MMRESULT joySetCapture(HWND hwnd, UINT uJoyID, UINT uPeriod, BOOL fChanged);
     * }
     */
    public static int joySetCapture(MemorySegment hwnd, int uJoyID, int uPeriod, int fChanged) {
        var mh$ = joySetCapture$MH();
        try {
            return (int)mh$.invokeExact(hwnd, uJoyID, uPeriod, fChanged);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joySetThreshold$MH() {
        return RuntimeHelper.requireNonNull(constants$631.joySetThreshold$MH,"joySetThreshold");
    }
    /**
     * {@snippet :
     * MMRESULT joySetThreshold(UINT uJoyID, UINT uThreshold);
     * }
     */
    public static int joySetThreshold(int uJoyID, int uThreshold) {
        var mh$ = joySetThreshold$MH();
        try {
            return (int)mh$.invokeExact(uJoyID, uThreshold);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyConfigChanged$MH() {
        return RuntimeHelper.requireNonNull(constants$631.joyConfigChanged$MH,"joyConfigChanged");
    }
    /**
     * {@snippet :
     * MMRESULT joyConfigChanged(DWORD dwFlags);
     * }
     */
    public static int joyConfigChanged(int dwFlags) {
        var mh$ = joyConfigChanged$MH();
        try {
            return (int)mh$.invokeExact(dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _NCB* PNCB;
     * }
     */
    public static final OfAddress PNCB = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _ADAPTER_STATUS* PADAPTER_STATUS;
     * }
     */
    public static final OfAddress PADAPTER_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _NAME_BUFFER* PNAME_BUFFER;
     * }
     */
    public static final OfAddress PNAME_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SESSION_HEADER* PSESSION_HEADER;
     * }
     */
    public static final OfAddress PSESSION_HEADER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SESSION_BUFFER* PSESSION_BUFFER;
     * }
     */
    public static final OfAddress PSESSION_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _LANA_ENUM* PLANA_ENUM;
     * }
     */
    public static final OfAddress PLANA_ENUM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FIND_NAME_HEADER* PFIND_NAME_HEADER;
     * }
     */
    public static final OfAddress PFIND_NAME_HEADER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FIND_NAME_BUFFER* PFIND_NAME_BUFFER;
     * }
     */
    public static final OfAddress PFIND_NAME_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _ACTION_HEADER* PACTION_HEADER;
     * }
     */
    public static final OfAddress PACTION_HEADER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle Netbios$MH() {
        return RuntimeHelper.requireNonNull(constants$631.Netbios$MH,"Netbios");
    }
    /**
     * {@snippet :
     * UCHAR Netbios(PNCB pncb);
     * }
     */
    public static byte Netbios(MemorySegment pncb) {
        var mh$ = Netbios$MH();
        try {
            return (byte)mh$.invokeExact(pncb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* I_RPC_HANDLE;
     * }
     */
    public static final OfAddress I_RPC_HANDLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef long RPC_STATUS;
     * }
     */
    public static final OfInt RPC_STATUS = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned char* RPC_CSTR;
     * }
     */
    public static final OfAddress RPC_CSTR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short* RPC_WSTR;
     * }
     */
    public static final OfAddress RPC_WSTR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short* RPC_CWSTR;
     * }
     */
    public static final OfAddress RPC_CWSTR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* RPC_BINDING_HANDLE;
     * }
     */
    public static final OfAddress RPC_BINDING_HANDLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* handle_t;
     * }
     */
    public static final OfAddress handle_t = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* RPC_IF_HANDLE;
     * }
     */
    public static final OfAddress RPC_IF_HANDLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_POLICY* PRPC_POLICY;
     * }
     */
    public static final OfAddress PRPC_POLICY = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcBindingCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$632.RpcBindingCopy$MH,"RpcBindingCopy");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingCopy(RPC_BINDING_HANDLE SourceBinding, RPC_BINDING_HANDLE* DestinationBinding);
     * }
     */
    public static int RpcBindingCopy(MemorySegment SourceBinding, MemorySegment DestinationBinding) {
        var mh$ = RpcBindingCopy$MH();
        try {
            return (int)mh$.invokeExact(SourceBinding, DestinationBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFree$MH() {
        return RuntimeHelper.requireNonNull(constants$632.RpcBindingFree$MH,"RpcBindingFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingFree(RPC_BINDING_HANDLE* Binding);
     * }
     */
    public static int RpcBindingFree(MemorySegment Binding) {
        var mh$ = RpcBindingFree$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetOption$MH() {
        return RuntimeHelper.requireNonNull(constants$632.RpcBindingSetOption$MH,"RpcBindingSetOption");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingSetOption(RPC_BINDING_HANDLE hBinding, unsigned long option, ULONG_PTR optionValue);
     * }
     */
    public static int RpcBindingSetOption(MemorySegment hBinding, int option, long optionValue) {
        var mh$ = RpcBindingSetOption$MH();
        try {
            return (int)mh$.invokeExact(hBinding, option, optionValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqOption$MH() {
        return RuntimeHelper.requireNonNull(constants$633.RpcBindingInqOption$MH,"RpcBindingInqOption");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqOption(RPC_BINDING_HANDLE hBinding, unsigned long option, ULONG_PTR* pOptionValue);
     * }
     */
    public static int RpcBindingInqOption(MemorySegment hBinding, int option, MemorySegment pOptionValue) {
        var mh$ = RpcBindingInqOption$MH();
        try {
            return (int)mh$.invokeExact(hBinding, option, pOptionValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFromStringBindingA$MH() {
        return RuntimeHelper.requireNonNull(constants$633.RpcBindingFromStringBindingA$MH,"RpcBindingFromStringBindingA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingFromStringBindingA(RPC_CSTR StringBinding, RPC_BINDING_HANDLE* Binding);
     * }
     */
    public static int RpcBindingFromStringBindingA(MemorySegment StringBinding, MemorySegment Binding) {
        var mh$ = RpcBindingFromStringBindingA$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFromStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$633.RpcBindingFromStringBindingW$MH,"RpcBindingFromStringBindingW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingFromStringBindingW(RPC_WSTR StringBinding, RPC_BINDING_HANDLE* Binding);
     * }
     */
    public static int RpcBindingFromStringBindingW(MemorySegment StringBinding, MemorySegment Binding) {
        var mh$ = RpcBindingFromStringBindingW$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsGetContextBinding$MH() {
        return RuntimeHelper.requireNonNull(constants$633.RpcSsGetContextBinding$MH,"RpcSsGetContextBinding");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcSsGetContextBinding(void* ContextHandle, RPC_BINDING_HANDLE* Binding);
     * }
     */
    public static int RpcSsGetContextBinding(MemorySegment ContextHandle, MemorySegment Binding) {
        var mh$ = RpcSsGetContextBinding$MH();
        try {
            return (int)mh$.invokeExact(ContextHandle, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqMaxCalls$MH() {
        return RuntimeHelper.requireNonNull(constants$633.RpcBindingInqMaxCalls$MH,"RpcBindingInqMaxCalls");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqMaxCalls(RPC_BINDING_HANDLE Binding, unsigned int* MaxCalls);
     * }
     */
    public static int RpcBindingInqMaxCalls(MemorySegment Binding, MemorySegment MaxCalls) {
        var mh$ = RpcBindingInqMaxCalls$MH();
        try {
            return (int)mh$.invokeExact(Binding, MaxCalls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqObject$MH() {
        return RuntimeHelper.requireNonNull(constants$633.RpcBindingInqObject$MH,"RpcBindingInqObject");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqObject(RPC_BINDING_HANDLE Binding, UUID* ObjectUuid);
     * }
     */
    public static int RpcBindingInqObject(MemorySegment Binding, MemorySegment ObjectUuid) {
        var mh$ = RpcBindingInqObject$MH();
        try {
            return (int)mh$.invokeExact(Binding, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingReset$MH() {
        return RuntimeHelper.requireNonNull(constants$634.RpcBindingReset$MH,"RpcBindingReset");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingReset(RPC_BINDING_HANDLE Binding);
     * }
     */
    public static int RpcBindingReset(MemorySegment Binding) {
        var mh$ = RpcBindingReset$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetObject$MH() {
        return RuntimeHelper.requireNonNull(constants$634.RpcBindingSetObject$MH,"RpcBindingSetObject");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingSetObject(RPC_BINDING_HANDLE Binding, UUID* ObjectUuid);
     * }
     */
    public static int RpcBindingSetObject(MemorySegment Binding, MemorySegment ObjectUuid) {
        var mh$ = RpcBindingSetObject$MH();
        try {
            return (int)mh$.invokeExact(Binding, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqDefaultProtectLevel$MH() {
        return RuntimeHelper.requireNonNull(constants$634.RpcMgmtInqDefaultProtectLevel$MH,"RpcMgmtInqDefaultProtectLevel");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtInqDefaultProtectLevel(unsigned long AuthnSvc, unsigned long* AuthnLevel);
     * }
     */
    public static int RpcMgmtInqDefaultProtectLevel(int AuthnSvc, MemorySegment AuthnLevel) {
        var mh$ = RpcMgmtInqDefaultProtectLevel$MH();
        try {
            return (int)mh$.invokeExact(AuthnSvc, AuthnLevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingToStringBindingA$MH() {
        return RuntimeHelper.requireNonNull(constants$634.RpcBindingToStringBindingA$MH,"RpcBindingToStringBindingA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingToStringBindingA(RPC_BINDING_HANDLE Binding, RPC_CSTR* StringBinding);
     * }
     */
    public static int RpcBindingToStringBindingA(MemorySegment Binding, MemorySegment StringBinding) {
        var mh$ = RpcBindingToStringBindingA$MH();
        try {
            return (int)mh$.invokeExact(Binding, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingToStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$634.RpcBindingToStringBindingW$MH,"RpcBindingToStringBindingW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingToStringBindingW(RPC_BINDING_HANDLE Binding, RPC_WSTR* StringBinding);
     * }
     */
    public static int RpcBindingToStringBindingW(MemorySegment Binding, MemorySegment StringBinding) {
        var mh$ = RpcBindingToStringBindingW$MH();
        try {
            return (int)mh$.invokeExact(Binding, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$634.RpcBindingVectorFree$MH,"RpcBindingVectorFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingVectorFree(RPC_BINDING_VECTOR** BindingVector);
     * }
     */
    public static int RpcBindingVectorFree(MemorySegment BindingVector) {
        var mh$ = RpcBindingVectorFree$MH();
        try {
            return (int)mh$.invokeExact(BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingComposeA$MH() {
        return RuntimeHelper.requireNonNull(constants$635.RpcStringBindingComposeA$MH,"RpcStringBindingComposeA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcStringBindingComposeA(RPC_CSTR ObjUuid, RPC_CSTR ProtSeq, RPC_CSTR NetworkAddr, RPC_CSTR Endpoint, RPC_CSTR Options, RPC_CSTR* StringBinding);
     * }
     */
    public static int RpcStringBindingComposeA(MemorySegment ObjUuid, MemorySegment ProtSeq, MemorySegment NetworkAddr, MemorySegment Endpoint, MemorySegment Options, MemorySegment StringBinding) {
        var mh$ = RpcStringBindingComposeA$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, ProtSeq, NetworkAddr, Endpoint, Options, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingComposeW$MH() {
        return RuntimeHelper.requireNonNull(constants$635.RpcStringBindingComposeW$MH,"RpcStringBindingComposeW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcStringBindingComposeW(RPC_WSTR ObjUuid, RPC_WSTR ProtSeq, RPC_WSTR NetworkAddr, RPC_WSTR Endpoint, RPC_WSTR Options, RPC_WSTR* StringBinding);
     * }
     */
    public static int RpcStringBindingComposeW(MemorySegment ObjUuid, MemorySegment ProtSeq, MemorySegment NetworkAddr, MemorySegment Endpoint, MemorySegment Options, MemorySegment StringBinding) {
        var mh$ = RpcStringBindingComposeW$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, ProtSeq, NetworkAddr, Endpoint, Options, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingParseA$MH() {
        return RuntimeHelper.requireNonNull(constants$635.RpcStringBindingParseA$MH,"RpcStringBindingParseA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcStringBindingParseA(RPC_CSTR StringBinding, RPC_CSTR* ObjUuid, RPC_CSTR* Protseq, RPC_CSTR* NetworkAddr, RPC_CSTR* Endpoint, RPC_CSTR* NetworkOptions);
     * }
     */
    public static int RpcStringBindingParseA(MemorySegment StringBinding, MemorySegment ObjUuid, MemorySegment Protseq, MemorySegment NetworkAddr, MemorySegment Endpoint, MemorySegment NetworkOptions) {
        var mh$ = RpcStringBindingParseA$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, ObjUuid, Protseq, NetworkAddr, Endpoint, NetworkOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingParseW$MH() {
        return RuntimeHelper.requireNonNull(constants$635.RpcStringBindingParseW$MH,"RpcStringBindingParseW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcStringBindingParseW(RPC_WSTR StringBinding, RPC_WSTR* ObjUuid, RPC_WSTR* Protseq, RPC_WSTR* NetworkAddr, RPC_WSTR* Endpoint, RPC_WSTR* NetworkOptions);
     * }
     */
    public static int RpcStringBindingParseW(MemorySegment StringBinding, MemorySegment ObjUuid, MemorySegment Protseq, MemorySegment NetworkAddr, MemorySegment Endpoint, MemorySegment NetworkOptions) {
        var mh$ = RpcStringBindingParseW$MH();
        try {
            return (int)mh$.invokeExact(StringBinding, ObjUuid, Protseq, NetworkAddr, Endpoint, NetworkOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringFreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$635.RpcStringFreeA$MH,"RpcStringFreeA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcStringFreeA(RPC_CSTR* String);
     * }
     */
    public static int RpcStringFreeA(MemorySegment String_) {
        var mh$ = RpcStringFreeA$MH();
        try {
            return (int)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringFreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$635.RpcStringFreeW$MH,"RpcStringFreeW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcStringFreeW(RPC_WSTR* String);
     * }
     */
    public static int RpcStringFreeW(MemorySegment String_) {
        var mh$ = RpcStringFreeW$MH();
        try {
            return (int)mh$.invokeExact(String_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcIfInqId$MH() {
        return RuntimeHelper.requireNonNull(constants$636.RpcIfInqId$MH,"RpcIfInqId");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcIfInqId(RPC_IF_HANDLE RpcIfHandle, RPC_IF_ID* RpcIfId);
     * }
     */
    public static int RpcIfInqId(MemorySegment RpcIfHandle, MemorySegment RpcIfId) {
        var mh$ = RpcIfInqId$MH();
        try {
            return (int)mh$.invokeExact(RpcIfHandle, RpcIfId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkIsProtseqValidA$MH() {
        return RuntimeHelper.requireNonNull(constants$636.RpcNetworkIsProtseqValidA$MH,"RpcNetworkIsProtseqValidA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcNetworkIsProtseqValidA(RPC_CSTR Protseq);
     * }
     */
    public static int RpcNetworkIsProtseqValidA(MemorySegment Protseq) {
        var mh$ = RpcNetworkIsProtseqValidA$MH();
        try {
            return (int)mh$.invokeExact(Protseq);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkIsProtseqValidW$MH() {
        return RuntimeHelper.requireNonNull(constants$636.RpcNetworkIsProtseqValidW$MH,"RpcNetworkIsProtseqValidW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcNetworkIsProtseqValidW(RPC_WSTR Protseq);
     * }
     */
    public static int RpcNetworkIsProtseqValidW(MemorySegment Protseq) {
        var mh$ = RpcNetworkIsProtseqValidW$MH();
        try {
            return (int)mh$.invokeExact(Protseq);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqComTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$636.RpcMgmtInqComTimeout$MH,"RpcMgmtInqComTimeout");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtInqComTimeout(RPC_BINDING_HANDLE Binding, unsigned int* Timeout);
     * }
     */
    public static int RpcMgmtInqComTimeout(MemorySegment Binding, MemorySegment Timeout) {
        var mh$ = RpcMgmtInqComTimeout$MH();
        try {
            return (int)mh$.invokeExact(Binding, Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetComTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$636.RpcMgmtSetComTimeout$MH,"RpcMgmtSetComTimeout");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtSetComTimeout(RPC_BINDING_HANDLE Binding, unsigned int Timeout);
     * }
     */
    public static int RpcMgmtSetComTimeout(MemorySegment Binding, int Timeout) {
        var mh$ = RpcMgmtSetComTimeout$MH();
        try {
            return (int)mh$.invokeExact(Binding, Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetCancelTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$636.RpcMgmtSetCancelTimeout$MH,"RpcMgmtSetCancelTimeout");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtSetCancelTimeout(long Timeout);
     * }
     */
    public static int RpcMgmtSetCancelTimeout(int Timeout) {
        var mh$ = RpcMgmtSetCancelTimeout$MH();
        try {
            return (int)mh$.invokeExact(Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkInqProtseqsA$MH() {
        return RuntimeHelper.requireNonNull(constants$637.RpcNetworkInqProtseqsA$MH,"RpcNetworkInqProtseqsA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcNetworkInqProtseqsA(RPC_PROTSEQ_VECTORA** ProtseqVector);
     * }
     */
    public static int RpcNetworkInqProtseqsA(MemorySegment ProtseqVector) {
        var mh$ = RpcNetworkInqProtseqsA$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkInqProtseqsW$MH() {
        return RuntimeHelper.requireNonNull(constants$637.RpcNetworkInqProtseqsW$MH,"RpcNetworkInqProtseqsW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcNetworkInqProtseqsW(RPC_PROTSEQ_VECTORW** ProtseqVector);
     * }
     */
    public static int RpcNetworkInqProtseqsW(MemorySegment ProtseqVector) {
        var mh$ = RpcNetworkInqProtseqsW$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectInqType$MH() {
        return RuntimeHelper.requireNonNull(constants$637.RpcObjectInqType$MH,"RpcObjectInqType");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcObjectInqType(UUID* ObjUuid, UUID* TypeUuid);
     * }
     */
    public static int RpcObjectInqType(MemorySegment ObjUuid, MemorySegment TypeUuid) {
        var mh$ = RpcObjectInqType$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, TypeUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectSetInqFn$MH() {
        return RuntimeHelper.requireNonNull(constants$637.RpcObjectSetInqFn$MH,"RpcObjectSetInqFn");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcObjectSetInqFn(void (*InquiryFn)(UUID*,UUID*,RPC_STATUS*));
     * }
     */
    public static int RpcObjectSetInqFn(MemorySegment InquiryFn) {
        var mh$ = RpcObjectSetInqFn$MH();
        try {
            return (int)mh$.invokeExact(InquiryFn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectSetType$MH() {
        return RuntimeHelper.requireNonNull(constants$638.RpcObjectSetType$MH,"RpcObjectSetType");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcObjectSetType(UUID* ObjUuid, UUID* TypeUuid);
     * }
     */
    public static int RpcObjectSetType(MemorySegment ObjUuid, MemorySegment TypeUuid) {
        var mh$ = RpcObjectSetType$MH();
        try {
            return (int)mh$.invokeExact(ObjUuid, TypeUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcProtseqVectorFreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$638.RpcProtseqVectorFreeA$MH,"RpcProtseqVectorFreeA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcProtseqVectorFreeA(RPC_PROTSEQ_VECTORA** ProtseqVector);
     * }
     */
    public static int RpcProtseqVectorFreeA(MemorySegment ProtseqVector) {
        var mh$ = RpcProtseqVectorFreeA$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcProtseqVectorFreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$638.RpcProtseqVectorFreeW$MH,"RpcProtseqVectorFreeW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcProtseqVectorFreeW(RPC_PROTSEQ_VECTORW** ProtseqVector);
     * }
     */
    public static int RpcProtseqVectorFreeW(MemorySegment ProtseqVector) {
        var mh$ = RpcProtseqVectorFreeW$MH();
        try {
            return (int)mh$.invokeExact(ProtseqVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindings$MH() {
        return RuntimeHelper.requireNonNull(constants$638.RpcServerInqBindings$MH,"RpcServerInqBindings");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInqBindings(RPC_BINDING_VECTOR** BindingVector);
     * }
     */
    public static int RpcServerInqBindings(MemorySegment BindingVector) {
        var mh$ = RpcServerInqBindings$MH();
        try {
            return (int)mh$.invokeExact(BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindingsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$638.RpcServerInqBindingsEx$MH,"RpcServerInqBindingsEx");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInqBindingsEx(void* SecurityDescriptor, RPC_BINDING_VECTOR** BindingVector);
     * }
     */
    public static int RpcServerInqBindingsEx(MemorySegment SecurityDescriptor, MemorySegment BindingVector) {
        var mh$ = RpcServerInqBindingsEx$MH();
        try {
            return (int)mh$.invokeExact(SecurityDescriptor, BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqIf$MH() {
        return RuntimeHelper.requireNonNull(constants$638.RpcServerInqIf$MH,"RpcServerInqIf");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInqIf(RPC_IF_HANDLE IfSpec, UUID* MgrTypeUuid, void** MgrEpv);
     * }
     */
    public static int RpcServerInqIf(MemorySegment IfSpec, MemorySegment MgrTypeUuid, MemorySegment MgrEpv) {
        var mh$ = RpcServerInqIf$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerListen$MH() {
        return RuntimeHelper.requireNonNull(constants$639.RpcServerListen$MH,"RpcServerListen");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerListen(unsigned int MinimumCallThreads, unsigned int MaxCalls, unsigned int DontWait);
     * }
     */
    public static int RpcServerListen(int MinimumCallThreads, int MaxCalls, int DontWait) {
        var mh$ = RpcServerListen$MH();
        try {
            return (int)mh$.invokeExact(MinimumCallThreads, MaxCalls, DontWait);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf$MH() {
        return RuntimeHelper.requireNonNull(constants$639.RpcServerRegisterIf$MH,"RpcServerRegisterIf");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerRegisterIf(RPC_IF_HANDLE IfSpec, UUID* MgrTypeUuid, void* MgrEpv);
     * }
     */
    public static int RpcServerRegisterIf(MemorySegment IfSpec, MemorySegment MgrTypeUuid, MemorySegment MgrEpv) {
        var mh$ = RpcServerRegisterIf$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$639.RpcServerRegisterIfEx$MH,"RpcServerRegisterIfEx");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerRegisterIfEx(RPC_IF_HANDLE IfSpec, UUID* MgrTypeUuid, void* MgrEpv, unsigned int Flags, unsigned int MaxCalls, RPC_STATUS (*IfCallback)(RPC_IF_HANDLE,void*));
     * }
     */
    public static int RpcServerRegisterIfEx(MemorySegment IfSpec, MemorySegment MgrTypeUuid, MemorySegment MgrEpv, int Flags, int MaxCalls, MemorySegment IfCallback) {
        var mh$ = RpcServerRegisterIfEx$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, IfCallback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf2$MH() {
        return RuntimeHelper.requireNonNull(constants$640.RpcServerRegisterIf2$MH,"RpcServerRegisterIf2");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerRegisterIf2(RPC_IF_HANDLE IfSpec, UUID* MgrTypeUuid, void* MgrEpv, unsigned int Flags, unsigned int MaxCalls, unsigned int MaxRpcSize, RPC_STATUS (*IfCallbackFn)(RPC_IF_HANDLE,void*));
     * }
     */
    public static int RpcServerRegisterIf2(MemorySegment IfSpec, MemorySegment MgrTypeUuid, MemorySegment MgrEpv, int Flags, int MaxCalls, int MaxRpcSize, MemorySegment IfCallbackFn) {
        var mh$ = RpcServerRegisterIf2$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, MaxRpcSize, IfCallbackFn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf3$MH() {
        return RuntimeHelper.requireNonNull(constants$640.RpcServerRegisterIf3$MH,"RpcServerRegisterIf3");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerRegisterIf3(RPC_IF_HANDLE IfSpec, UUID* MgrTypeUuid, void* MgrEpv, unsigned int Flags, unsigned int MaxCalls, unsigned int MaxRpcSize, RPC_STATUS (*IfCallback)(RPC_IF_HANDLE,void*), void* SecurityDescriptor);
     * }
     */
    public static int RpcServerRegisterIf3(MemorySegment IfSpec, MemorySegment MgrTypeUuid, MemorySegment MgrEpv, int Flags, int MaxCalls, int MaxRpcSize, MemorySegment IfCallback, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerRegisterIf3$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, MgrEpv, Flags, MaxCalls, MaxRpcSize, IfCallback, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnregisterIf$MH() {
        return RuntimeHelper.requireNonNull(constants$640.RpcServerUnregisterIf$MH,"RpcServerUnregisterIf");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUnregisterIf(RPC_IF_HANDLE IfSpec, UUID* MgrTypeUuid, unsigned int WaitForCallsToComplete);
     * }
     */
    public static int RpcServerUnregisterIf(MemorySegment IfSpec, MemorySegment MgrTypeUuid, int WaitForCallsToComplete) {
        var mh$ = RpcServerUnregisterIf$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, WaitForCallsToComplete);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnregisterIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$641.RpcServerUnregisterIfEx$MH,"RpcServerUnregisterIfEx");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUnregisterIfEx(RPC_IF_HANDLE IfSpec, UUID* MgrTypeUuid, int RundownContextHandles);
     * }
     */
    public static int RpcServerUnregisterIfEx(MemorySegment IfSpec, MemorySegment MgrTypeUuid, int RundownContextHandles) {
        var mh$ = RpcServerUnregisterIfEx$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, MgrTypeUuid, RundownContextHandles);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqs$MH() {
        return RuntimeHelper.requireNonNull(constants$641.RpcServerUseAllProtseqs$MH,"RpcServerUseAllProtseqs");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseAllProtseqs(unsigned int MaxCalls, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseAllProtseqs(int MaxCalls, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseAllProtseqs$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$641.RpcServerUseAllProtseqsEx$MH,"RpcServerUseAllProtseqsEx");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseAllProtseqsEx(unsigned int MaxCalls, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseAllProtseqsEx(int MaxCalls, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseAllProtseqsEx$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsIf$MH() {
        return RuntimeHelper.requireNonNull(constants$641.RpcServerUseAllProtseqsIf$MH,"RpcServerUseAllProtseqsIf");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseAllProtseqsIf(unsigned int MaxCalls, RPC_IF_HANDLE IfSpec, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseAllProtseqsIf(int MaxCalls, MemorySegment IfSpec, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseAllProtseqsIf$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, IfSpec, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$641.RpcServerUseAllProtseqsIfEx$MH,"RpcServerUseAllProtseqsIfEx");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseAllProtseqsIfEx(unsigned int MaxCalls, RPC_IF_HANDLE IfSpec, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseAllProtseqsIfEx(int MaxCalls, MemorySegment IfSpec, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseAllProtseqsIfEx$MH();
        try {
            return (int)mh$.invokeExact(MaxCalls, IfSpec, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqA$MH() {
        return RuntimeHelper.requireNonNull(constants$641.RpcServerUseProtseqA$MH,"RpcServerUseProtseqA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqA(RPC_CSTR Protseq, unsigned int MaxCalls, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseProtseqA(MemorySegment Protseq, int MaxCalls, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqExA$MH() {
        return RuntimeHelper.requireNonNull(constants$642.RpcServerUseProtseqExA$MH,"RpcServerUseProtseqExA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqExA(RPC_CSTR Protseq, unsigned int MaxCalls, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseProtseqExA(MemorySegment Protseq, int MaxCalls, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseProtseqExA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqW$MH() {
        return RuntimeHelper.requireNonNull(constants$642.RpcServerUseProtseqW$MH,"RpcServerUseProtseqW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqW(RPC_WSTR Protseq, unsigned int MaxCalls, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseProtseqW(MemorySegment Protseq, int MaxCalls, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqExW$MH() {
        return RuntimeHelper.requireNonNull(constants$642.RpcServerUseProtseqExW$MH,"RpcServerUseProtseqExW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqExW(RPC_WSTR Protseq, unsigned int MaxCalls, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseProtseqExW(MemorySegment Protseq, int MaxCalls, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseProtseqExW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpA$MH() {
        return RuntimeHelper.requireNonNull(constants$642.RpcServerUseProtseqEpA$MH,"RpcServerUseProtseqEpA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqEpA(RPC_CSTR Protseq, unsigned int MaxCalls, RPC_CSTR Endpoint, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseProtseqEpA(MemorySegment Protseq, int MaxCalls, MemorySegment Endpoint, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqEpA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpExA$MH() {
        return RuntimeHelper.requireNonNull(constants$642.RpcServerUseProtseqEpExA$MH,"RpcServerUseProtseqEpExA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqEpExA(RPC_CSTR Protseq, unsigned int MaxCalls, RPC_CSTR Endpoint, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseProtseqEpExA(MemorySegment Protseq, int MaxCalls, MemorySegment Endpoint, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseProtseqEpExA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpW$MH() {
        return RuntimeHelper.requireNonNull(constants$642.RpcServerUseProtseqEpW$MH,"RpcServerUseProtseqEpW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqEpW(RPC_WSTR Protseq, unsigned int MaxCalls, RPC_WSTR Endpoint, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseProtseqEpW(MemorySegment Protseq, int MaxCalls, MemorySegment Endpoint, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqEpW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpExW$MH() {
        return RuntimeHelper.requireNonNull(constants$643.RpcServerUseProtseqEpExW$MH,"RpcServerUseProtseqEpExW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqEpExW(RPC_WSTR Protseq, unsigned int MaxCalls, RPC_WSTR Endpoint, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseProtseqEpExW(MemorySegment Protseq, int MaxCalls, MemorySegment Endpoint, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseProtseqEpExW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfA$MH() {
        return RuntimeHelper.requireNonNull(constants$643.RpcServerUseProtseqIfA$MH,"RpcServerUseProtseqIfA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqIfA(RPC_CSTR Protseq, unsigned int MaxCalls, RPC_IF_HANDLE IfSpec, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseProtseqIfA(MemorySegment Protseq, int MaxCalls, MemorySegment IfSpec, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqIfA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfExA$MH() {
        return RuntimeHelper.requireNonNull(constants$643.RpcServerUseProtseqIfExA$MH,"RpcServerUseProtseqIfExA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqIfExA(RPC_CSTR Protseq, unsigned int MaxCalls, RPC_IF_HANDLE IfSpec, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseProtseqIfExA(MemorySegment Protseq, int MaxCalls, MemorySegment IfSpec, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseProtseqIfExA$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfW$MH() {
        return RuntimeHelper.requireNonNull(constants$643.RpcServerUseProtseqIfW$MH,"RpcServerUseProtseqIfW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqIfW(RPC_WSTR Protseq, unsigned int MaxCalls, RPC_IF_HANDLE IfSpec, void* SecurityDescriptor);
     * }
     */
    public static int RpcServerUseProtseqIfW(MemorySegment Protseq, int MaxCalls, MemorySegment IfSpec, MemorySegment SecurityDescriptor) {
        var mh$ = RpcServerUseProtseqIfW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfExW$MH() {
        return RuntimeHelper.requireNonNull(constants$643.RpcServerUseProtseqIfExW$MH,"RpcServerUseProtseqIfExW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerUseProtseqIfExW(RPC_WSTR Protseq, unsigned int MaxCalls, RPC_IF_HANDLE IfSpec, void* SecurityDescriptor, PRPC_POLICY Policy);
     * }
     */
    public static int RpcServerUseProtseqIfExW(MemorySegment Protseq, int MaxCalls, MemorySegment IfSpec, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = RpcServerUseProtseqIfExW$MH();
        try {
            return (int)mh$.invokeExact(Protseq, MaxCalls, IfSpec, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerYield$MH() {
        return RuntimeHelper.requireNonNull(constants$643.RpcServerYield$MH,"RpcServerYield");
    }
    /**
     * {@snippet :
     * void RpcServerYield();
     * }
     */
    public static void RpcServerYield() {
        var mh$ = RpcServerYield$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtStatsVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$644.RpcMgmtStatsVectorFree$MH,"RpcMgmtStatsVectorFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtStatsVectorFree(RPC_STATS_VECTOR** StatsVector);
     * }
     */
    public static int RpcMgmtStatsVectorFree(MemorySegment StatsVector) {
        var mh$ = RpcMgmtStatsVectorFree$MH();
        try {
            return (int)mh$.invokeExact(StatsVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqStats$MH() {
        return RuntimeHelper.requireNonNull(constants$644.RpcMgmtInqStats$MH,"RpcMgmtInqStats");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtInqStats(RPC_BINDING_HANDLE Binding, RPC_STATS_VECTOR** Statistics);
     * }
     */
    public static int RpcMgmtInqStats(MemorySegment Binding, MemorySegment Statistics) {
        var mh$ = RpcMgmtInqStats$MH();
        try {
            return (int)mh$.invokeExact(Binding, Statistics);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtIsServerListening$MH() {
        return RuntimeHelper.requireNonNull(constants$644.RpcMgmtIsServerListening$MH,"RpcMgmtIsServerListening");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtIsServerListening(RPC_BINDING_HANDLE Binding);
     * }
     */
    public static int RpcMgmtIsServerListening(MemorySegment Binding) {
        var mh$ = RpcMgmtIsServerListening$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtStopServerListening$MH() {
        return RuntimeHelper.requireNonNull(constants$644.RpcMgmtStopServerListening$MH,"RpcMgmtStopServerListening");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtStopServerListening(RPC_BINDING_HANDLE Binding);
     * }
     */
    public static int RpcMgmtStopServerListening(MemorySegment Binding) {
        var mh$ = RpcMgmtStopServerListening$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtWaitServerListen$MH() {
        return RuntimeHelper.requireNonNull(constants$644.RpcMgmtWaitServerListen$MH,"RpcMgmtWaitServerListen");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtWaitServerListen();
     * }
     */
    public static int RpcMgmtWaitServerListen() {
        var mh$ = RpcMgmtWaitServerListen$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetServerStackSize$MH() {
        return RuntimeHelper.requireNonNull(constants$644.RpcMgmtSetServerStackSize$MH,"RpcMgmtSetServerStackSize");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtSetServerStackSize(unsigned long ThreadStackSize);
     * }
     */
    public static int RpcMgmtSetServerStackSize(int ThreadStackSize) {
        var mh$ = RpcMgmtSetServerStackSize$MH();
        try {
            return (int)mh$.invokeExact(ThreadStackSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsDontSerializeContext$MH() {
        return RuntimeHelper.requireNonNull(constants$645.RpcSsDontSerializeContext$MH,"RpcSsDontSerializeContext");
    }
    /**
     * {@snippet :
     * void RpcSsDontSerializeContext();
     * }
     */
    public static void RpcSsDontSerializeContext() {
        var mh$ = RpcSsDontSerializeContext$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEnableIdleCleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$645.RpcMgmtEnableIdleCleanup$MH,"RpcMgmtEnableIdleCleanup");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtEnableIdleCleanup();
     * }
     */
    public static int RpcMgmtEnableIdleCleanup() {
        var mh$ = RpcMgmtEnableIdleCleanup$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqIfIds$MH() {
        return RuntimeHelper.requireNonNull(constants$645.RpcMgmtInqIfIds$MH,"RpcMgmtInqIfIds");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtInqIfIds(RPC_BINDING_HANDLE Binding, RPC_IF_ID_VECTOR** IfIdVector);
     * }
     */
    public static int RpcMgmtInqIfIds(MemorySegment Binding, MemorySegment IfIdVector) {
        var mh$ = RpcMgmtInqIfIds$MH();
        try {
            return (int)mh$.invokeExact(Binding, IfIdVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcIfIdVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$645.RpcIfIdVectorFree$MH,"RpcIfIdVectorFree");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcIfIdVectorFree(RPC_IF_ID_VECTOR** IfIdVector);
     * }
     */
    public static int RpcIfIdVectorFree(MemorySegment IfIdVector) {
        var mh$ = RpcIfIdVectorFree$MH();
        try {
            return (int)mh$.invokeExact(IfIdVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqServerPrincNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$645.RpcMgmtInqServerPrincNameA$MH,"RpcMgmtInqServerPrincNameA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtInqServerPrincNameA(RPC_BINDING_HANDLE Binding, unsigned long AuthnSvc, RPC_CSTR* ServerPrincName);
     * }
     */
    public static int RpcMgmtInqServerPrincNameA(MemorySegment Binding, int AuthnSvc, MemorySegment ServerPrincName) {
        var mh$ = RpcMgmtInqServerPrincNameA$MH();
        try {
            return (int)mh$.invokeExact(Binding, AuthnSvc, ServerPrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqServerPrincNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$645.RpcMgmtInqServerPrincNameW$MH,"RpcMgmtInqServerPrincNameW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtInqServerPrincNameW(RPC_BINDING_HANDLE Binding, unsigned long AuthnSvc, RPC_WSTR* ServerPrincName);
     * }
     */
    public static int RpcMgmtInqServerPrincNameW(MemorySegment Binding, int AuthnSvc, MemorySegment ServerPrincName) {
        var mh$ = RpcMgmtInqServerPrincNameW$MH();
        try {
            return (int)mh$.invokeExact(Binding, AuthnSvc, ServerPrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqDefaultPrincNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$646.RpcServerInqDefaultPrincNameA$MH,"RpcServerInqDefaultPrincNameA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInqDefaultPrincNameA(unsigned long AuthnSvc, RPC_CSTR* PrincName);
     * }
     */
    public static int RpcServerInqDefaultPrincNameA(int AuthnSvc, MemorySegment PrincName) {
        var mh$ = RpcServerInqDefaultPrincNameA$MH();
        try {
            return (int)mh$.invokeExact(AuthnSvc, PrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqDefaultPrincNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$646.RpcServerInqDefaultPrincNameW$MH,"RpcServerInqDefaultPrincNameW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInqDefaultPrincNameW(unsigned long AuthnSvc, RPC_WSTR* PrincName);
     * }
     */
    public static int RpcServerInqDefaultPrincNameW(int AuthnSvc, MemorySegment PrincName) {
        var mh$ = RpcServerInqDefaultPrincNameW$MH();
        try {
            return (int)mh$.invokeExact(AuthnSvc, PrincName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpResolveBinding$MH() {
        return RuntimeHelper.requireNonNull(constants$646.RpcEpResolveBinding$MH,"RpcEpResolveBinding");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcEpResolveBinding(RPC_BINDING_HANDLE Binding, RPC_IF_HANDLE IfSpec);
     * }
     */
    public static int RpcEpResolveBinding(MemorySegment Binding, MemorySegment IfSpec) {
        var mh$ = RpcEpResolveBinding$MH();
        try {
            return (int)mh$.invokeExact(Binding, IfSpec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingInqEntryNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$646.RpcNsBindingInqEntryNameA$MH,"RpcNsBindingInqEntryNameA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcNsBindingInqEntryNameA(RPC_BINDING_HANDLE Binding, unsigned long EntryNameSyntax, RPC_CSTR* EntryName);
     * }
     */
    public static int RpcNsBindingInqEntryNameA(MemorySegment Binding, int EntryNameSyntax, MemorySegment EntryName) {
        var mh$ = RpcNsBindingInqEntryNameA$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingInqEntryNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$646.RpcNsBindingInqEntryNameW$MH,"RpcNsBindingInqEntryNameW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcNsBindingInqEntryNameW(RPC_BINDING_HANDLE Binding, unsigned long EntryNameSyntax, RPC_WSTR* EntryName);
     * }
     */
    public static int RpcNsBindingInqEntryNameW(MemorySegment Binding, int EntryNameSyntax, MemorySegment EntryName) {
        var mh$ = RpcNsBindingInqEntryNameW$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* RPC_AUTH_IDENTITY_HANDLE;
     * }
     */
    public static final OfAddress RPC_AUTH_IDENTITY_HANDLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void* RPC_AUTHZ_HANDLE;
     * }
     */
    public static final OfAddress RPC_AUTHZ_HANDLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS* PRPC_SECURITY_QOS;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SEC_WINNT_AUTH_IDENTITY_W* PSEC_WINNT_AUTH_IDENTITY_W;
     * }
     */
    public static final OfAddress PSEC_WINNT_AUTH_IDENTITY_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SEC_WINNT_AUTH_IDENTITY_A* PSEC_WINNT_AUTH_IDENTITY_A;
     * }
     */
    public static final OfAddress PSEC_WINNT_AUTH_IDENTITY_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* PRPC_HTTP_TRANSPORT_CREDENTIALS_W;
     * }
     */
    public static final OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* PRPC_HTTP_TRANSPORT_CREDENTIALS_A;
     * }
     */
    public static final OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W* PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;
     * }
     */
    public static final OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A* PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;
     * }
     */
    public static final OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W* PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_W;
     * }
     */
    public static final OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A* PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_A;
     * }
     */
    public static final OfAddress PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V2_W* PRPC_SECURITY_QOS_V2_W;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V2_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V2_A* PRPC_SECURITY_QOS_V2_A;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V2_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V3_W* PRPC_SECURITY_QOS_V3_W;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V3_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V3_A* PRPC_SECURITY_QOS_V3_A;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V3_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V4_W* PRPC_SECURITY_QOS_V4_W;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V4_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V4_A* PRPC_SECURITY_QOS_V4_A;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V4_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V5_W* PRPC_SECURITY_QOS_V5_W;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V5_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SECURITY_QOS_V5_A* PRPC_SECURITY_QOS_V5_A;
     * }
     */
    public static final OfAddress PRPC_SECURITY_QOS_V5_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W* PRPC_BINDING_HANDLE_TEMPLATE_V1_W;
     * }
     */
    public static final OfAddress PRPC_BINDING_HANDLE_TEMPLATE_V1_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A* PRPC_BINDING_HANDLE_TEMPLATE_V1_A;
     * }
     */
    public static final OfAddress PRPC_BINDING_HANDLE_TEMPLATE_V1_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W* PRPC_BINDING_HANDLE_SECURITY_V1_W;
     * }
     */
    public static final OfAddress PRPC_BINDING_HANDLE_SECURITY_V1_W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A* PRPC_BINDING_HANDLE_SECURITY_V1_A;
     * }
     */
    public static final OfAddress PRPC_BINDING_HANDLE_SECURITY_V1_A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1* PRPC_BINDING_HANDLE_OPTIONS_V1;
     * }
     */
    public static final OfAddress PRPC_BINDING_HANDLE_OPTIONS_V1 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcBindingCreateA$MH() {
        return RuntimeHelper.requireNonNull(constants$646.RpcBindingCreateA$MH,"RpcBindingCreateA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingCreateA(RPC_BINDING_HANDLE_TEMPLATE_V1_A* Template, RPC_BINDING_HANDLE_SECURITY_V1_A* Security, RPC_BINDING_HANDLE_OPTIONS_V1* Options, RPC_BINDING_HANDLE* Binding);
     * }
     */
    public static int RpcBindingCreateA(MemorySegment Template, MemorySegment Security, MemorySegment Options, MemorySegment Binding) {
        var mh$ = RpcBindingCreateA$MH();
        try {
            return (int)mh$.invokeExact(Template, Security, Options, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingCreateW$MH() {
        return RuntimeHelper.requireNonNull(constants$647.RpcBindingCreateW$MH,"RpcBindingCreateW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingCreateW(RPC_BINDING_HANDLE_TEMPLATE_V1_W* Template, RPC_BINDING_HANDLE_SECURITY_V1_W* Security, RPC_BINDING_HANDLE_OPTIONS_V1* Options, RPC_BINDING_HANDLE* Binding);
     * }
     */
    public static int RpcBindingCreateW(MemorySegment Template, MemorySegment Security, MemorySegment Options, MemorySegment Binding) {
        var mh$ = RpcBindingCreateW$MH();
        try {
            return (int)mh$.invokeExact(Template, Security, Options, Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingGetTrainingContextHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$647.RpcBindingGetTrainingContextHandle$MH,"RpcBindingGetTrainingContextHandle");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingGetTrainingContextHandle(RPC_BINDING_HANDLE Binding, void** ContextHandle);
     * }
     */
    public static int RpcBindingGetTrainingContextHandle(MemorySegment Binding, MemorySegment ContextHandle) {
        var mh$ = RpcBindingGetTrainingContextHandle$MH();
        try {
            return (int)mh$.invokeExact(Binding, ContextHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindingHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$647.RpcServerInqBindingHandle$MH,"RpcServerInqBindingHandle");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInqBindingHandle(RPC_BINDING_HANDLE* Binding);
     * }
     */
    public static int RpcServerInqBindingHandle(MemorySegment Binding) {
        var mh$ = RpcServerInqBindingHandle$MH();
        try {
            return (int)mh$.invokeExact(Binding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _RPC_HTTP_REDIRECTOR_STAGE.RPCHTTP_RS_REDIRECT = 1;
     * }
     */
    public static int RPCHTTP_RS_REDIRECT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _RPC_HTTP_REDIRECTOR_STAGE.RPCHTTP_RS_ACCESS_1 = 2;
     * }
     */
    public static int RPCHTTP_RS_ACCESS_1() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _RPC_HTTP_REDIRECTOR_STAGE.RPCHTTP_RS_SESSION = 3;
     * }
     */
    public static int RPCHTTP_RS_SESSION() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _RPC_HTTP_REDIRECTOR_STAGE.RPCHTTP_RS_ACCESS_2 = 4;
     * }
     */
    public static int RPCHTTP_RS_ACCESS_2() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _RPC_HTTP_REDIRECTOR_STAGE.RPCHTTP_RS_INTERFACE = 5;
     * }
     */
    public static int RPCHTTP_RS_INTERFACE() {
        return (int)5L;
    }
    public static MethodHandle RpcImpersonateClient$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcImpersonateClient$MH,"RpcImpersonateClient");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcImpersonateClient(RPC_BINDING_HANDLE BindingHandle);
     * }
     */
    public static int RpcImpersonateClient(MemorySegment BindingHandle) {
        var mh$ = RpcImpersonateClient$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcImpersonateClient2$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcImpersonateClient2$MH,"RpcImpersonateClient2");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcImpersonateClient2(RPC_BINDING_HANDLE BindingHandle);
     * }
     */
    public static int RpcImpersonateClient2(MemorySegment BindingHandle) {
        var mh$ = RpcImpersonateClient2$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertToSelfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcRevertToSelfEx$MH,"RpcRevertToSelfEx");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcRevertToSelfEx(RPC_BINDING_HANDLE BindingHandle);
     * }
     */
    public static int RpcRevertToSelfEx(MemorySegment BindingHandle) {
        var mh$ = RpcRevertToSelfEx$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertToSelf$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcRevertToSelf$MH,"RpcRevertToSelf");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcRevertToSelf();
     * }
     */
    public static int RpcRevertToSelf() {
        var mh$ = RpcRevertToSelf$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcImpersonateClientContainer$MH() {
        return RuntimeHelper.requireNonNull(constants$648.RpcImpersonateClientContainer$MH,"RpcImpersonateClientContainer");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcImpersonateClientContainer(RPC_BINDING_HANDLE BindingHandle);
     * }
     */
    public static int RpcImpersonateClientContainer(MemorySegment BindingHandle) {
        var mh$ = RpcImpersonateClientContainer$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertContainerImpersonation$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcRevertContainerImpersonation$MH,"RpcRevertContainerImpersonation");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcRevertContainerImpersonation();
     * }
     */
    public static int RpcRevertContainerImpersonation() {
        var mh$ = RpcRevertContainerImpersonation$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientA$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingInqAuthClientA$MH,"RpcBindingInqAuthClientA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthClientA(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE* Privs, RPC_CSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, unsigned long* AuthzSvc);
     * }
     */
    public static int RpcBindingInqAuthClientA(MemorySegment ClientBinding, MemorySegment Privs, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthzSvc) {
        var mh$ = RpcBindingInqAuthClientA$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientW$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingInqAuthClientW$MH,"RpcBindingInqAuthClientW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthClientW(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE* Privs, RPC_WSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, unsigned long* AuthzSvc);
     * }
     */
    public static int RpcBindingInqAuthClientW(MemorySegment ClientBinding, MemorySegment Privs, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthzSvc) {
        var mh$ = RpcBindingInqAuthClientW$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientExA$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingInqAuthClientExA$MH,"RpcBindingInqAuthClientExA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthClientExA(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE* Privs, RPC_CSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, unsigned long* AuthzSvc, unsigned long Flags);
     * }
     */
    public static int RpcBindingInqAuthClientExA(MemorySegment ClientBinding, MemorySegment Privs, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthzSvc, int Flags) {
        var mh$ = RpcBindingInqAuthClientExA$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientExW$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingInqAuthClientExW$MH,"RpcBindingInqAuthClientExW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthClientExW(RPC_BINDING_HANDLE ClientBinding, RPC_AUTHZ_HANDLE* Privs, RPC_WSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, unsigned long* AuthzSvc, unsigned long Flags);
     * }
     */
    public static int RpcBindingInqAuthClientExW(MemorySegment ClientBinding, MemorySegment Privs, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthzSvc, int Flags) {
        var mh$ = RpcBindingInqAuthClientExW$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, Privs, ServerPrincName, AuthnLevel, AuthnSvc, AuthzSvc, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$649.RpcBindingInqAuthInfoA$MH,"RpcBindingInqAuthInfoA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthInfoA(RPC_BINDING_HANDLE Binding, RPC_CSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, RPC_AUTH_IDENTITY_HANDLE* AuthIdentity, unsigned long* AuthzSvc);
     * }
     */
    public static int RpcBindingInqAuthInfoA(MemorySegment Binding, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthIdentity, MemorySegment AuthzSvc) {
        var mh$ = RpcBindingInqAuthInfoA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcBindingInqAuthInfoW$MH,"RpcBindingInqAuthInfoW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthInfoW(RPC_BINDING_HANDLE Binding, RPC_WSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, RPC_AUTH_IDENTITY_HANDLE* AuthIdentity, unsigned long* AuthzSvc);
     * }
     */
    public static int RpcBindingInqAuthInfoW(MemorySegment Binding, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthIdentity, MemorySegment AuthzSvc) {
        var mh$ = RpcBindingInqAuthInfoW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcBindingSetAuthInfoA$MH,"RpcBindingSetAuthInfoA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingSetAuthInfoA(RPC_BINDING_HANDLE Binding, RPC_CSTR ServerPrincName, unsigned long AuthnLevel, unsigned long AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, unsigned long AuthzSvc);
     * }
     */
    public static int RpcBindingSetAuthInfoA(MemorySegment Binding, MemorySegment ServerPrincName, int AuthnLevel, int AuthnSvc, MemorySegment AuthIdentity, int AuthzSvc) {
        var mh$ = RpcBindingSetAuthInfoA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcBindingSetAuthInfoExA$MH,"RpcBindingSetAuthInfoExA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingSetAuthInfoExA(RPC_BINDING_HANDLE Binding, RPC_CSTR ServerPrincName, unsigned long AuthnLevel, unsigned long AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, unsigned long AuthzSvc, RPC_SECURITY_QOS* SecurityQos);
     * }
     */
    public static int RpcBindingSetAuthInfoExA(MemorySegment Binding, MemorySegment ServerPrincName, int AuthnLevel, int AuthnSvc, MemorySegment AuthIdentity, int AuthzSvc, MemorySegment SecurityQos) {
        var mh$ = RpcBindingSetAuthInfoExA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, SecurityQos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcBindingSetAuthInfoW$MH,"RpcBindingSetAuthInfoW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingSetAuthInfoW(RPC_BINDING_HANDLE Binding, RPC_WSTR ServerPrincName, unsigned long AuthnLevel, unsigned long AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, unsigned long AuthzSvc);
     * }
     */
    public static int RpcBindingSetAuthInfoW(MemorySegment Binding, MemorySegment ServerPrincName, int AuthnLevel, int AuthnSvc, MemorySegment AuthIdentity, int AuthzSvc) {
        var mh$ = RpcBindingSetAuthInfoW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcBindingSetAuthInfoExW$MH,"RpcBindingSetAuthInfoExW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingSetAuthInfoExW(RPC_BINDING_HANDLE Binding, RPC_WSTR ServerPrincName, unsigned long AuthnLevel, unsigned long AuthnSvc, RPC_AUTH_IDENTITY_HANDLE AuthIdentity, unsigned long AuthzSvc, RPC_SECURITY_QOS* SecurityQOS);
     * }
     */
    public static int RpcBindingSetAuthInfoExW(MemorySegment Binding, MemorySegment ServerPrincName, int AuthnLevel, int AuthnSvc, MemorySegment AuthIdentity, int AuthzSvc, MemorySegment SecurityQOS) {
        var mh$ = RpcBindingSetAuthInfoExW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, SecurityQOS);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$650.RpcBindingInqAuthInfoExA$MH,"RpcBindingInqAuthInfoExA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthInfoExA(RPC_BINDING_HANDLE Binding, RPC_CSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, RPC_AUTH_IDENTITY_HANDLE* AuthIdentity, unsigned long* AuthzSvc, unsigned long RpcQosVersion, RPC_SECURITY_QOS* SecurityQOS);
     * }
     */
    public static int RpcBindingInqAuthInfoExA(MemorySegment Binding, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthIdentity, MemorySegment AuthzSvc, int RpcQosVersion, MemorySegment SecurityQOS) {
        var mh$ = RpcBindingInqAuthInfoExA$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, RpcQosVersion, SecurityQOS);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcBindingInqAuthInfoExW$MH,"RpcBindingInqAuthInfoExW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingInqAuthInfoExW(RPC_BINDING_HANDLE Binding, RPC_WSTR* ServerPrincName, unsigned long* AuthnLevel, unsigned long* AuthnSvc, RPC_AUTH_IDENTITY_HANDLE* AuthIdentity, unsigned long* AuthzSvc, unsigned long RpcQosVersion, RPC_SECURITY_QOS* SecurityQOS);
     * }
     */
    public static int RpcBindingInqAuthInfoExW(MemorySegment Binding, MemorySegment ServerPrincName, MemorySegment AuthnLevel, MemorySegment AuthnSvc, MemorySegment AuthIdentity, MemorySegment AuthzSvc, int RpcQosVersion, MemorySegment SecurityQOS) {
        var mh$ = RpcBindingInqAuthInfoExW$MH();
        try {
            return (int)mh$.invokeExact(Binding, ServerPrincName, AuthnLevel, AuthnSvc, AuthIdentity, AuthzSvc, RpcQosVersion, SecurityQOS);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerCompleteSecurityCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcServerCompleteSecurityCallback$MH,"RpcServerCompleteSecurityCallback");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerCompleteSecurityCallback(RPC_BINDING_HANDLE BindingHandle, RPC_STATUS Status);
     * }
     */
    public static int RpcServerCompleteSecurityCallback(MemorySegment BindingHandle, int Status) {
        var mh$ = RpcServerCompleteSecurityCallback$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcServerRegisterAuthInfoA$MH,"RpcServerRegisterAuthInfoA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerRegisterAuthInfoA(RPC_CSTR ServerPrincName, unsigned long AuthnSvc, RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn, void* Arg);
     * }
     */
    public static int RpcServerRegisterAuthInfoA(MemorySegment ServerPrincName, int AuthnSvc, MemorySegment GetKeyFn, MemorySegment Arg) {
        var mh$ = RpcServerRegisterAuthInfoA$MH();
        try {
            return (int)mh$.invokeExact(ServerPrincName, AuthnSvc, GetKeyFn, Arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$651.RpcServerRegisterAuthInfoW$MH,"RpcServerRegisterAuthInfoW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerRegisterAuthInfoW(RPC_WSTR ServerPrincName, unsigned long AuthnSvc, RPC_AUTH_KEY_RETRIEVAL_FN GetKeyFn, void* Arg);
     * }
     */
    public static int RpcServerRegisterAuthInfoW(MemorySegment ServerPrincName, int AuthnSvc, MemorySegment GetKeyFn, MemorySegment Arg) {
        var mh$ = RpcServerRegisterAuthInfoW$MH();
        try {
            return (int)mh$.invokeExact(ServerPrincName, AuthnSvc, GetKeyFn, Arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct * PRPC_CLIENT_INFORMATION1;
     * }
     */
    public static final OfAddress PRPC_CLIENT_INFORMATION1 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcBindingServerFromClient$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcBindingServerFromClient$MH,"RpcBindingServerFromClient");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcBindingServerFromClient(RPC_BINDING_HANDLE ClientBinding, RPC_BINDING_HANDLE* ServerBinding);
     * }
     */
    public static int RpcBindingServerFromClient(MemorySegment ClientBinding, MemorySegment ServerBinding) {
        var mh$ = RpcBindingServerFromClient$MH();
        try {
            return (int)mh$.invokeExact(ClientBinding, ServerBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRaiseException$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcRaiseException$MH,"RpcRaiseException");
    }
    /**
     * {@snippet :
     * void RpcRaiseException(RPC_STATUS exception);
     * }
     */
    public static void RpcRaiseException(int exception) {
        var mh$ = RpcRaiseException$MH();
        try {
            mh$.invokeExact(exception);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcTestCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcTestCancel$MH,"RpcTestCancel");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcTestCancel();
     * }
     */
    public static int RpcTestCancel() {
        var mh$ = RpcTestCancel$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerTestCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcServerTestCancel$MH,"RpcServerTestCancel");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerTestCancel(RPC_BINDING_HANDLE BindingHandle);
     * }
     */
    public static int RpcServerTestCancel(MemorySegment BindingHandle) {
        var mh$ = RpcServerTestCancel$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcCancelThread$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcCancelThread$MH,"RpcCancelThread");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcCancelThread(void* Thread);
     * }
     */
    public static int RpcCancelThread(MemorySegment Thread) {
        var mh$ = RpcCancelThread$MH();
        try {
            return (int)mh$.invokeExact(Thread);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcCancelThreadEx$MH() {
        return RuntimeHelper.requireNonNull(constants$652.RpcCancelThreadEx$MH,"RpcCancelThreadEx");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcCancelThreadEx(void* Thread, long Timeout);
     * }
     */
    public static int RpcCancelThreadEx(MemorySegment Thread, int Timeout) {
        var mh$ = RpcCancelThreadEx$MH();
        try {
            return (int)mh$.invokeExact(Thread, Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$653.UuidCreate$MH,"UuidCreate");
    }
    /**
     * {@snippet :
     * RPC_STATUS UuidCreate(UUID* Uuid);
     * }
     */
    public static int UuidCreate(MemorySegment Uuid) {
        var mh$ = UuidCreate$MH();
        try {
            return (int)mh$.invokeExact(Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreateSequential$MH() {
        return RuntimeHelper.requireNonNull(constants$653.UuidCreateSequential$MH,"UuidCreateSequential");
    }
    /**
     * {@snippet :
     * RPC_STATUS UuidCreateSequential(UUID* Uuid);
     * }
     */
    public static int UuidCreateSequential(MemorySegment Uuid) {
        var mh$ = UuidCreateSequential$MH();
        try {
            return (int)mh$.invokeExact(Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidToStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$653.UuidToStringA$MH,"UuidToStringA");
    }
    /**
     * {@snippet :
     * RPC_STATUS UuidToStringA(const UUID* Uuid, RPC_CSTR* StringUuid);
     * }
     */
    public static int UuidToStringA(MemorySegment Uuid, MemorySegment StringUuid) {
        var mh$ = UuidToStringA$MH();
        try {
            return (int)mh$.invokeExact(Uuid, StringUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidFromStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$653.UuidFromStringA$MH,"UuidFromStringA");
    }
    /**
     * {@snippet :
     * RPC_STATUS UuidFromStringA(RPC_CSTR StringUuid, UUID* Uuid);
     * }
     */
    public static int UuidFromStringA(MemorySegment StringUuid, MemorySegment Uuid) {
        var mh$ = UuidFromStringA$MH();
        try {
            return (int)mh$.invokeExact(StringUuid, Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidToStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$653.UuidToStringW$MH,"UuidToStringW");
    }
    /**
     * {@snippet :
     * RPC_STATUS UuidToStringW(const UUID* Uuid, RPC_WSTR* StringUuid);
     * }
     */
    public static int UuidToStringW(MemorySegment Uuid, MemorySegment StringUuid) {
        var mh$ = UuidToStringW$MH();
        try {
            return (int)mh$.invokeExact(Uuid, StringUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidFromStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$653.UuidFromStringW$MH,"UuidFromStringW");
    }
    /**
     * {@snippet :
     * RPC_STATUS UuidFromStringW(RPC_WSTR StringUuid, UUID* Uuid);
     * }
     */
    public static int UuidFromStringW(MemorySegment StringUuid, MemorySegment Uuid) {
        var mh$ = UuidFromStringW$MH();
        try {
            return (int)mh$.invokeExact(StringUuid, Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCompare$MH() {
        return RuntimeHelper.requireNonNull(constants$654.UuidCompare$MH,"UuidCompare");
    }
    /**
     * {@snippet :
     * int UuidCompare(UUID* Uuid1, UUID* Uuid2, RPC_STATUS* Status);
     * }
     */
    public static int UuidCompare(MemorySegment Uuid1, MemorySegment Uuid2, MemorySegment Status) {
        var mh$ = UuidCompare$MH();
        try {
            return (int)mh$.invokeExact(Uuid1, Uuid2, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreateNil$MH() {
        return RuntimeHelper.requireNonNull(constants$654.UuidCreateNil$MH,"UuidCreateNil");
    }
    /**
     * {@snippet :
     * RPC_STATUS UuidCreateNil(UUID* NilUuid);
     * }
     */
    public static int UuidCreateNil(MemorySegment NilUuid) {
        var mh$ = UuidCreateNil$MH();
        try {
            return (int)mh$.invokeExact(NilUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidEqual$MH() {
        return RuntimeHelper.requireNonNull(constants$654.UuidEqual$MH,"UuidEqual");
    }
    /**
     * {@snippet :
     * int UuidEqual(UUID* Uuid1, UUID* Uuid2, RPC_STATUS* Status);
     * }
     */
    public static int UuidEqual(MemorySegment Uuid1, MemorySegment Uuid2, MemorySegment Status) {
        var mh$ = UuidEqual$MH();
        try {
            return (int)mh$.invokeExact(Uuid1, Uuid2, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidHash$MH() {
        return RuntimeHelper.requireNonNull(constants$654.UuidHash$MH,"UuidHash");
    }
    /**
     * {@snippet :
     * unsigned short UuidHash(UUID* Uuid, RPC_STATUS* Status);
     * }
     */
    public static short UuidHash(MemorySegment Uuid, MemorySegment Status) {
        var mh$ = UuidHash$MH();
        try {
            return (short)mh$.invokeExact(Uuid, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidIsNil$MH() {
        return RuntimeHelper.requireNonNull(constants$654.UuidIsNil$MH,"UuidIsNil");
    }
    /**
     * {@snippet :
     * int UuidIsNil(UUID* Uuid, RPC_STATUS* Status);
     * }
     */
    public static int UuidIsNil(MemorySegment Uuid, MemorySegment Status) {
        var mh$ = UuidIsNil$MH();
        try {
            return (int)mh$.invokeExact(Uuid, Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterNoReplaceA$MH() {
        return RuntimeHelper.requireNonNull(constants$654.RpcEpRegisterNoReplaceA$MH,"RpcEpRegisterNoReplaceA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcEpRegisterNoReplaceA(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR* BindingVector, UUID_VECTOR* UuidVector, RPC_CSTR Annotation);
     * }
     */
    public static int RpcEpRegisterNoReplaceA(MemorySegment IfSpec, MemorySegment BindingVector, MemorySegment UuidVector, MemorySegment Annotation) {
        var mh$ = RpcEpRegisterNoReplaceA$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterNoReplaceW$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcEpRegisterNoReplaceW$MH,"RpcEpRegisterNoReplaceW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcEpRegisterNoReplaceW(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR* BindingVector, UUID_VECTOR* UuidVector, RPC_WSTR Annotation);
     * }
     */
    public static int RpcEpRegisterNoReplaceW(MemorySegment IfSpec, MemorySegment BindingVector, MemorySegment UuidVector, MemorySegment Annotation) {
        var mh$ = RpcEpRegisterNoReplaceW$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterA$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcEpRegisterA$MH,"RpcEpRegisterA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcEpRegisterA(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR* BindingVector, UUID_VECTOR* UuidVector, RPC_CSTR Annotation);
     * }
     */
    public static int RpcEpRegisterA(MemorySegment IfSpec, MemorySegment BindingVector, MemorySegment UuidVector, MemorySegment Annotation) {
        var mh$ = RpcEpRegisterA$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterW$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcEpRegisterW$MH,"RpcEpRegisterW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcEpRegisterW(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR* BindingVector, UUID_VECTOR* UuidVector, RPC_WSTR Annotation);
     * }
     */
    public static int RpcEpRegisterW(MemorySegment IfSpec, MemorySegment BindingVector, MemorySegment UuidVector, MemorySegment Annotation) {
        var mh$ = RpcEpRegisterW$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpUnregister$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RpcEpUnregister$MH,"RpcEpUnregister");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcEpUnregister(RPC_IF_HANDLE IfSpec, RPC_BINDING_VECTOR* BindingVector, UUID_VECTOR* UuidVector);
     * }
     */
    public static int RpcEpUnregister(MemorySegment IfSpec, MemorySegment BindingVector, MemorySegment UuidVector) {
        var mh$ = RpcEpUnregister$MH();
        try {
            return (int)mh$.invokeExact(IfSpec, BindingVector, UuidVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DceErrorInqTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$655.DceErrorInqTextA$MH,"DceErrorInqTextA");
    }
    /**
     * {@snippet :
     * RPC_STATUS DceErrorInqTextA(RPC_STATUS RpcStatus, RPC_CSTR ErrorText);
     * }
     */
    public static int DceErrorInqTextA(int RpcStatus, MemorySegment ErrorText) {
        var mh$ = DceErrorInqTextA$MH();
        try {
            return (int)mh$.invokeExact(RpcStatus, ErrorText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DceErrorInqTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$655.DceErrorInqTextW$MH,"DceErrorInqTextW");
    }
    /**
     * {@snippet :
     * RPC_STATUS DceErrorInqTextW(RPC_STATUS RpcStatus, RPC_WSTR ErrorText);
     * }
     */
    public static int DceErrorInqTextW(int RpcStatus, MemorySegment ErrorText) {
        var mh$ = DceErrorInqTextW$MH();
        try {
            return (int)mh$.invokeExact(RpcStatus, ErrorText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void** RPC_EP_INQ_HANDLE;
     * }
     */
    public static final OfAddress RPC_EP_INQ_HANDLE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcMgmtEpEltInqBegin$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcMgmtEpEltInqBegin$MH,"RpcMgmtEpEltInqBegin");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtEpEltInqBegin(RPC_BINDING_HANDLE EpBinding, unsigned long InquiryType, RPC_IF_ID* IfId, unsigned long VersOption, UUID* ObjectUuid, RPC_EP_INQ_HANDLE* InquiryContext);
     * }
     */
    public static int RpcMgmtEpEltInqBegin(MemorySegment EpBinding, int InquiryType, MemorySegment IfId, int VersOption, MemorySegment ObjectUuid, MemorySegment InquiryContext) {
        var mh$ = RpcMgmtEpEltInqBegin$MH();
        try {
            return (int)mh$.invokeExact(EpBinding, InquiryType, IfId, VersOption, ObjectUuid, InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcMgmtEpEltInqDone$MH,"RpcMgmtEpEltInqDone");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtEpEltInqDone(RPC_EP_INQ_HANDLE* InquiryContext);
     * }
     */
    public static int RpcMgmtEpEltInqDone(MemorySegment InquiryContext) {
        var mh$ = RpcMgmtEpEltInqDone$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcMgmtEpEltInqNextA$MH,"RpcMgmtEpEltInqNextA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtEpEltInqNextA(RPC_EP_INQ_HANDLE InquiryContext, RPC_IF_ID* IfId, RPC_BINDING_HANDLE* Binding, UUID* ObjectUuid, RPC_CSTR* Annotation);
     * }
     */
    public static int RpcMgmtEpEltInqNextA(MemorySegment InquiryContext, MemorySegment IfId, MemorySegment Binding, MemorySegment ObjectUuid, MemorySegment Annotation) {
        var mh$ = RpcMgmtEpEltInqNextA$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, IfId, Binding, ObjectUuid, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcMgmtEpEltInqNextW$MH,"RpcMgmtEpEltInqNextW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtEpEltInqNextW(RPC_EP_INQ_HANDLE InquiryContext, RPC_IF_ID* IfId, RPC_BINDING_HANDLE* Binding, UUID* ObjectUuid, RPC_WSTR* Annotation);
     * }
     */
    public static int RpcMgmtEpEltInqNextW(MemorySegment InquiryContext, MemorySegment IfId, MemorySegment Binding, MemorySegment ObjectUuid, MemorySegment Annotation) {
        var mh$ = RpcMgmtEpEltInqNextW$MH();
        try {
            return (int)mh$.invokeExact(InquiryContext, IfId, Binding, ObjectUuid, Annotation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpUnregister$MH() {
        return RuntimeHelper.requireNonNull(constants$656.RpcMgmtEpUnregister$MH,"RpcMgmtEpUnregister");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtEpUnregister(RPC_BINDING_HANDLE EpBinding, RPC_IF_ID* IfId, RPC_BINDING_HANDLE Binding, UUID* ObjectUuid);
     * }
     */
    public static int RpcMgmtEpUnregister(MemorySegment EpBinding, MemorySegment IfId, MemorySegment Binding, MemorySegment ObjectUuid) {
        var mh$ = RpcMgmtEpUnregister$MH();
        try {
            return (int)mh$.invokeExact(EpBinding, IfId, Binding, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetAuthorizationFn$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcMgmtSetAuthorizationFn$MH,"RpcMgmtSetAuthorizationFn");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcMgmtSetAuthorizationFn(RPC_MGMT_AUTHORIZATION_FN AuthorizationFn);
     * }
     */
    public static int RpcMgmtSetAuthorizationFn(MemorySegment AuthorizationFn) {
        var mh$ = RpcMgmtSetAuthorizationFn$MH();
        try {
            return (int)mh$.invokeExact(AuthorizationFn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcExceptionFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RpcExceptionFilter$MH,"RpcExceptionFilter");
    }
    /**
     * {@snippet :
     * int RpcExceptionFilter(unsigned long ExceptionCode);
     * }
     */
    public static int RpcExceptionFilter(int ExceptionCode) {
        var mh$ = RpcExceptionFilter$MH();
        try {
            return (int)mh$.invokeExact(ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* RPC_INTERFACE_GROUP;
     * }
     */
    public static final OfAddress RPC_INTERFACE_GROUP = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef void** PRPC_INTERFACE_GROUP;
     * }
     */
    public static final OfAddress PRPC_INTERFACE_GROUP = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PRPC_ENDPOINT_TEMPLATEW;
     * }
     */
    public static final OfAddress PRPC_ENDPOINT_TEMPLATEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PRPC_ENDPOINT_TEMPLATEA;
     * }
     */
    public static final OfAddress PRPC_ENDPOINT_TEMPLATEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PRPC_INTERFACE_TEMPLATEA;
     * }
     */
    public static final OfAddress PRPC_INTERFACE_TEMPLATEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PRPC_INTERFACE_TEMPLATEW;
     * }
     */
    public static final OfAddress PRPC_INTERFACE_TEMPLATEW = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle RpcServerInterfaceGroupCreateW$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcServerInterfaceGroupCreateW$MH,"RpcServerInterfaceGroupCreateW");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInterfaceGroupCreateW(RPC_INTERFACE_TEMPLATEW* Interfaces, unsigned long NumIfs, RPC_ENDPOINT_TEMPLATEW* Endpoints, unsigned long NumEndpoints, unsigned long IdlePeriod, void (IdleCallbackFn)(RPC_INTERFACE_GROUP,void*,unsigned long), void* IdleCallbackContext, PRPC_INTERFACE_GROUP IfGroup);
     * }
     */
    public static int RpcServerInterfaceGroupCreateW(MemorySegment Interfaces, int NumIfs, MemorySegment Endpoints, int NumEndpoints, int IdlePeriod, MemorySegment IdleCallbackFn, MemorySegment IdleCallbackContext, MemorySegment IfGroup) {
        var mh$ = RpcServerInterfaceGroupCreateW$MH();
        try {
            return (int)mh$.invokeExact(Interfaces, NumIfs, Endpoints, NumEndpoints, IdlePeriod, IdleCallbackFn, IdleCallbackContext, IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupCreateA$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcServerInterfaceGroupCreateA$MH,"RpcServerInterfaceGroupCreateA");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInterfaceGroupCreateA(RPC_INTERFACE_TEMPLATEA* Interfaces, unsigned long NumIfs, RPC_ENDPOINT_TEMPLATEA* Endpoints, unsigned long NumEndpoints, unsigned long IdlePeriod, void (IdleCallbackFn)(RPC_INTERFACE_GROUP,void*,unsigned long), void* IdleCallbackContext, PRPC_INTERFACE_GROUP IfGroup);
     * }
     */
    public static int RpcServerInterfaceGroupCreateA(MemorySegment Interfaces, int NumIfs, MemorySegment Endpoints, int NumEndpoints, int IdlePeriod, MemorySegment IdleCallbackFn, MemorySegment IdleCallbackContext, MemorySegment IfGroup) {
        var mh$ = RpcServerInterfaceGroupCreateA$MH();
        try {
            return (int)mh$.invokeExact(Interfaces, NumIfs, Endpoints, NumEndpoints, IdlePeriod, IdleCallbackFn, IdleCallbackContext, IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupClose$MH() {
        return RuntimeHelper.requireNonNull(constants$658.RpcServerInterfaceGroupClose$MH,"RpcServerInterfaceGroupClose");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInterfaceGroupClose(RPC_INTERFACE_GROUP IfGroup);
     * }
     */
    public static int RpcServerInterfaceGroupClose(MemorySegment IfGroup) {
        var mh$ = RpcServerInterfaceGroupClose$MH();
        try {
            return (int)mh$.invokeExact(IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupActivate$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcServerInterfaceGroupActivate$MH,"RpcServerInterfaceGroupActivate");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInterfaceGroupActivate(RPC_INTERFACE_GROUP IfGroup);
     * }
     */
    public static int RpcServerInterfaceGroupActivate(MemorySegment IfGroup) {
        var mh$ = RpcServerInterfaceGroupActivate$MH();
        try {
            return (int)mh$.invokeExact(IfGroup);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupDeactivate$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcServerInterfaceGroupDeactivate$MH,"RpcServerInterfaceGroupDeactivate");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInterfaceGroupDeactivate(RPC_INTERFACE_GROUP IfGroup, unsigned long ForceDeactivation);
     * }
     */
    public static int RpcServerInterfaceGroupDeactivate(MemorySegment IfGroup, int ForceDeactivation) {
        var mh$ = RpcServerInterfaceGroupDeactivate$MH();
        try {
            return (int)mh$.invokeExact(IfGroup, ForceDeactivation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInterfaceGroupInqBindings$MH() {
        return RuntimeHelper.requireNonNull(constants$659.RpcServerInterfaceGroupInqBindings$MH,"RpcServerInterfaceGroupInqBindings");
    }
    /**
     * {@snippet :
     * RPC_STATUS RpcServerInterfaceGroupInqBindings(RPC_INTERFACE_GROUP IfGroup, RPC_BINDING_VECTOR** BindingVector);
     * }
     */
    public static int RpcServerInterfaceGroupInqBindings(MemorySegment IfGroup, MemorySegment BindingVector) {
        var mh$ = RpcServerInterfaceGroupInqBindings$MH();
        try {
            return (int)mh$.invokeExact(IfGroup, BindingVector);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _RPC_SYNTAX_IDENTIFIER* PRPC_SYNTAX_IDENTIFIER;
     * }
     */
    public static final OfAddress PRPC_SYNTAX_IDENTIFIER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_MESSAGE* PRPC_MESSAGE;
     * }
     */
    public static final OfAddress PRPC_MESSAGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum RPC_ADDRESS_CHANGE_TYPE.PROTOCOL_NOT_LOADED = 1;
     * }
     */
    public static int PROTOCOL_NOT_LOADED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum RPC_ADDRESS_CHANGE_TYPE.PROTOCOL_LOADED = 2;
     * }
     */
    public static int PROTOCOL_LOADED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum RPC_ADDRESS_CHANGE_TYPE.PROTOCOL_ADDRESS_CHANGE = 3;
     * }
     */
    public static int PROTOCOL_ADDRESS_CHANGE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef struct * PRPC_DISPATCH_TABLE;
     * }
     */
    public static final OfAddress PRPC_DISPATCH_TABLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_PROTSEQ_ENDPOINT* PRPC_PROTSEQ_ENDPOINT;
     * }
     */
    public static final OfAddress PRPC_PROTSEQ_ENDPOINT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_SERVER_INTERFACE* PRPC_SERVER_INTERFACE;
     * }
     */
    public static final OfAddress PRPC_SERVER_INTERFACE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RPC_CLIENT_INTERFACE* PRPC_CLIENT_INTERFACE;
     * }
     */
    public static final OfAddress PRPC_CLIENT_INTERFACE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle I_RpcNegotiateTransferSyntax$MH() {
        return RuntimeHelper.requireNonNull(constants$660.I_RpcNegotiateTransferSyntax$MH,"I_RpcNegotiateTransferSyntax");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcNegotiateTransferSyntax(RPC_MESSAGE* Message);
     * }
     */
    public static int I_RpcNegotiateTransferSyntax(MemorySegment Message) {
        var mh$ = I_RpcNegotiateTransferSyntax$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$660.I_RpcGetBuffer$MH,"I_RpcGetBuffer");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcGetBuffer(RPC_MESSAGE* Message);
     * }
     */
    public static int I_RpcGetBuffer(MemorySegment Message) {
        var mh$ = I_RpcGetBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetBufferWithObject$MH() {
        return RuntimeHelper.requireNonNull(constants$660.I_RpcGetBufferWithObject$MH,"I_RpcGetBufferWithObject");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcGetBufferWithObject(RPC_MESSAGE* Message, UUID* ObjectUuid);
     * }
     */
    public static int I_RpcGetBufferWithObject(MemorySegment Message, MemorySegment ObjectUuid) {
        var mh$ = I_RpcGetBufferWithObject$MH();
        try {
            return (int)mh$.invokeExact(Message, ObjectUuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSendReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$661.I_RpcSendReceive$MH,"I_RpcSendReceive");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcSendReceive(RPC_MESSAGE* Message);
     * }
     */
    public static int I_RpcSendReceive(MemorySegment Message) {
        var mh$ = I_RpcSendReceive$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$661.I_RpcFreeBuffer$MH,"I_RpcFreeBuffer");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcFreeBuffer(RPC_MESSAGE* Message);
     * }
     */
    public static int I_RpcFreeBuffer(MemorySegment Message) {
        var mh$ = I_RpcFreeBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSend$MH() {
        return RuntimeHelper.requireNonNull(constants$661.I_RpcSend$MH,"I_RpcSend");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcSend(PRPC_MESSAGE Message);
     * }
     */
    public static int I_RpcSend(MemorySegment Message) {
        var mh$ = I_RpcSend$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$661.I_RpcReceive$MH,"I_RpcReceive");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcReceive(PRPC_MESSAGE Message, unsigned int Size);
     * }
     */
    public static int I_RpcReceive(MemorySegment Message, int Size) {
        var mh$ = I_RpcReceive$MH();
        try {
            return (int)mh$.invokeExact(Message, Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreePipeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$661.I_RpcFreePipeBuffer$MH,"I_RpcFreePipeBuffer");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcFreePipeBuffer(RPC_MESSAGE* Message);
     * }
     */
    public static int I_RpcFreePipeBuffer(MemorySegment Message) {
        var mh$ = I_RpcFreePipeBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReallocPipeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$661.I_RpcReallocPipeBuffer$MH,"I_RpcReallocPipeBuffer");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcReallocPipeBuffer(PRPC_MESSAGE Message, unsigned int NewSize);
     * }
     */
    public static int I_RpcReallocPipeBuffer(MemorySegment Message, int NewSize) {
        var mh$ = I_RpcReallocPipeBuffer$MH();
        try {
            return (int)mh$.invokeExact(Message, NewSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef void* I_RPC_MUTEX;
     * }
     */
    public static final OfAddress I_RPC_MUTEX = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle I_RpcRequestMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$662.I_RpcRequestMutex$MH,"I_RpcRequestMutex");
    }
    /**
     * {@snippet :
     * void I_RpcRequestMutex(I_RPC_MUTEX* Mutex);
     * }
     */
    public static void I_RpcRequestMutex(MemorySegment Mutex) {
        var mh$ = I_RpcRequestMutex$MH();
        try {
            mh$.invokeExact(Mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcClearMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$662.I_RpcClearMutex$MH,"I_RpcClearMutex");
    }
    /**
     * {@snippet :
     * void I_RpcClearMutex(I_RPC_MUTEX Mutex);
     * }
     */
    public static void I_RpcClearMutex(MemorySegment Mutex) {
        var mh$ = I_RpcClearMutex$MH();
        try {
            mh$.invokeExact(Mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcDeleteMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$662.I_RpcDeleteMutex$MH,"I_RpcDeleteMutex");
    }
    /**
     * {@snippet :
     * void I_RpcDeleteMutex(I_RPC_MUTEX Mutex);
     * }
     */
    public static void I_RpcDeleteMutex(MemorySegment Mutex) {
        var mh$ = I_RpcDeleteMutex$MH();
        try {
            mh$.invokeExact(Mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$662.I_RpcAllocate$MH,"I_RpcAllocate");
    }
    /**
     * {@snippet :
     * void* I_RpcAllocate(unsigned int Size);
     * }
     */
    public static MemorySegment I_RpcAllocate(int Size) {
        var mh$ = I_RpcAllocate$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFree$MH() {
        return RuntimeHelper.requireNonNull(constants$662.I_RpcFree$MH,"I_RpcFree");
    }
    /**
     * {@snippet :
     * void I_RpcFree(void* Object);
     * }
     */
    public static void I_RpcFree(MemorySegment Object) {
        var mh$ = I_RpcFree$MH();
        try {
            mh$.invokeExact(Object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreeSystemHandleCollection$MH() {
        return RuntimeHelper.requireNonNull(constants$662.I_RpcFreeSystemHandleCollection$MH,"I_RpcFreeSystemHandleCollection");
    }
    /**
     * {@snippet :
     * unsigned long I_RpcFreeSystemHandleCollection(void* CallObj, unsigned long FreeFlags);
     * }
     */
    public static int I_RpcFreeSystemHandleCollection(MemorySegment CallObj, int FreeFlags) {
        var mh$ = I_RpcFreeSystemHandleCollection$MH();
        try {
            return (int)mh$.invokeExact(CallObj, FreeFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSetSystemHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$663.I_RpcSetSystemHandle$MH,"I_RpcSetSystemHandle");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcSetSystemHandle(void* Handle, unsigned char Type, unsigned long AccessMask, void* CallObj, unsigned long* HandleIndex);
     * }
     */
    public static int I_RpcSetSystemHandle(MemorySegment Handle, byte Type, int AccessMask, MemorySegment CallObj, MemorySegment HandleIndex) {
        var mh$ = I_RpcSetSystemHandle$MH();
        try {
            return (int)mh$.invokeExact(Handle, Type, AccessMask, CallObj, HandleIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetSystemHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$663.I_RpcGetSystemHandle$MH,"I_RpcGetSystemHandle");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcGetSystemHandle(unsigned char* pMemory, unsigned char Type, unsigned long AccessMask, unsigned long HandleIndex, void* CallObj);
     * }
     */
    public static int I_RpcGetSystemHandle(MemorySegment pMemory, byte Type, int AccessMask, int HandleIndex, MemorySegment CallObj) {
        var mh$ = I_RpcGetSystemHandle$MH();
        try {
            return (int)mh$.invokeExact(pMemory, Type, AccessMask, HandleIndex, CallObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreeSystemHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$663.I_RpcFreeSystemHandle$MH,"I_RpcFreeSystemHandle");
    }
    /**
     * {@snippet :
     * void I_RpcFreeSystemHandle(unsigned char Type, void* Handle);
     * }
     */
    public static void I_RpcFreeSystemHandle(byte Type, MemorySegment Handle) {
        var mh$ = I_RpcFreeSystemHandle$MH();
        try {
            mh$.invokeExact(Type, Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcPauseExecution$MH() {
        return RuntimeHelper.requireNonNull(constants$663.I_RpcPauseExecution$MH,"I_RpcPauseExecution");
    }
    /**
     * {@snippet :
     * void I_RpcPauseExecution(unsigned long Milliseconds);
     * }
     */
    public static void I_RpcPauseExecution(int Milliseconds) {
        var mh$ = I_RpcPauseExecution$MH();
        try {
            mh$.invokeExact(Milliseconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$663.I_RpcGetExtendedError$MH,"I_RpcGetExtendedError");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcGetExtendedError();
     * }
     */
    public static int I_RpcGetExtendedError() {
        var mh$ = I_RpcGetExtendedError$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION.MarshalDirectionMarshal = 0;
     * }
     */
    public static int MarshalDirectionMarshal() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION.MarshalDirectionUnmarshal = 1;
     * }
     */
    public static int MarshalDirectionUnmarshal() {
        return (int)1L;
    }
    public static MethodHandle I_RpcSystemHandleTypeSpecificWork$MH() {
        return RuntimeHelper.requireNonNull(constants$663.I_RpcSystemHandleTypeSpecificWork$MH,"I_RpcSystemHandleTypeSpecificWork");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcSystemHandleTypeSpecificWork(void* Handle, unsigned char ActualType, unsigned char IdlType, LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION MarshalDirection);
     * }
     */
    public static int I_RpcSystemHandleTypeSpecificWork(MemorySegment Handle, byte ActualType, byte IdlType, int MarshalDirection) {
        var mh$ = I_RpcSystemHandleTypeSpecificWork$MH();
        try {
            return (int)mh$.invokeExact(Handle, ActualType, IdlType, MarshalDirection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcMonitorAssociation$MH() {
        return RuntimeHelper.requireNonNull(constants$664.I_RpcMonitorAssociation$MH,"I_RpcMonitorAssociation");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcMonitorAssociation(RPC_BINDING_HANDLE Handle, PRPC_RUNDOWN RundownRoutine, void* Context);
     * }
     */
    public static int I_RpcMonitorAssociation(MemorySegment Handle, MemorySegment RundownRoutine, MemorySegment Context) {
        var mh$ = I_RpcMonitorAssociation$MH();
        try {
            return (int)mh$.invokeExact(Handle, RundownRoutine, Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcStopMonitorAssociation$MH() {
        return RuntimeHelper.requireNonNull(constants$664.I_RpcStopMonitorAssociation$MH,"I_RpcStopMonitorAssociation");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcStopMonitorAssociation(RPC_BINDING_HANDLE Handle);
     * }
     */
    public static int I_RpcStopMonitorAssociation(MemorySegment Handle) {
        var mh$ = I_RpcStopMonitorAssociation$MH();
        try {
            return (int)mh$.invokeExact(Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetCurrentCallHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$664.I_RpcGetCurrentCallHandle$MH,"I_RpcGetCurrentCallHandle");
    }
    /**
     * {@snippet :
     * RPC_BINDING_HANDLE I_RpcGetCurrentCallHandle();
     * }
     */
    public static MemorySegment I_RpcGetCurrentCallHandle() {
        var mh$ = I_RpcGetCurrentCallHandle$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetAssociationContext$MH() {
        return RuntimeHelper.requireNonNull(constants$664.I_RpcGetAssociationContext$MH,"I_RpcGetAssociationContext");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcGetAssociationContext(RPC_BINDING_HANDLE BindingHandle, void** AssociationContext);
     * }
     */
    public static int I_RpcGetAssociationContext(MemorySegment BindingHandle, MemorySegment AssociationContext) {
        var mh$ = I_RpcGetAssociationContext$MH();
        try {
            return (int)mh$.invokeExact(BindingHandle, AssociationContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetServerContextList$MH() {
        return RuntimeHelper.requireNonNull(constants$665.I_RpcGetServerContextList$MH,"I_RpcGetServerContextList");
    }
    /**
     * {@snippet :
     * void* I_RpcGetServerContextList(RPC_BINDING_HANDLE BindingHandle);
     * }
     */
    public static MemorySegment I_RpcGetServerContextList(MemorySegment BindingHandle) {
        var mh$ = I_RpcGetServerContextList$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(BindingHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSetServerContextList$MH() {
        return RuntimeHelper.requireNonNull(constants$665.I_RpcSetServerContextList$MH,"I_RpcSetServerContextList");
    }
    /**
     * {@snippet :
     * void I_RpcSetServerContextList(RPC_BINDING_HANDLE BindingHandle, void* ServerContextList);
     * }
     */
    public static void I_RpcSetServerContextList(MemorySegment BindingHandle, MemorySegment ServerContextList) {
        var mh$ = I_RpcSetServerContextList$MH();
        try {
            mh$.invokeExact(BindingHandle, ServerContextList);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsInterfaceExported$MH() {
        return RuntimeHelper.requireNonNull(constants$665.I_RpcNsInterfaceExported$MH,"I_RpcNsInterfaceExported");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcNsInterfaceExported(unsigned long EntryNameSyntax, unsigned short* EntryName, RPC_SERVER_INTERFACE* RpcInterfaceInformation);
     * }
     */
    public static int I_RpcNsInterfaceExported(int EntryNameSyntax, MemorySegment EntryName, MemorySegment RpcInterfaceInformation) {
        var mh$ = I_RpcNsInterfaceExported$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, RpcInterfaceInformation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsInterfaceUnexported$MH() {
        return RuntimeHelper.requireNonNull(constants$665.I_RpcNsInterfaceUnexported$MH,"I_RpcNsInterfaceUnexported");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcNsInterfaceUnexported(unsigned long EntryNameSyntax, unsigned short* EntryName, RPC_SERVER_INTERFACE* RpcInterfaceInformation);
     * }
     */
    public static int I_RpcNsInterfaceUnexported(int EntryNameSyntax, MemorySegment EntryName, MemorySegment RpcInterfaceInformation) {
        var mh$ = I_RpcNsInterfaceUnexported$MH();
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName, RpcInterfaceInformation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingToStaticStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$665.I_RpcBindingToStaticStringBindingW$MH,"I_RpcBindingToStaticStringBindingW");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingToStaticStringBindingW(RPC_BINDING_HANDLE Binding, unsigned short** StringBinding);
     * }
     */
    public static int I_RpcBindingToStaticStringBindingW(MemorySegment Binding, MemorySegment StringBinding) {
        var mh$ = I_RpcBindingToStaticStringBindingW$MH();
        try {
            return (int)mh$.invokeExact(Binding, StringBinding);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqSecurityContext$MH() {
        return RuntimeHelper.requireNonNull(constants$665.I_RpcBindingInqSecurityContext$MH,"I_RpcBindingInqSecurityContext");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqSecurityContext(RPC_BINDING_HANDLE Binding, void** SecurityContextHandle);
     * }
     */
    public static int I_RpcBindingInqSecurityContext(MemorySegment Binding, MemorySegment SecurityContextHandle) {
        var mh$ = I_RpcBindingInqSecurityContext$MH();
        try {
            return (int)mh$.invokeExact(Binding, SecurityContextHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _RPC_SEC_CONTEXT_KEY_INFO* PRPC_SEC_CONTEXT_KEY_INFO;
     * }
     */
    public static final OfAddress PRPC_SEC_CONTEXT_KEY_INFO = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle I_RpcBindingInqSecurityContextKeyInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$666.I_RpcBindingInqSecurityContextKeyInfo$MH,"I_RpcBindingInqSecurityContextKeyInfo");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqSecurityContextKeyInfo(RPC_BINDING_HANDLE Binding, void* KeyInfo);
     * }
     */
    public static int I_RpcBindingInqSecurityContextKeyInfo(MemorySegment Binding, MemorySegment KeyInfo) {
        var mh$ = I_RpcBindingInqSecurityContextKeyInfo$MH();
        try {
            return (int)mh$.invokeExact(Binding, KeyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqWireIdForSnego$MH() {
        return RuntimeHelper.requireNonNull(constants$666.I_RpcBindingInqWireIdForSnego$MH,"I_RpcBindingInqWireIdForSnego");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqWireIdForSnego(RPC_BINDING_HANDLE Binding, unsigned char* WireId);
     * }
     */
    public static int I_RpcBindingInqWireIdForSnego(MemorySegment Binding, MemorySegment WireId) {
        var mh$ = I_RpcBindingInqWireIdForSnego$MH();
        try {
            return (int)mh$.invokeExact(Binding, WireId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqMarshalledTargetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$666.I_RpcBindingInqMarshalledTargetInfo$MH,"I_RpcBindingInqMarshalledTargetInfo");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqMarshalledTargetInfo(RPC_BINDING_HANDLE Binding, unsigned long* MarshalledTargetInfoSize, RPC_CSTR* MarshalledTargetInfo);
     * }
     */
    public static int I_RpcBindingInqMarshalledTargetInfo(MemorySegment Binding, MemorySegment MarshalledTargetInfoSize, MemorySegment MarshalledTargetInfo) {
        var mh$ = I_RpcBindingInqMarshalledTargetInfo$MH();
        try {
            return (int)mh$.invokeExact(Binding, MarshalledTargetInfoSize, MarshalledTargetInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqLocalClientPID$MH() {
        return RuntimeHelper.requireNonNull(constants$666.I_RpcBindingInqLocalClientPID$MH,"I_RpcBindingInqLocalClientPID");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqLocalClientPID(RPC_BINDING_HANDLE Binding, unsigned long* Pid);
     * }
     */
    public static int I_RpcBindingInqLocalClientPID(MemorySegment Binding, MemorySegment Pid) {
        var mh$ = I_RpcBindingInqLocalClientPID$MH();
        try {
            return (int)mh$.invokeExact(Binding, Pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingHandleToAsyncHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$666.I_RpcBindingHandleToAsyncHandle$MH,"I_RpcBindingHandleToAsyncHandle");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingHandleToAsyncHandle(RPC_BINDING_HANDLE Binding, void** AsyncHandle);
     * }
     */
    public static int I_RpcBindingHandleToAsyncHandle(MemorySegment Binding, MemorySegment AsyncHandle) {
        var mh$ = I_RpcBindingHandleToAsyncHandle$MH();
        try {
            return (int)mh$.invokeExact(Binding, AsyncHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsBindingSetEntryNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$666.I_RpcNsBindingSetEntryNameW$MH,"I_RpcNsBindingSetEntryNameW");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcNsBindingSetEntryNameW(RPC_BINDING_HANDLE Binding, unsigned long EntryNameSyntax, RPC_WSTR EntryName);
     * }
     */
    public static int I_RpcNsBindingSetEntryNameW(MemorySegment Binding, int EntryNameSyntax, MemorySegment EntryName) {
        var mh$ = I_RpcNsBindingSetEntryNameW$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsBindingSetEntryNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$667.I_RpcNsBindingSetEntryNameA$MH,"I_RpcNsBindingSetEntryNameA");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcNsBindingSetEntryNameA(RPC_BINDING_HANDLE Binding, unsigned long EntryNameSyntax, RPC_CSTR EntryName);
     * }
     */
    public static int I_RpcNsBindingSetEntryNameA(MemorySegment Binding, int EntryNameSyntax, MemorySegment EntryName) {
        var mh$ = I_RpcNsBindingSetEntryNameA$MH();
        try {
            return (int)mh$.invokeExact(Binding, EntryNameSyntax, EntryName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseqEp2A$MH() {
        return RuntimeHelper.requireNonNull(constants$667.I_RpcServerUseProtseqEp2A$MH,"I_RpcServerUseProtseqEp2A");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcServerUseProtseqEp2A(RPC_CSTR NetworkAddress, RPC_CSTR Protseq, unsigned int MaxCalls, RPC_CSTR Endpoint, void* SecurityDescriptor, void* Policy);
     * }
     */
    public static int I_RpcServerUseProtseqEp2A(MemorySegment NetworkAddress, MemorySegment Protseq, int MaxCalls, MemorySegment Endpoint, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = I_RpcServerUseProtseqEp2A$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseqEp2W$MH() {
        return RuntimeHelper.requireNonNull(constants$667.I_RpcServerUseProtseqEp2W$MH,"I_RpcServerUseProtseqEp2W");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcServerUseProtseqEp2W(RPC_WSTR NetworkAddress, RPC_WSTR Protseq, unsigned int MaxCalls, RPC_WSTR Endpoint, void* SecurityDescriptor, void* Policy);
     * }
     */
    public static int I_RpcServerUseProtseqEp2W(MemorySegment NetworkAddress, MemorySegment Protseq, int MaxCalls, MemorySegment Endpoint, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = I_RpcServerUseProtseqEp2W$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, Endpoint, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseq2W$MH() {
        return RuntimeHelper.requireNonNull(constants$667.I_RpcServerUseProtseq2W$MH,"I_RpcServerUseProtseq2W");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcServerUseProtseq2W(RPC_WSTR NetworkAddress, RPC_WSTR Protseq, unsigned int MaxCalls, void* SecurityDescriptor, void* Policy);
     * }
     */
    public static int I_RpcServerUseProtseq2W(MemorySegment NetworkAddress, MemorySegment Protseq, int MaxCalls, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = I_RpcServerUseProtseq2W$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseq2A$MH() {
        return RuntimeHelper.requireNonNull(constants$667.I_RpcServerUseProtseq2A$MH,"I_RpcServerUseProtseq2A");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcServerUseProtseq2A(RPC_CSTR NetworkAddress, RPC_CSTR Protseq, unsigned int MaxCalls, void* SecurityDescriptor, void* Policy);
     * }
     */
    public static int I_RpcServerUseProtseq2A(MemorySegment NetworkAddress, MemorySegment Protseq, int MaxCalls, MemorySegment SecurityDescriptor, MemorySegment Policy) {
        var mh$ = I_RpcServerUseProtseq2A$MH();
        try {
            return (int)mh$.invokeExact(NetworkAddress, Protseq, MaxCalls, SecurityDescriptor, Policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerStartService$MH() {
        return RuntimeHelper.requireNonNull(constants$667.I_RpcServerStartService$MH,"I_RpcServerStartService");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcServerStartService(RPC_WSTR Protseq, RPC_WSTR Endpoint, RPC_IF_HANDLE IfSpec);
     * }
     */
    public static int I_RpcServerStartService(MemorySegment Protseq, MemorySegment Endpoint, MemorySegment IfSpec) {
        var mh$ = I_RpcServerStartService$MH();
        try {
            return (int)mh$.invokeExact(Protseq, Endpoint, IfSpec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqDynamicEndpointW$MH() {
        return RuntimeHelper.requireNonNull(constants$668.I_RpcBindingInqDynamicEndpointW$MH,"I_RpcBindingInqDynamicEndpointW");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqDynamicEndpointW(RPC_BINDING_HANDLE Binding, RPC_WSTR* DynamicEndpoint);
     * }
     */
    public static int I_RpcBindingInqDynamicEndpointW(MemorySegment Binding, MemorySegment DynamicEndpoint) {
        var mh$ = I_RpcBindingInqDynamicEndpointW$MH();
        try {
            return (int)mh$.invokeExact(Binding, DynamicEndpoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqDynamicEndpointA$MH() {
        return RuntimeHelper.requireNonNull(constants$668.I_RpcBindingInqDynamicEndpointA$MH,"I_RpcBindingInqDynamicEndpointA");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqDynamicEndpointA(RPC_BINDING_HANDLE Binding, RPC_CSTR* DynamicEndpoint);
     * }
     */
    public static int I_RpcBindingInqDynamicEndpointA(MemorySegment Binding, MemorySegment DynamicEndpoint) {
        var mh$ = I_RpcBindingInqDynamicEndpointA$MH();
        try {
            return (int)mh$.invokeExact(Binding, DynamicEndpoint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerCheckClientRestriction$MH() {
        return RuntimeHelper.requireNonNull(constants$668.I_RpcServerCheckClientRestriction$MH,"I_RpcServerCheckClientRestriction");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcServerCheckClientRestriction(RPC_BINDING_HANDLE Context);
     * }
     */
    public static int I_RpcServerCheckClientRestriction(MemorySegment Context) {
        var mh$ = I_RpcServerCheckClientRestriction$MH();
        try {
            return (int)mh$.invokeExact(Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqTransportType$MH() {
        return RuntimeHelper.requireNonNull(constants$668.I_RpcBindingInqTransportType$MH,"I_RpcBindingInqTransportType");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcBindingInqTransportType(RPC_BINDING_HANDLE Binding, unsigned int* Type);
     * }
     */
    public static int I_RpcBindingInqTransportType(MemorySegment Binding, MemorySegment Type) {
        var mh$ = I_RpcBindingInqTransportType$MH();
        try {
            return (int)mh$.invokeExact(Binding, Type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcIfInqTransferSyntaxes$MH() {
        return RuntimeHelper.requireNonNull(constants$668.I_RpcIfInqTransferSyntaxes$MH,"I_RpcIfInqTransferSyntaxes");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_RpcIfInqTransferSyntaxes(RPC_IF_HANDLE RpcIfHandle, RPC_TRANSFER_SYNTAX* TransferSyntaxes, unsigned int TransferSyntaxSize, unsigned int* TransferSyntaxCount);
     * }
     */
    public static int I_RpcIfInqTransferSyntaxes(MemorySegment RpcIfHandle, MemorySegment TransferSyntaxes, int TransferSyntaxSize, MemorySegment TransferSyntaxCount) {
        var mh$ = I_RpcIfInqTransferSyntaxes$MH();
        try {
            return (int)mh$.invokeExact(RpcIfHandle, TransferSyntaxes, TransferSyntaxSize, TransferSyntaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_UuidCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$668.I_UuidCreate$MH,"I_UuidCreate");
    }
    /**
     * {@snippet :
     * RPC_STATUS I_UuidCreate(UUID* Uuid);
     * }
     */
    public static int I_UuidCreate(MemorySegment Uuid) {
        var mh$ = I_UuidCreate$MH();
        try {
            return (int)mh$.invokeExact(Uuid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcUninitializeNdrOle$MH() {
        return RuntimeHelper.requireNonNull(constants$669.I_RpcUninitializeNdrOle$MH,"I_RpcUninitializeNdrOle");
    }
    /**
     * {@snippet :
     * void I_RpcUninitializeNdrOle();
     * }
     */
    public static void I_RpcUninitializeNdrOle() {
        var mh$ = I_RpcUninitializeNdrOle$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


