// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*HANDLER_FUNCTION)(DWORD dwControl);
 * }
 */
public interface HANDLER_FUNCTION {

    void apply(int dwControl);
    static MemorySegment allocate(HANDLER_FUNCTION fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$1252.HANDLER_FUNCTION_UP$MH, fi, constants$1252.HANDLER_FUNCTION$FUNC, scope);
    }
    static HANDLER_FUNCTION ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (int _dwControl) -> {
            try {
                constants$1252.HANDLER_FUNCTION_DOWN$MH.invokeExact(symbol, _dwControl);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


