// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3 {
 *     LONG64 MaxIops;
 *     LONG64 MaxBandwidth;
 *     LONG64 ReservationIops;
 *     PWSTR VolumeName;
 *     DWORD BaseIoSize;
 *     JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
 *     WORD VolumeNameLength;
 *     LONG64 CriticalReservationIops;
 *     LONG64 ReservationBandwidth;
 *     LONG64 CriticalReservationBandwidth;
 *     LONG64 MaxTimePercent;
 *     LONG64 ReservationTimePercent;
 *     LONG64 CriticalReservationTimePercent;
 *     LONG64 SoftMaxIops;
 *     LONG64 SoftMaxBandwidth;
 *     LONG64 SoftMaxTimePercent;
 *     LONG64 LimitExcessNotifyIops;
 *     LONG64 LimitExcessNotifyBandwidth;
 *     LONG64 LimitExcessNotifyTimePercent;
 * };
 * }
 */
public class JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3 {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("MaxIops"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("MaxBandwidth"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("ReservationIops"),
        Constants$root.C_POINTER$LAYOUT.withName("VolumeName"),
        Constants$root.C_LONG$LAYOUT.withName("BaseIoSize"),
        Constants$root.C_LONG$LAYOUT.withName("ControlFlags"),
        Constants$root.C_SHORT$LAYOUT.withName("VolumeNameLength"),
        MemoryLayout.paddingLayout(48),
        Constants$root.C_LONG_LONG$LAYOUT.withName("CriticalReservationIops"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("ReservationBandwidth"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("CriticalReservationBandwidth"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("MaxTimePercent"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("ReservationTimePercent"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("CriticalReservationTimePercent"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("SoftMaxIops"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("SoftMaxBandwidth"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("SoftMaxTimePercent"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("LimitExcessNotifyIops"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("LimitExcessNotifyBandwidth"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("LimitExcessNotifyTimePercent")
    ).withName("JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3");
    public static MemoryLayout $LAYOUT() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.$struct$LAYOUT;
    }
    static final VarHandle MaxIops$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("MaxIops"));
    public static VarHandle MaxIops$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxIops$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 MaxIops;
     * }
     */
    public static long MaxIops$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxIops$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 MaxIops;
     * }
     */
    public static void MaxIops$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxIops$VH.set(seg, x);
    }
    public static long MaxIops$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxIops$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void MaxIops$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxIops$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle MaxBandwidth$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("MaxBandwidth"));
    public static VarHandle MaxBandwidth$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxBandwidth$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 MaxBandwidth;
     * }
     */
    public static long MaxBandwidth$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxBandwidth$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 MaxBandwidth;
     * }
     */
    public static void MaxBandwidth$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxBandwidth$VH.set(seg, x);
    }
    public static long MaxBandwidth$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxBandwidth$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void MaxBandwidth$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxBandwidth$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ReservationIops$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ReservationIops"));
    public static VarHandle ReservationIops$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationIops$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 ReservationIops;
     * }
     */
    public static long ReservationIops$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationIops$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 ReservationIops;
     * }
     */
    public static void ReservationIops$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationIops$VH.set(seg, x);
    }
    public static long ReservationIops$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationIops$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ReservationIops$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationIops$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle VolumeName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("VolumeName"));
    public static VarHandle VolumeName$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PWSTR VolumeName;
     * }
     */
    public static MemorySegment VolumeName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PWSTR VolumeName;
     * }
     */
    public static void VolumeName$set(MemorySegment seg, MemorySegment x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeName$VH.set(seg, x);
    }
    public static MemorySegment VolumeName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void VolumeName$set(MemorySegment seg, long index, MemorySegment x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle BaseIoSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("BaseIoSize"));
    public static VarHandle BaseIoSize$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.BaseIoSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD BaseIoSize;
     * }
     */
    public static int BaseIoSize$get(MemorySegment seg) {
        return (int)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.BaseIoSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD BaseIoSize;
     * }
     */
    public static void BaseIoSize$set(MemorySegment seg, int x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.BaseIoSize$VH.set(seg, x);
    }
    public static int BaseIoSize$get(MemorySegment seg, long index) {
        return (int)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.BaseIoSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void BaseIoSize$set(MemorySegment seg, long index, int x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.BaseIoSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ControlFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ControlFlags"));
    public static VarHandle ControlFlags$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ControlFlags$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
     * }
     */
    public static int ControlFlags$get(MemorySegment seg) {
        return (int)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ControlFlags$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
     * }
     */
    public static void ControlFlags$set(MemorySegment seg, int x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ControlFlags$VH.set(seg, x);
    }
    public static int ControlFlags$get(MemorySegment seg, long index) {
        return (int)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ControlFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ControlFlags$set(MemorySegment seg, long index, int x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ControlFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle VolumeNameLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("VolumeNameLength"));
    public static VarHandle VolumeNameLength$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeNameLength$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD VolumeNameLength;
     * }
     */
    public static short VolumeNameLength$get(MemorySegment seg) {
        return (short)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeNameLength$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD VolumeNameLength;
     * }
     */
    public static void VolumeNameLength$set(MemorySegment seg, short x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeNameLength$VH.set(seg, x);
    }
    public static short VolumeNameLength$get(MemorySegment seg, long index) {
        return (short)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeNameLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void VolumeNameLength$set(MemorySegment seg, long index, short x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.VolumeNameLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle CriticalReservationIops$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("CriticalReservationIops"));
    public static VarHandle CriticalReservationIops$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationIops$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 CriticalReservationIops;
     * }
     */
    public static long CriticalReservationIops$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationIops$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 CriticalReservationIops;
     * }
     */
    public static void CriticalReservationIops$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationIops$VH.set(seg, x);
    }
    public static long CriticalReservationIops$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationIops$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void CriticalReservationIops$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationIops$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ReservationBandwidth$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ReservationBandwidth"));
    public static VarHandle ReservationBandwidth$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationBandwidth$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 ReservationBandwidth;
     * }
     */
    public static long ReservationBandwidth$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationBandwidth$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 ReservationBandwidth;
     * }
     */
    public static void ReservationBandwidth$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationBandwidth$VH.set(seg, x);
    }
    public static long ReservationBandwidth$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationBandwidth$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ReservationBandwidth$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationBandwidth$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle CriticalReservationBandwidth$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("CriticalReservationBandwidth"));
    public static VarHandle CriticalReservationBandwidth$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationBandwidth$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 CriticalReservationBandwidth;
     * }
     */
    public static long CriticalReservationBandwidth$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationBandwidth$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 CriticalReservationBandwidth;
     * }
     */
    public static void CriticalReservationBandwidth$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationBandwidth$VH.set(seg, x);
    }
    public static long CriticalReservationBandwidth$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationBandwidth$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void CriticalReservationBandwidth$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationBandwidth$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle MaxTimePercent$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("MaxTimePercent"));
    public static VarHandle MaxTimePercent$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxTimePercent$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 MaxTimePercent;
     * }
     */
    public static long MaxTimePercent$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxTimePercent$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 MaxTimePercent;
     * }
     */
    public static void MaxTimePercent$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxTimePercent$VH.set(seg, x);
    }
    public static long MaxTimePercent$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxTimePercent$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void MaxTimePercent$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.MaxTimePercent$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ReservationTimePercent$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ReservationTimePercent"));
    public static VarHandle ReservationTimePercent$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationTimePercent$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 ReservationTimePercent;
     * }
     */
    public static long ReservationTimePercent$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationTimePercent$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 ReservationTimePercent;
     * }
     */
    public static void ReservationTimePercent$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationTimePercent$VH.set(seg, x);
    }
    public static long ReservationTimePercent$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationTimePercent$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ReservationTimePercent$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.ReservationTimePercent$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle CriticalReservationTimePercent$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("CriticalReservationTimePercent"));
    public static VarHandle CriticalReservationTimePercent$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationTimePercent$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 CriticalReservationTimePercent;
     * }
     */
    public static long CriticalReservationTimePercent$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationTimePercent$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 CriticalReservationTimePercent;
     * }
     */
    public static void CriticalReservationTimePercent$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationTimePercent$VH.set(seg, x);
    }
    public static long CriticalReservationTimePercent$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationTimePercent$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void CriticalReservationTimePercent$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.CriticalReservationTimePercent$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SoftMaxIops$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("SoftMaxIops"));
    public static VarHandle SoftMaxIops$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxIops$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 SoftMaxIops;
     * }
     */
    public static long SoftMaxIops$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxIops$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 SoftMaxIops;
     * }
     */
    public static void SoftMaxIops$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxIops$VH.set(seg, x);
    }
    public static long SoftMaxIops$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxIops$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SoftMaxIops$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxIops$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SoftMaxBandwidth$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("SoftMaxBandwidth"));
    public static VarHandle SoftMaxBandwidth$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxBandwidth$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 SoftMaxBandwidth;
     * }
     */
    public static long SoftMaxBandwidth$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxBandwidth$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 SoftMaxBandwidth;
     * }
     */
    public static void SoftMaxBandwidth$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxBandwidth$VH.set(seg, x);
    }
    public static long SoftMaxBandwidth$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxBandwidth$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SoftMaxBandwidth$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxBandwidth$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SoftMaxTimePercent$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("SoftMaxTimePercent"));
    public static VarHandle SoftMaxTimePercent$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxTimePercent$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 SoftMaxTimePercent;
     * }
     */
    public static long SoftMaxTimePercent$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxTimePercent$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 SoftMaxTimePercent;
     * }
     */
    public static void SoftMaxTimePercent$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxTimePercent$VH.set(seg, x);
    }
    public static long SoftMaxTimePercent$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxTimePercent$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SoftMaxTimePercent$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.SoftMaxTimePercent$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle LimitExcessNotifyIops$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("LimitExcessNotifyIops"));
    public static VarHandle LimitExcessNotifyIops$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyIops$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 LimitExcessNotifyIops;
     * }
     */
    public static long LimitExcessNotifyIops$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyIops$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 LimitExcessNotifyIops;
     * }
     */
    public static void LimitExcessNotifyIops$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyIops$VH.set(seg, x);
    }
    public static long LimitExcessNotifyIops$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyIops$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void LimitExcessNotifyIops$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyIops$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle LimitExcessNotifyBandwidth$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("LimitExcessNotifyBandwidth"));
    public static VarHandle LimitExcessNotifyBandwidth$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyBandwidth$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 LimitExcessNotifyBandwidth;
     * }
     */
    public static long LimitExcessNotifyBandwidth$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyBandwidth$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 LimitExcessNotifyBandwidth;
     * }
     */
    public static void LimitExcessNotifyBandwidth$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyBandwidth$VH.set(seg, x);
    }
    public static long LimitExcessNotifyBandwidth$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyBandwidth$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void LimitExcessNotifyBandwidth$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyBandwidth$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle LimitExcessNotifyTimePercent$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("LimitExcessNotifyTimePercent"));
    public static VarHandle LimitExcessNotifyTimePercent$VH() {
        return JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyTimePercent$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG64 LimitExcessNotifyTimePercent;
     * }
     */
    public static long LimitExcessNotifyTimePercent$get(MemorySegment seg) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyTimePercent$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG64 LimitExcessNotifyTimePercent;
     * }
     */
    public static void LimitExcessNotifyTimePercent$set(MemorySegment seg, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyTimePercent$VH.set(seg, x);
    }
    public static long LimitExcessNotifyTimePercent$get(MemorySegment seg, long index) {
        return (long)JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyTimePercent$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void LimitExcessNotifyTimePercent$set(MemorySegment seg, long index, long x) {
        JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3.LimitExcessNotifyTimePercent$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


