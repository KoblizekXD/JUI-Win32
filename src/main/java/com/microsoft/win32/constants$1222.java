// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1222 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1222() {}
    static final FunctionDescriptor VarCyRound$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Lo"),
                Constants$root.C_LONG$LAYOUT.withName("Hi")
            ).withName("$anon$0"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("int64")
        ).withName("tagCY"),
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VarCyRound$MH = RuntimeHelper.downcallHandle(
        "VarCyRound",
        constants$1222.VarCyRound$FUNC
    );
    static final FunctionDescriptor VarCyCmp$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Lo"),
                Constants$root.C_LONG$LAYOUT.withName("Hi")
            ).withName("$anon$0"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("int64")
        ).withName("tagCY"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Lo"),
                Constants$root.C_LONG$LAYOUT.withName("Hi")
            ).withName("$anon$0"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("int64")
        ).withName("tagCY")
    );
    static final MethodHandle VarCyCmp$MH = RuntimeHelper.downcallHandle(
        "VarCyCmp",
        constants$1222.VarCyCmp$FUNC
    );
    static final FunctionDescriptor VarCyCmpR8$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("Lo"),
                Constants$root.C_LONG$LAYOUT.withName("Hi")
            ).withName("$anon$0"),
            Constants$root.C_LONG_LONG$LAYOUT.withName("int64")
        ).withName("tagCY"),
        Constants$root.C_DOUBLE$LAYOUT
    );
    static final MethodHandle VarCyCmpR8$MH = RuntimeHelper.downcallHandle(
        "VarCyCmpR8",
        constants$1222.VarCyCmpR8$FUNC
    );
    static final FunctionDescriptor VarBstrCat$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VarBstrCat$MH = RuntimeHelper.downcallHandle(
        "VarBstrCat",
        constants$1222.VarBstrCat$FUNC
    );
    static final FunctionDescriptor VarBstrCmp$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle VarBstrCmp$MH = RuntimeHelper.downcallHandle(
        "VarBstrCmp",
        constants$1222.VarBstrCmp$FUNC
    );
    static final FunctionDescriptor VarR8Pow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_DOUBLE$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VarR8Pow$MH = RuntimeHelper.downcallHandle(
        "VarR8Pow",
        constants$1222.VarR8Pow$FUNC
    );
}


