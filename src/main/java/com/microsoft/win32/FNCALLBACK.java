// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * HDDEDATA (*FNCALLBACK)(UINT wType,UINT wFmt,HCONV hConv,HSZ hsz1,HSZ hsz2,HDDEDATA hData,ULONG_PTR dwData1,ULONG_PTR dwData2);
 * }
 */
public interface FNCALLBACK {

    java.lang.foreign.MemorySegment apply(int wType, int wFmt, java.lang.foreign.MemorySegment hConv, java.lang.foreign.MemorySegment hsz1, java.lang.foreign.MemorySegment hsz2, java.lang.foreign.MemorySegment hData, long dwData1, long dwData2);
    static MemorySegment allocate(FNCALLBACK fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$590.FNCALLBACK_UP$MH, fi, constants$590.FNCALLBACK$FUNC, scope);
    }
    static FNCALLBACK ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (int _wType, int _wFmt, java.lang.foreign.MemorySegment _hConv, java.lang.foreign.MemorySegment _hsz1, java.lang.foreign.MemorySegment _hsz2, java.lang.foreign.MemorySegment _hData, long _dwData1, long _dwData2) -> {
            try {
                return (java.lang.foreign.MemorySegment)constants$590.FNCALLBACK_DOWN$MH.invokeExact(symbol, _wType, _wFmt, _hConv, _hsz1, _hsz2, _hData, _dwData1, _dwData2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


