// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$814 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$814() {}
    static final FunctionDescriptor CS_TAG_GETTING_ROUTINE_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CS_TAG_GETTING_ROUTINE_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$814.CS_TAG_GETTING_ROUTINE_DOWN$FUNC
    );
    static final FunctionDescriptor RpcCsGetTags$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcCsGetTags$MH = RuntimeHelper.downcallHandle(
        "RpcCsGetTags",
        constants$814.RpcCsGetTags$FUNC
    );
    static final FunctionDescriptor STUB_THUNK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor STUB_THUNK_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle STUB_THUNK_UP$MH = RuntimeHelper.upcallHandle(STUB_THUNK.class, "apply", constants$814.STUB_THUNK_UP$FUNC);
    static final FunctionDescriptor STUB_THUNK_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle STUB_THUNK_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$814.STUB_THUNK_DOWN$FUNC
    );
    static final FunctionDescriptor SERVER_ROUTINE$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final FunctionDescriptor SERVER_ROUTINE_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle SERVER_ROUTINE_UP$MH = RuntimeHelper.upcallHandle(SERVER_ROUTINE.class, "apply", constants$814.SERVER_ROUTINE_UP$FUNC);
    static final FunctionDescriptor SERVER_ROUTINE_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle SERVER_ROUTINE_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$814.SERVER_ROUTINE_DOWN$FUNC
    );
}


