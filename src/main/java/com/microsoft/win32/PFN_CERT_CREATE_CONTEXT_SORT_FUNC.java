// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*PFN_CERT_CREATE_CONTEXT_SORT_FUNC)(unsigned long cbTotalEncoded,unsigned long cbRemainEncoded,unsigned long cEntry,void* pvSort);
 * }
 */
public interface PFN_CERT_CREATE_CONTEXT_SORT_FUNC {

    int apply(int cbTotalEncoded, int cbRemainEncoded, int cEntry, java.lang.foreign.MemorySegment pvSort);
    static MemorySegment allocate(PFN_CERT_CREATE_CONTEXT_SORT_FUNC fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$769.PFN_CERT_CREATE_CONTEXT_SORT_FUNC_UP$MH, fi, constants$769.PFN_CERT_CREATE_CONTEXT_SORT_FUNC$FUNC, scope);
    }
    static PFN_CERT_CREATE_CONTEXT_SORT_FUNC ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (int _cbTotalEncoded, int _cbRemainEncoded, int _cEntry, java.lang.foreign.MemorySegment _pvSort) -> {
            try {
                return (int)constants$769.PFN_CERT_CREATE_CONTEXT_SORT_FUNC_DOWN$MH.invokeExact(symbol, _cbTotalEncoded, _cbRemainEncoded, _cEntry, _pvSort);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


