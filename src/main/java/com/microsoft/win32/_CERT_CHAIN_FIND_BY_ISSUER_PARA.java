// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {
 *     DWORD cbSize;
 *     LPCSTR pszUsageIdentifier;
 *     DWORD dwKeySpec;
 *     DWORD dwAcquirePrivateKeyFlags;
 *     DWORD cIssuer;
 *     CERT_NAME_BLOB* rgIssuer;
 *     PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback;
 *     void* pvFindArg;
 * };
 * }
 */
public class _CERT_CHAIN_FIND_BY_ISSUER_PARA {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("pszUsageIdentifier"),
        Constants$root.C_LONG$LAYOUT.withName("dwKeySpec"),
        Constants$root.C_LONG$LAYOUT.withName("dwAcquirePrivateKeyFlags"),
        Constants$root.C_LONG$LAYOUT.withName("cIssuer"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("rgIssuer"),
        Constants$root.C_POINTER$LAYOUT.withName("pfnFindCallback"),
        Constants$root.C_POINTER$LAYOUT.withName("pvFindArg")
    ).withName("_CERT_CHAIN_FIND_BY_ISSUER_PARA");
    public static MemoryLayout $LAYOUT() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.cbSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.cbSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pszUsageIdentifier$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pszUsageIdentifier"));
    public static VarHandle pszUsageIdentifier$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.pszUsageIdentifier$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCSTR pszUsageIdentifier;
     * }
     */
    public static MemorySegment pszUsageIdentifier$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.pszUsageIdentifier$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCSTR pszUsageIdentifier;
     * }
     */
    public static void pszUsageIdentifier$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.pszUsageIdentifier$VH.set(seg, x);
    }
    public static MemorySegment pszUsageIdentifier$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.pszUsageIdentifier$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pszUsageIdentifier$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.pszUsageIdentifier$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwKeySpec$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwKeySpec"));
    public static VarHandle dwKeySpec$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.dwKeySpec$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwKeySpec;
     * }
     */
    public static int dwKeySpec$get(MemorySegment seg) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.dwKeySpec$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwKeySpec;
     * }
     */
    public static void dwKeySpec$set(MemorySegment seg, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.dwKeySpec$VH.set(seg, x);
    }
    public static int dwKeySpec$get(MemorySegment seg, long index) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.dwKeySpec$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwKeySpec$set(MemorySegment seg, long index, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.dwKeySpec$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwAcquirePrivateKeyFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAcquirePrivateKeyFlags"));
    public static VarHandle dwAcquirePrivateKeyFlags$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.dwAcquirePrivateKeyFlags$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwAcquirePrivateKeyFlags;
     * }
     */
    public static int dwAcquirePrivateKeyFlags$get(MemorySegment seg) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.dwAcquirePrivateKeyFlags$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwAcquirePrivateKeyFlags;
     * }
     */
    public static void dwAcquirePrivateKeyFlags$set(MemorySegment seg, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.dwAcquirePrivateKeyFlags$VH.set(seg, x);
    }
    public static int dwAcquirePrivateKeyFlags$get(MemorySegment seg, long index) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.dwAcquirePrivateKeyFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAcquirePrivateKeyFlags$set(MemorySegment seg, long index, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.dwAcquirePrivateKeyFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cIssuer$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cIssuer"));
    public static VarHandle cIssuer$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.cIssuer$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cIssuer;
     * }
     */
    public static int cIssuer$get(MemorySegment seg) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.cIssuer$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cIssuer;
     * }
     */
    public static void cIssuer$set(MemorySegment seg, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.cIssuer$VH.set(seg, x);
    }
    public static int cIssuer$get(MemorySegment seg, long index) {
        return (int)_CERT_CHAIN_FIND_BY_ISSUER_PARA.cIssuer$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cIssuer$set(MemorySegment seg, long index, int x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.cIssuer$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rgIssuer$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rgIssuer"));
    public static VarHandle rgIssuer$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.rgIssuer$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * CERT_NAME_BLOB* rgIssuer;
     * }
     */
    public static MemorySegment rgIssuer$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.rgIssuer$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * CERT_NAME_BLOB* rgIssuer;
     * }
     */
    public static void rgIssuer$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.rgIssuer$VH.set(seg, x);
    }
    public static MemorySegment rgIssuer$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.rgIssuer$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rgIssuer$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.rgIssuer$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pfnFindCallback$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pfnFindCallback"));
    public static VarHandle pfnFindCallback$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.pfnFindCallback$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback;
     * }
     */
    public static MemorySegment pfnFindCallback$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.pfnFindCallback$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback;
     * }
     */
    public static void pfnFindCallback$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.pfnFindCallback$VH.set(seg, x);
    }
    public static MemorySegment pfnFindCallback$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.pfnFindCallback$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pfnFindCallback$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.pfnFindCallback$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback(MemorySegment segment, SegmentScope scope) {
        return PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK.ofAddress(pfnFindCallback$get(segment), scope);
    }
    static final VarHandle pvFindArg$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pvFindArg"));
    public static VarHandle pvFindArg$VH() {
        return _CERT_CHAIN_FIND_BY_ISSUER_PARA.pvFindArg$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pvFindArg;
     * }
     */
    public static MemorySegment pvFindArg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.pvFindArg$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pvFindArg;
     * }
     */
    public static void pvFindArg$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.pvFindArg$VH.set(seg, x);
    }
    public static MemorySegment pvFindArg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_FIND_BY_ISSUER_PARA.pvFindArg$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pvFindArg$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_FIND_BY_ISSUER_PARA.pvFindArg$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


