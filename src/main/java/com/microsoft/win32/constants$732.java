// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$732 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$732() {}
    static final FunctionDescriptor BCryptUnregisterConfigChangeNotify$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle BCryptUnregisterConfigChangeNotify$MH = RuntimeHelper.downcallHandle(
        "BCryptUnregisterConfigChangeNotify",
        constants$732.BCryptUnregisterConfigChangeNotify$FUNC
    );
    static final FunctionDescriptor BCryptResolveProviders$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle BCryptResolveProviders$MH = RuntimeHelper.downcallHandle(
        "BCryptResolveProviders",
        constants$732.BCryptResolveProviders$FUNC
    );
    static final FunctionDescriptor BCryptGetFipsAlgorithmMode$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle BCryptGetFipsAlgorithmMode$MH = RuntimeHelper.downcallHandle(
        "BCryptGetFipsAlgorithmMode",
        constants$732.BCryptGetFipsAlgorithmMode$FUNC
    );
    static final FunctionDescriptor CngGetFipsAlgorithmMode$FUNC = FunctionDescriptor.of(Constants$root.C_CHAR$LAYOUT);
    static final MethodHandle CngGetFipsAlgorithmMode$MH = RuntimeHelper.downcallHandle(
        "CngGetFipsAlgorithmMode",
        constants$732.CngGetFipsAlgorithmMode$FUNC
    );
    static final FunctionDescriptor PFN_NCRYPT_ALLOC$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor PFN_NCRYPT_ALLOC_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PFN_NCRYPT_ALLOC_UP$MH = RuntimeHelper.upcallHandle(PFN_NCRYPT_ALLOC.class, "apply", constants$732.PFN_NCRYPT_ALLOC_UP$FUNC);
    static final FunctionDescriptor PFN_NCRYPT_ALLOC_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PFN_NCRYPT_ALLOC_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$732.PFN_NCRYPT_ALLOC_DOWN$FUNC
    );
}


