// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$224 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$224() {}
    static final FunctionDescriptor DuplicateTokenEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DuplicateTokenEx$MH = RuntimeHelper.downcallHandle(
        "DuplicateTokenEx",
        constants$224.DuplicateTokenEx$FUNC
    );
    static final FunctionDescriptor EqualPrefixSid$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle EqualPrefixSid$MH = RuntimeHelper.downcallHandle(
        "EqualPrefixSid",
        constants$224.EqualPrefixSid$FUNC
    );
    static final FunctionDescriptor EqualSid$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle EqualSid$MH = RuntimeHelper.downcallHandle(
        "EqualSid",
        constants$224.EqualSid$FUNC
    );
    static final FunctionDescriptor FindFirstFreeAce$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FindFirstFreeAce$MH = RuntimeHelper.downcallHandle(
        "FindFirstFreeAce",
        constants$224.FindFirstFreeAce$FUNC
    );
    static final FunctionDescriptor FreeSid$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FreeSid$MH = RuntimeHelper.downcallHandle(
        "FreeSid",
        constants$224.FreeSid$FUNC
    );
    static final FunctionDescriptor GetAce$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetAce$MH = RuntimeHelper.downcallHandle(
        "GetAce",
        constants$224.GetAce$FUNC
    );
}


