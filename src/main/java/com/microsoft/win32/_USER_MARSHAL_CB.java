// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _USER_MARSHAL_CB {
 *     unsigned long Flags;
 *     PMIDL_STUB_MESSAGE pStubMsg;
 *     PFORMAT_STRING pReserve;
 *     unsigned long Signature;
 *     USER_MARSHAL_CB_TYPE CBType;
 *     PFORMAT_STRING pFormat;
 *     PFORMAT_STRING pTypeFormat;
 * };
 * }
 */
public class _USER_MARSHAL_CB {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Flags"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("pStubMsg"),
        Constants$root.C_POINTER$LAYOUT.withName("pReserve"),
        Constants$root.C_LONG$LAYOUT.withName("Signature"),
        Constants$root.C_LONG$LAYOUT.withName("CBType"),
        Constants$root.C_POINTER$LAYOUT.withName("pFormat"),
        Constants$root.C_POINTER$LAYOUT.withName("pTypeFormat")
    ).withName("_USER_MARSHAL_CB");
    public static MemoryLayout $LAYOUT() {
        return _USER_MARSHAL_CB.$struct$LAYOUT;
    }
    static final VarHandle Flags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Flags"));
    public static VarHandle Flags$VH() {
        return _USER_MARSHAL_CB.Flags$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)_USER_MARSHAL_CB.Flags$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        _USER_MARSHAL_CB.Flags$VH.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)_USER_MARSHAL_CB.Flags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        _USER_MARSHAL_CB.Flags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pStubMsg$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pStubMsg"));
    public static VarHandle pStubMsg$VH() {
        return _USER_MARSHAL_CB.pStubMsg$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PMIDL_STUB_MESSAGE pStubMsg;
     * }
     */
    public static MemorySegment pStubMsg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pStubMsg$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PMIDL_STUB_MESSAGE pStubMsg;
     * }
     */
    public static void pStubMsg$set(MemorySegment seg, MemorySegment x) {
        _USER_MARSHAL_CB.pStubMsg$VH.set(seg, x);
    }
    public static MemorySegment pStubMsg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pStubMsg$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pStubMsg$set(MemorySegment seg, long index, MemorySegment x) {
        _USER_MARSHAL_CB.pStubMsg$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pReserve$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pReserve"));
    public static VarHandle pReserve$VH() {
        return _USER_MARSHAL_CB.pReserve$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PFORMAT_STRING pReserve;
     * }
     */
    public static MemorySegment pReserve$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pReserve$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PFORMAT_STRING pReserve;
     * }
     */
    public static void pReserve$set(MemorySegment seg, MemorySegment x) {
        _USER_MARSHAL_CB.pReserve$VH.set(seg, x);
    }
    public static MemorySegment pReserve$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pReserve$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pReserve$set(MemorySegment seg, long index, MemorySegment x) {
        _USER_MARSHAL_CB.pReserve$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Signature$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Signature"));
    public static VarHandle Signature$VH() {
        return _USER_MARSHAL_CB.Signature$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned long Signature;
     * }
     */
    public static int Signature$get(MemorySegment seg) {
        return (int)_USER_MARSHAL_CB.Signature$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned long Signature;
     * }
     */
    public static void Signature$set(MemorySegment seg, int x) {
        _USER_MARSHAL_CB.Signature$VH.set(seg, x);
    }
    public static int Signature$get(MemorySegment seg, long index) {
        return (int)_USER_MARSHAL_CB.Signature$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Signature$set(MemorySegment seg, long index, int x) {
        _USER_MARSHAL_CB.Signature$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle CBType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("CBType"));
    public static VarHandle CBType$VH() {
        return _USER_MARSHAL_CB.CBType$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USER_MARSHAL_CB_TYPE CBType;
     * }
     */
    public static int CBType$get(MemorySegment seg) {
        return (int)_USER_MARSHAL_CB.CBType$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USER_MARSHAL_CB_TYPE CBType;
     * }
     */
    public static void CBType$set(MemorySegment seg, int x) {
        _USER_MARSHAL_CB.CBType$VH.set(seg, x);
    }
    public static int CBType$get(MemorySegment seg, long index) {
        return (int)_USER_MARSHAL_CB.CBType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void CBType$set(MemorySegment seg, long index, int x) {
        _USER_MARSHAL_CB.CBType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pFormat$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pFormat"));
    public static VarHandle pFormat$VH() {
        return _USER_MARSHAL_CB.pFormat$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PFORMAT_STRING pFormat;
     * }
     */
    public static MemorySegment pFormat$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pFormat$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PFORMAT_STRING pFormat;
     * }
     */
    public static void pFormat$set(MemorySegment seg, MemorySegment x) {
        _USER_MARSHAL_CB.pFormat$VH.set(seg, x);
    }
    public static MemorySegment pFormat$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pFormat$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pFormat$set(MemorySegment seg, long index, MemorySegment x) {
        _USER_MARSHAL_CB.pFormat$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pTypeFormat$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pTypeFormat"));
    public static VarHandle pTypeFormat$VH() {
        return _USER_MARSHAL_CB.pTypeFormat$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PFORMAT_STRING pTypeFormat;
     * }
     */
    public static MemorySegment pTypeFormat$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pTypeFormat$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PFORMAT_STRING pTypeFormat;
     * }
     */
    public static void pTypeFormat$set(MemorySegment seg, MemorySegment x) {
        _USER_MARSHAL_CB.pTypeFormat$VH.set(seg, x);
    }
    public static MemorySegment pTypeFormat$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_USER_MARSHAL_CB.pTypeFormat$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pTypeFormat$set(MemorySegment seg, long index, MemorySegment x) {
        _USER_MARSHAL_CB.pTypeFormat$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


