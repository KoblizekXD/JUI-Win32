// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1172 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1172() {}
    static final FunctionDescriptor SafeArrayReleaseDescriptor$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SafeArrayReleaseDescriptor$MH = RuntimeHelper.downcallHandle(
        "SafeArrayReleaseDescriptor",
        constants$1172.SafeArrayReleaseDescriptor$FUNC
    );
    static final FunctionDescriptor SafeArrayDestroyDescriptor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SafeArrayDestroyDescriptor$MH = RuntimeHelper.downcallHandle(
        "SafeArrayDestroyDescriptor",
        constants$1172.SafeArrayDestroyDescriptor$FUNC
    );
    static final FunctionDescriptor SafeArrayReleaseData$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SafeArrayReleaseData$MH = RuntimeHelper.downcallHandle(
        "SafeArrayReleaseData",
        constants$1172.SafeArrayReleaseData$FUNC
    );
    static final FunctionDescriptor SafeArrayDestroyData$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SafeArrayDestroyData$MH = RuntimeHelper.downcallHandle(
        "SafeArrayDestroyData",
        constants$1172.SafeArrayDestroyData$FUNC
    );
    static final FunctionDescriptor SafeArrayAddRef$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SafeArrayAddRef$MH = RuntimeHelper.downcallHandle(
        "SafeArrayAddRef",
        constants$1172.SafeArrayAddRef$FUNC
    );
    static final FunctionDescriptor SafeArrayDestroy$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SafeArrayDestroy$MH = RuntimeHelper.downcallHandle(
        "SafeArrayDestroy",
        constants$1172.SafeArrayDestroy$FUNC
    );
}


