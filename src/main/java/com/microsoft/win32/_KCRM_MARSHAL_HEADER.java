// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _KCRM_MARSHAL_HEADER {
 *     ULONG VersionMajor;
 *     ULONG VersionMinor;
 *     ULONG NumProtocols;
 *     ULONG Unused;
 * };
 * }
 */
public class _KCRM_MARSHAL_HEADER {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("VersionMajor"),
        Constants$root.C_LONG$LAYOUT.withName("VersionMinor"),
        Constants$root.C_LONG$LAYOUT.withName("NumProtocols"),
        Constants$root.C_LONG$LAYOUT.withName("Unused")
    ).withName("_KCRM_MARSHAL_HEADER");
    public static MemoryLayout $LAYOUT() {
        return _KCRM_MARSHAL_HEADER.$struct$LAYOUT;
    }
    static final VarHandle VersionMajor$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("VersionMajor"));
    public static VarHandle VersionMajor$VH() {
        return _KCRM_MARSHAL_HEADER.VersionMajor$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG VersionMajor;
     * }
     */
    public static int VersionMajor$get(MemorySegment seg) {
        return (int)_KCRM_MARSHAL_HEADER.VersionMajor$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG VersionMajor;
     * }
     */
    public static void VersionMajor$set(MemorySegment seg, int x) {
        _KCRM_MARSHAL_HEADER.VersionMajor$VH.set(seg, x);
    }
    public static int VersionMajor$get(MemorySegment seg, long index) {
        return (int)_KCRM_MARSHAL_HEADER.VersionMajor$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void VersionMajor$set(MemorySegment seg, long index, int x) {
        _KCRM_MARSHAL_HEADER.VersionMajor$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle VersionMinor$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("VersionMinor"));
    public static VarHandle VersionMinor$VH() {
        return _KCRM_MARSHAL_HEADER.VersionMinor$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG VersionMinor;
     * }
     */
    public static int VersionMinor$get(MemorySegment seg) {
        return (int)_KCRM_MARSHAL_HEADER.VersionMinor$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG VersionMinor;
     * }
     */
    public static void VersionMinor$set(MemorySegment seg, int x) {
        _KCRM_MARSHAL_HEADER.VersionMinor$VH.set(seg, x);
    }
    public static int VersionMinor$get(MemorySegment seg, long index) {
        return (int)_KCRM_MARSHAL_HEADER.VersionMinor$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void VersionMinor$set(MemorySegment seg, long index, int x) {
        _KCRM_MARSHAL_HEADER.VersionMinor$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle NumProtocols$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("NumProtocols"));
    public static VarHandle NumProtocols$VH() {
        return _KCRM_MARSHAL_HEADER.NumProtocols$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG NumProtocols;
     * }
     */
    public static int NumProtocols$get(MemorySegment seg) {
        return (int)_KCRM_MARSHAL_HEADER.NumProtocols$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG NumProtocols;
     * }
     */
    public static void NumProtocols$set(MemorySegment seg, int x) {
        _KCRM_MARSHAL_HEADER.NumProtocols$VH.set(seg, x);
    }
    public static int NumProtocols$get(MemorySegment seg, long index) {
        return (int)_KCRM_MARSHAL_HEADER.NumProtocols$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void NumProtocols$set(MemorySegment seg, long index, int x) {
        _KCRM_MARSHAL_HEADER.NumProtocols$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Unused$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Unused"));
    public static VarHandle Unused$VH() {
        return _KCRM_MARSHAL_HEADER.Unused$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG Unused;
     * }
     */
    public static int Unused$get(MemorySegment seg) {
        return (int)_KCRM_MARSHAL_HEADER.Unused$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG Unused;
     * }
     */
    public static void Unused$set(MemorySegment seg, int x) {
        _KCRM_MARSHAL_HEADER.Unused$VH.set(seg, x);
    }
    public static int Unused$get(MemorySegment seg, long index) {
        return (int)_KCRM_MARSHAL_HEADER.Unused$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Unused$set(MemorySegment seg, long index, int x) {
        _KCRM_MARSHAL_HEADER.Unused$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


