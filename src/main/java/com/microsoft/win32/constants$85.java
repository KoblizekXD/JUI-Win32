// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$85 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$85() {}
    static final StructLayout GUID_PROCESSOR_MODULE_PARKING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_MODULE_PARKING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_MODULE_PARKING_POLICY", constants$85.GUID_PROCESSOR_MODULE_PARKING_POLICY$LAYOUT);
    static final StructLayout GUID_PROCESSOR_COMPLEX_PARKING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_COMPLEX_PARKING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_COMPLEX_PARKING_POLICY", constants$85.GUID_PROCESSOR_COMPLEX_PARKING_POLICY$LAYOUT);
    static final StructLayout GUID_PROCESSOR_SMT_UNPARKING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_SMT_UNPARKING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_SMT_UNPARKING_POLICY", constants$85.GUID_PROCESSOR_SMT_UNPARKING_POLICY$LAYOUT);
    static final StructLayout GUID_PROCESSOR_DISTRIBUTE_UTILITY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_DISTRIBUTE_UTILITY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_DISTRIBUTE_UTILITY", constants$85.GUID_PROCESSOR_DISTRIBUTE_UTILITY$LAYOUT);
    static final StructLayout GUID_PROCESSOR_HETEROGENEOUS_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_HETEROGENEOUS_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_HETEROGENEOUS_POLICY", constants$85.GUID_PROCESSOR_HETEROGENEOUS_POLICY$LAYOUT);
    static final StructLayout GUID_PROCESSOR_HETERO_DECREASE_TIME$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_HETERO_DECREASE_TIME$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_HETERO_DECREASE_TIME", constants$85.GUID_PROCESSOR_HETERO_DECREASE_TIME$LAYOUT);
}


