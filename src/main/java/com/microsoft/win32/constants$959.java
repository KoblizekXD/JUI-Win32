// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$959 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$959() {}
    static final StructLayout IID_IAddrTrackingControl$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IAddrTrackingControl$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IAddrTrackingControl", constants$959.IID_IAddrTrackingControl$LAYOUT);
    static final StructLayout IID_IAddrExclusionControl$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IAddrExclusionControl$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IAddrExclusionControl", constants$959.IID_IAddrExclusionControl$LAYOUT);
    static final StructLayout IID_IPipeByte$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IPipeByte$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IPipeByte", constants$959.IID_IPipeByte$LAYOUT);
    static final StructLayout IID_AsyncIPipeByte$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_AsyncIPipeByte$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_AsyncIPipeByte", constants$959.IID_AsyncIPipeByte$LAYOUT);
    static final StructLayout IID_IPipeLong$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IPipeLong$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IPipeLong", constants$959.IID_IPipeLong$LAYOUT);
    static final StructLayout IID_AsyncIPipeLong$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_AsyncIPipeLong$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_AsyncIPipeLong", constants$959.IID_AsyncIPipeLong$LAYOUT);
}


