// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*TIMECALLBACK)(UINT uTimerID,UINT uMsg,DWORD_PTR dwUser,DWORD_PTR dw1,DWORD_PTR dw2);
 * }
 */
public interface TIMECALLBACK {

    void apply(int uTimerID, int uMsg, long dwUser, long dw1, long dw2);
    static MemorySegment allocate(TIMECALLBACK fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$608.TIMECALLBACK_UP$MH, fi, constants$608.TIMECALLBACK$FUNC, scope);
    }
    static TIMECALLBACK ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (int _uTimerID, int _uMsg, long _dwUser, long _dw1, long _dw2) -> {
            try {
                constants$609.TIMECALLBACK_DOWN$MH.invokeExact(symbol, _uTimerID, _uMsg, _dwUser, _dw1, _dw2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


