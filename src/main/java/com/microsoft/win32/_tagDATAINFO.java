// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _tagDATAINFO {
 *     ULONG ulTotalSize;
 *     ULONG ulavrPacketSize;
 *     ULONG ulConnectSpeed;
 *     ULONG ulProcessorSpeed;
 * };
 * }
 */
public class _tagDATAINFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("ulTotalSize"),
        Constants$root.C_LONG$LAYOUT.withName("ulavrPacketSize"),
        Constants$root.C_LONG$LAYOUT.withName("ulConnectSpeed"),
        Constants$root.C_LONG$LAYOUT.withName("ulProcessorSpeed")
    ).withName("_tagDATAINFO");
    public static MemoryLayout $LAYOUT() {
        return _tagDATAINFO.$struct$LAYOUT;
    }
    static final VarHandle ulTotalSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ulTotalSize"));
    public static VarHandle ulTotalSize$VH() {
        return _tagDATAINFO.ulTotalSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ulTotalSize;
     * }
     */
    public static int ulTotalSize$get(MemorySegment seg) {
        return (int)_tagDATAINFO.ulTotalSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ulTotalSize;
     * }
     */
    public static void ulTotalSize$set(MemorySegment seg, int x) {
        _tagDATAINFO.ulTotalSize$VH.set(seg, x);
    }
    public static int ulTotalSize$get(MemorySegment seg, long index) {
        return (int)_tagDATAINFO.ulTotalSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ulTotalSize$set(MemorySegment seg, long index, int x) {
        _tagDATAINFO.ulTotalSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ulavrPacketSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ulavrPacketSize"));
    public static VarHandle ulavrPacketSize$VH() {
        return _tagDATAINFO.ulavrPacketSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ulavrPacketSize;
     * }
     */
    public static int ulavrPacketSize$get(MemorySegment seg) {
        return (int)_tagDATAINFO.ulavrPacketSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ulavrPacketSize;
     * }
     */
    public static void ulavrPacketSize$set(MemorySegment seg, int x) {
        _tagDATAINFO.ulavrPacketSize$VH.set(seg, x);
    }
    public static int ulavrPacketSize$get(MemorySegment seg, long index) {
        return (int)_tagDATAINFO.ulavrPacketSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ulavrPacketSize$set(MemorySegment seg, long index, int x) {
        _tagDATAINFO.ulavrPacketSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ulConnectSpeed$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ulConnectSpeed"));
    public static VarHandle ulConnectSpeed$VH() {
        return _tagDATAINFO.ulConnectSpeed$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ulConnectSpeed;
     * }
     */
    public static int ulConnectSpeed$get(MemorySegment seg) {
        return (int)_tagDATAINFO.ulConnectSpeed$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ulConnectSpeed;
     * }
     */
    public static void ulConnectSpeed$set(MemorySegment seg, int x) {
        _tagDATAINFO.ulConnectSpeed$VH.set(seg, x);
    }
    public static int ulConnectSpeed$get(MemorySegment seg, long index) {
        return (int)_tagDATAINFO.ulConnectSpeed$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ulConnectSpeed$set(MemorySegment seg, long index, int x) {
        _tagDATAINFO.ulConnectSpeed$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ulProcessorSpeed$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ulProcessorSpeed"));
    public static VarHandle ulProcessorSpeed$VH() {
        return _tagDATAINFO.ulProcessorSpeed$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ulProcessorSpeed;
     * }
     */
    public static int ulProcessorSpeed$get(MemorySegment seg) {
        return (int)_tagDATAINFO.ulProcessorSpeed$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ulProcessorSpeed;
     * }
     */
    public static void ulProcessorSpeed$set(MemorySegment seg, int x) {
        _tagDATAINFO.ulProcessorSpeed$VH.set(seg, x);
    }
    public static int ulProcessorSpeed$get(MemorySegment seg, long index) {
        return (int)_tagDATAINFO.ulProcessorSpeed$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ulProcessorSpeed$set(MemorySegment seg, long index, int x) {
        _tagDATAINFO.ulProcessorSpeed$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


