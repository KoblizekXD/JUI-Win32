// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {
 *     DWORD64 Version;
 *     PWSTR Name;
 * };
 * }
 */
public class _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG_LONG$LAYOUT.withName("Version"),
        Constants$root.C_POINTER$LAYOUT.withName("Name")
    ).withName("_CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE");
    public static MemoryLayout $LAYOUT() {
        return _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.$struct$LAYOUT;
    }
    static final VarHandle Version$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Version"));
    public static VarHandle Version$VH() {
        return _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Version$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD64 Version;
     * }
     */
    public static long Version$get(MemorySegment seg) {
        return (long)_CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Version$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD64 Version;
     * }
     */
    public static void Version$set(MemorySegment seg, long x) {
        _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Version$VH.set(seg, x);
    }
    public static long Version$get(MemorySegment seg, long index) {
        return (long)_CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Version$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Version$set(MemorySegment seg, long index, long x) {
        _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Version$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Name"));
    public static VarHandle Name$VH() {
        return _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Name$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PWSTR Name;
     * }
     */
    public static MemorySegment Name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Name$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PWSTR Name;
     * }
     */
    public static void Name$set(MemorySegment seg, MemorySegment x) {
        _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Name$VH.set(seg, x);
    }
    public static MemorySegment Name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Name$set(MemorySegment seg, long index, MemorySegment x) {
        _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


