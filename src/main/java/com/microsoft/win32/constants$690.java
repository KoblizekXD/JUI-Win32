// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$690 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$690() {}
    static final FunctionDescriptor PFN_RPCNOTIFICATION_ROUTINE$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final FunctionDescriptor PFN_RPCNOTIFICATION_ROUTINE_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFN_RPCNOTIFICATION_ROUTINE_UP$MH = RuntimeHelper.upcallHandle(PFN_RPCNOTIFICATION_ROUTINE.class, "apply", constants$690.PFN_RPCNOTIFICATION_ROUTINE_UP$FUNC);
    static final FunctionDescriptor PFN_RPCNOTIFICATION_ROUTINE_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFN_RPCNOTIFICATION_ROUTINE_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$690.PFN_RPCNOTIFICATION_ROUTINE_DOWN$FUNC
    );
    static final FunctionDescriptor RpcAsyncRegisterInfo$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcAsyncRegisterInfo$MH = RuntimeHelper.downcallHandle(
        "RpcAsyncRegisterInfo",
        constants$690.RpcAsyncRegisterInfo$FUNC
    );
    static final FunctionDescriptor RpcAsyncInitializeHandle$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RpcAsyncInitializeHandle$MH = RuntimeHelper.downcallHandle(
        "RpcAsyncInitializeHandle",
        constants$690.RpcAsyncInitializeHandle$FUNC
    );
    static final FunctionDescriptor RpcAsyncGetCallStatus$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcAsyncGetCallStatus$MH = RuntimeHelper.downcallHandle(
        "RpcAsyncGetCallStatus",
        constants$690.RpcAsyncGetCallStatus$FUNC
    );
    static final FunctionDescriptor RpcAsyncCompleteCall$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcAsyncCompleteCall$MH = RuntimeHelper.downcallHandle(
        "RpcAsyncCompleteCall",
        constants$690.RpcAsyncCompleteCall$FUNC
    );
}


