// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$969 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$969() {}
    static final StructLayout IID_IOleManager$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IOleManager$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IOleManager", constants$969.IID_IOleManager$LAYOUT);
    static final StructLayout IID_IOlePresObj$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IOlePresObj$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IOlePresObj", constants$969.IID_IOlePresObj$LAYOUT);
    static final StructLayout IID_IDebug$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IDebug$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IDebug", constants$969.IID_IDebug$LAYOUT);
    static final StructLayout IID_IDebugStream$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IDebugStream$SEGMENT = RuntimeHelper.lookupGlobalVariable("IID_IDebugStream", constants$969.IID_IDebugStream$LAYOUT);
    static final StructLayout CLSID_PSGenObject$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CLSID_PSGenObject$SEGMENT = RuntimeHelper.lookupGlobalVariable("CLSID_PSGenObject", constants$969.CLSID_PSGenObject$LAYOUT);
    static final StructLayout CLSID_PSClientSite$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CLSID_PSClientSite$SEGMENT = RuntimeHelper.lookupGlobalVariable("CLSID_PSClientSite", constants$969.CLSID_PSClientSite$LAYOUT);
}


