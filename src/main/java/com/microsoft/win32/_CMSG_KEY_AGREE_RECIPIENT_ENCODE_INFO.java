// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {
 *     DWORD cbSize;
 *     CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
 *     void* pvKeyEncryptionAuxInfo;
 *     CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
 *     void* pvKeyWrapAuxInfo;
 *     HCRYPTPROV_LEGACY hCryptProv;
 *     DWORD dwKeySpec;
 *     DWORD dwKeyChoice;
 *     union {
 *         PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
 *         PCERT_ID pSenderId;
 *     };
 *     CRYPT_DATA_BLOB UserKeyingMaterial;
 *     DWORD cRecipientEncryptedKeys;
 *     PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO* rgpRecipientEncryptedKeys;
 * };
 * }
 */
public class _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        MemoryLayout.paddingLayout(32),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("pszObjId"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyEncryptionAlgorithm"),
        Constants$root.C_POINTER$LAYOUT.withName("pvKeyEncryptionAuxInfo"),
        MemoryLayout.structLayout(
            Constants$root.C_POINTER$LAYOUT.withName("pszObjId"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("Parameters")
        ).withName("KeyWrapAlgorithm"),
        Constants$root.C_POINTER$LAYOUT.withName("pvKeyWrapAuxInfo"),
        Constants$root.C_LONG_LONG$LAYOUT.withName("hCryptProv"),
        Constants$root.C_LONG$LAYOUT.withName("dwKeySpec"),
        Constants$root.C_LONG$LAYOUT.withName("dwKeyChoice"),
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("pEphemeralAlgorithm"),
            Constants$root.C_POINTER$LAYOUT.withName("pSenderId")
        ).withName("$anon$0"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("cbData"),
            MemoryLayout.paddingLayout(32),
            Constants$root.C_POINTER$LAYOUT.withName("pbData")
        ).withName("UserKeyingMaterial"),
        Constants$root.C_LONG$LAYOUT.withName("cRecipientEncryptedKeys"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("rgpRecipientEncryptedKeys")
    ).withName("_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO");
    public static MemoryLayout $LAYOUT() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cbSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cbSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment KeyEncryptionAlgorithm$slice(MemorySegment seg) {
        return seg.asSlice(8, 24);
    }
    static final VarHandle pvKeyEncryptionAuxInfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pvKeyEncryptionAuxInfo"));
    public static VarHandle pvKeyEncryptionAuxInfo$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyEncryptionAuxInfo$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pvKeyEncryptionAuxInfo;
     * }
     */
    public static MemorySegment pvKeyEncryptionAuxInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyEncryptionAuxInfo$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pvKeyEncryptionAuxInfo;
     * }
     */
    public static void pvKeyEncryptionAuxInfo$set(MemorySegment seg, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyEncryptionAuxInfo$VH.set(seg, x);
    }
    public static MemorySegment pvKeyEncryptionAuxInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyEncryptionAuxInfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pvKeyEncryptionAuxInfo$set(MemorySegment seg, long index, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyEncryptionAuxInfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment KeyWrapAlgorithm$slice(MemorySegment seg) {
        return seg.asSlice(40, 24);
    }
    static final VarHandle pvKeyWrapAuxInfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pvKeyWrapAuxInfo"));
    public static VarHandle pvKeyWrapAuxInfo$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyWrapAuxInfo$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * void* pvKeyWrapAuxInfo;
     * }
     */
    public static MemorySegment pvKeyWrapAuxInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyWrapAuxInfo$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * void* pvKeyWrapAuxInfo;
     * }
     */
    public static void pvKeyWrapAuxInfo$set(MemorySegment seg, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyWrapAuxInfo$VH.set(seg, x);
    }
    public static MemorySegment pvKeyWrapAuxInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyWrapAuxInfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pvKeyWrapAuxInfo$set(MemorySegment seg, long index, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pvKeyWrapAuxInfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hCryptProv$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hCryptProv"));
    public static VarHandle hCryptProv$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.hCryptProv$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HCRYPTPROV_LEGACY hCryptProv;
     * }
     */
    public static long hCryptProv$get(MemorySegment seg) {
        return (long)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.hCryptProv$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HCRYPTPROV_LEGACY hCryptProv;
     * }
     */
    public static void hCryptProv$set(MemorySegment seg, long x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.hCryptProv$VH.set(seg, x);
    }
    public static long hCryptProv$get(MemorySegment seg, long index) {
        return (long)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.hCryptProv$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hCryptProv$set(MemorySegment seg, long index, long x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.hCryptProv$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwKeySpec$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwKeySpec"));
    public static VarHandle dwKeySpec$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeySpec$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwKeySpec;
     * }
     */
    public static int dwKeySpec$get(MemorySegment seg) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeySpec$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwKeySpec;
     * }
     */
    public static void dwKeySpec$set(MemorySegment seg, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeySpec$VH.set(seg, x);
    }
    public static int dwKeySpec$get(MemorySegment seg, long index) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeySpec$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwKeySpec$set(MemorySegment seg, long index, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeySpec$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwKeyChoice$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwKeyChoice"));
    public static VarHandle dwKeyChoice$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeyChoice$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwKeyChoice;
     * }
     */
    public static int dwKeyChoice$get(MemorySegment seg) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeyChoice$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwKeyChoice;
     * }
     */
    public static void dwKeyChoice$set(MemorySegment seg, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeyChoice$VH.set(seg, x);
    }
    public static int dwKeyChoice$get(MemorySegment seg, long index) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeyChoice$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwKeyChoice$set(MemorySegment seg, long index, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.dwKeyChoice$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pEphemeralAlgorithm$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pEphemeralAlgorithm"));
    public static VarHandle pEphemeralAlgorithm$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pEphemeralAlgorithm$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
     * }
     */
    public static MemorySegment pEphemeralAlgorithm$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pEphemeralAlgorithm$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
     * }
     */
    public static void pEphemeralAlgorithm$set(MemorySegment seg, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pEphemeralAlgorithm$VH.set(seg, x);
    }
    public static MemorySegment pEphemeralAlgorithm$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pEphemeralAlgorithm$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pEphemeralAlgorithm$set(MemorySegment seg, long index, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pEphemeralAlgorithm$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pSenderId$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pSenderId"));
    public static VarHandle pSenderId$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pSenderId$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_ID pSenderId;
     * }
     */
    public static MemorySegment pSenderId$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pSenderId$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_ID pSenderId;
     * }
     */
    public static void pSenderId$set(MemorySegment seg, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pSenderId$VH.set(seg, x);
    }
    public static MemorySegment pSenderId$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pSenderId$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pSenderId$set(MemorySegment seg, long index, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.pSenderId$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment UserKeyingMaterial$slice(MemorySegment seg) {
        return seg.asSlice(96, 16);
    }
    static final VarHandle cRecipientEncryptedKeys$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cRecipientEncryptedKeys"));
    public static VarHandle cRecipientEncryptedKeys$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cRecipientEncryptedKeys$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cRecipientEncryptedKeys;
     * }
     */
    public static int cRecipientEncryptedKeys$get(MemorySegment seg) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cRecipientEncryptedKeys$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cRecipientEncryptedKeys;
     * }
     */
    public static void cRecipientEncryptedKeys$set(MemorySegment seg, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cRecipientEncryptedKeys$VH.set(seg, x);
    }
    public static int cRecipientEncryptedKeys$get(MemorySegment seg, long index) {
        return (int)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cRecipientEncryptedKeys$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cRecipientEncryptedKeys$set(MemorySegment seg, long index, int x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.cRecipientEncryptedKeys$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rgpRecipientEncryptedKeys$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rgpRecipientEncryptedKeys"));
    public static VarHandle rgpRecipientEncryptedKeys$VH() {
        return _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.rgpRecipientEncryptedKeys$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO* rgpRecipientEncryptedKeys;
     * }
     */
    public static MemorySegment rgpRecipientEncryptedKeys$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.rgpRecipientEncryptedKeys$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO* rgpRecipientEncryptedKeys;
     * }
     */
    public static void rgpRecipientEncryptedKeys$set(MemorySegment seg, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.rgpRecipientEncryptedKeys$VH.set(seg, x);
    }
    public static MemorySegment rgpRecipientEncryptedKeys$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.rgpRecipientEncryptedKeys$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rgpRecipientEncryptedKeys$set(MemorySegment seg, long index, MemorySegment x) {
        _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO.rgpRecipientEncryptedKeys$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


