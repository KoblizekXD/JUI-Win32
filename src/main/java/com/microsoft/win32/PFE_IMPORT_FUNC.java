// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * unsigned long (*PFE_IMPORT_FUNC)(unsigned char* pbData,void* pvCallbackContext,unsigned long* ulLength);
 * }
 */
public interface PFE_IMPORT_FUNC {

    int apply(java.lang.foreign.MemorySegment pbData, java.lang.foreign.MemorySegment pvCallbackContext, java.lang.foreign.MemorySegment ulLength);
    static MemorySegment allocate(PFE_IMPORT_FUNC fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$262.PFE_IMPORT_FUNC_UP$MH, fi, constants$262.PFE_IMPORT_FUNC$FUNC, scope);
    }
    static PFE_IMPORT_FUNC ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _pbData, java.lang.foreign.MemorySegment _pvCallbackContext, java.lang.foreign.MemorySegment _ulLength) -> {
            try {
                return (int)constants$262.PFE_IMPORT_FUNC_DOWN$MH.invokeExact(symbol, _pbData, _pvCallbackContext, _ulLength);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


