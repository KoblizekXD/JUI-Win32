// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$160 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$160() {}
    static final FunctionDescriptor SignalObjectAndWait$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SignalObjectAndWait$MH = RuntimeHelper.downcallHandle(
        "SignalObjectAndWait",
        constants$160.SignalObjectAndWait$FUNC
    );
    static final FunctionDescriptor WaitForMultipleObjects$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WaitForMultipleObjects$MH = RuntimeHelper.downcallHandle(
        "WaitForMultipleObjects",
        constants$160.WaitForMultipleObjects$FUNC
    );
    static final FunctionDescriptor CreateSemaphoreW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateSemaphoreW$MH = RuntimeHelper.downcallHandle(
        "CreateSemaphoreW",
        constants$160.CreateSemaphoreW$FUNC
    );
    static final FunctionDescriptor CreateWaitableTimerW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CreateWaitableTimerW$MH = RuntimeHelper.downcallHandle(
        "CreateWaitableTimerW",
        constants$160.CreateWaitableTimerW$FUNC
    );
    static final FunctionDescriptor InitializeSListHead$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle InitializeSListHead$MH = RuntimeHelper.downcallHandle(
        "InitializeSListHead",
        constants$160.InitializeSListHead$FUNC
    );
    static final FunctionDescriptor InterlockedPopEntrySList$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle InterlockedPopEntrySList$MH = RuntimeHelper.downcallHandle(
        "InterlockedPopEntrySList",
        constants$160.InterlockedPopEntrySList$FUNC
    );
}


