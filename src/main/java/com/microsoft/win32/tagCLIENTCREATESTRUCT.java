// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagCLIENTCREATESTRUCT {
 *     HANDLE hWindowMenu;
 *     UINT idFirstChild;
 * };
 * }
 */
public class tagCLIENTCREATESTRUCT {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("hWindowMenu"),
        Constants$root.C_LONG$LAYOUT.withName("idFirstChild"),
        MemoryLayout.paddingLayout(32)
    ).withName("tagCLIENTCREATESTRUCT");
    public static MemoryLayout $LAYOUT() {
        return tagCLIENTCREATESTRUCT.$struct$LAYOUT;
    }
    static final VarHandle hWindowMenu$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hWindowMenu"));
    public static VarHandle hWindowMenu$VH() {
        return tagCLIENTCREATESTRUCT.hWindowMenu$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HANDLE hWindowMenu;
     * }
     */
    public static MemorySegment hWindowMenu$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagCLIENTCREATESTRUCT.hWindowMenu$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HANDLE hWindowMenu;
     * }
     */
    public static void hWindowMenu$set(MemorySegment seg, MemorySegment x) {
        tagCLIENTCREATESTRUCT.hWindowMenu$VH.set(seg, x);
    }
    public static MemorySegment hWindowMenu$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagCLIENTCREATESTRUCT.hWindowMenu$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hWindowMenu$set(MemorySegment seg, long index, MemorySegment x) {
        tagCLIENTCREATESTRUCT.hWindowMenu$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle idFirstChild$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("idFirstChild"));
    public static VarHandle idFirstChild$VH() {
        return tagCLIENTCREATESTRUCT.idFirstChild$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT idFirstChild;
     * }
     */
    public static int idFirstChild$get(MemorySegment seg) {
        return (int)tagCLIENTCREATESTRUCT.idFirstChild$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT idFirstChild;
     * }
     */
    public static void idFirstChild$set(MemorySegment seg, int x) {
        tagCLIENTCREATESTRUCT.idFirstChild$VH.set(seg, x);
    }
    public static int idFirstChild$get(MemorySegment seg, long index) {
        return (int)tagCLIENTCREATESTRUCT.idFirstChild$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void idFirstChild$set(MemorySegment seg, long index, int x) {
        tagCLIENTCREATESTRUCT.idFirstChild$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


