// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$610 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$610() {}
    static final FunctionDescriptor sndPlaySoundW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle sndPlaySoundW$MH = RuntimeHelper.downcallHandle(
        "sndPlaySoundW",
        constants$610.sndPlaySoundW$FUNC
    );
    static final FunctionDescriptor PlaySoundA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PlaySoundA$MH = RuntimeHelper.downcallHandle(
        "PlaySoundA",
        constants$610.PlaySoundA$FUNC
    );
    static final FunctionDescriptor PlaySoundW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PlaySoundW$MH = RuntimeHelper.downcallHandle(
        "PlaySoundW",
        constants$610.PlaySoundW$FUNC
    );
    static final FunctionDescriptor WAVECALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor WAVECALLBACK_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle WAVECALLBACK_UP$MH = RuntimeHelper.upcallHandle(WAVECALLBACK.class, "apply", constants$610.WAVECALLBACK_UP$FUNC);
    static final FunctionDescriptor WAVECALLBACK_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle WAVECALLBACK_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$610.WAVECALLBACK_DOWN$FUNC
    );
    static final FunctionDescriptor LPWAVECALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor LPWAVECALLBACK_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle LPWAVECALLBACK_UP$MH = RuntimeHelper.upcallHandle(LPWAVECALLBACK.class, "apply", constants$610.LPWAVECALLBACK_UP$FUNC);
}


