// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$99 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$99() {}
    static final FunctionDescriptor RtlVirtualUnwind$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlVirtualUnwind$MH = RuntimeHelper.downcallHandle(
        "RtlVirtualUnwind",
        constants$99.RtlVirtualUnwind$FUNC
    );
    static final FunctionDescriptor RtlRaiseException$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlRaiseException$MH = RuntimeHelper.downcallHandle(
        "RtlRaiseException",
        constants$99.RtlRaiseException$FUNC
    );
    static final FunctionDescriptor RtlPcToFileHeader$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlPcToFileHeader$MH = RuntimeHelper.downcallHandle(
        "RtlPcToFileHeader",
        constants$99.RtlPcToFileHeader$FUNC
    );
    static final FunctionDescriptor RtlCompareMemory$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle RtlCompareMemory$MH = RuntimeHelper.downcallHandle(
        "RtlCompareMemory",
        constants$99.RtlCompareMemory$FUNC
    );
    static final FunctionDescriptor RtlInitializeSListHead$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlInitializeSListHead$MH = RuntimeHelper.downcallHandle(
        "RtlInitializeSListHead",
        constants$99.RtlInitializeSListHead$FUNC
    );
    static final FunctionDescriptor RtlFirstEntrySList$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlFirstEntrySList$MH = RuntimeHelper.downcallHandle(
        "RtlFirstEntrySList",
        constants$99.RtlFirstEntrySList$FUNC
    );
}


