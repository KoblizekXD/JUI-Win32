// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _COSERVERINFO {
 *     DWORD dwReserved1;
 *     LPWSTR pwszName;
 *     COAUTHINFO* pAuthInfo;
 *     DWORD dwReserved2;
 * };
 * }
 */
public class _COSERVERINFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwReserved1"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("pwszName"),
        Constants$root.C_POINTER$LAYOUT.withName("pAuthInfo"),
        Constants$root.C_LONG$LAYOUT.withName("dwReserved2"),
        MemoryLayout.paddingLayout(32)
    ).withName("_COSERVERINFO");
    public static MemoryLayout $LAYOUT() {
        return _COSERVERINFO.$struct$LAYOUT;
    }
    static final VarHandle dwReserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwReserved1"));
    public static VarHandle dwReserved1$VH() {
        return _COSERVERINFO.dwReserved1$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwReserved1;
     * }
     */
    public static int dwReserved1$get(MemorySegment seg) {
        return (int)_COSERVERINFO.dwReserved1$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwReserved1;
     * }
     */
    public static void dwReserved1$set(MemorySegment seg, int x) {
        _COSERVERINFO.dwReserved1$VH.set(seg, x);
    }
    public static int dwReserved1$get(MemorySegment seg, long index) {
        return (int)_COSERVERINFO.dwReserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwReserved1$set(MemorySegment seg, long index, int x) {
        _COSERVERINFO.dwReserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pwszName"));
    public static VarHandle pwszName$VH() {
        return _COSERVERINFO.pwszName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszName;
     * }
     */
    public static MemorySegment pwszName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_COSERVERINFO.pwszName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszName;
     * }
     */
    public static void pwszName$set(MemorySegment seg, MemorySegment x) {
        _COSERVERINFO.pwszName$VH.set(seg, x);
    }
    public static MemorySegment pwszName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_COSERVERINFO.pwszName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszName$set(MemorySegment seg, long index, MemorySegment x) {
        _COSERVERINFO.pwszName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pAuthInfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pAuthInfo"));
    public static VarHandle pAuthInfo$VH() {
        return _COSERVERINFO.pAuthInfo$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * COAUTHINFO* pAuthInfo;
     * }
     */
    public static MemorySegment pAuthInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_COSERVERINFO.pAuthInfo$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * COAUTHINFO* pAuthInfo;
     * }
     */
    public static void pAuthInfo$set(MemorySegment seg, MemorySegment x) {
        _COSERVERINFO.pAuthInfo$VH.set(seg, x);
    }
    public static MemorySegment pAuthInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_COSERVERINFO.pAuthInfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pAuthInfo$set(MemorySegment seg, long index, MemorySegment x) {
        _COSERVERINFO.pAuthInfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwReserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwReserved2"));
    public static VarHandle dwReserved2$VH() {
        return _COSERVERINFO.dwReserved2$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwReserved2;
     * }
     */
    public static int dwReserved2$get(MemorySegment seg) {
        return (int)_COSERVERINFO.dwReserved2$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwReserved2;
     * }
     */
    public static void dwReserved2$set(MemorySegment seg, int x) {
        _COSERVERINFO.dwReserved2$VH.set(seg, x);
    }
    public static int dwReserved2$get(MemorySegment seg, long index) {
        return (int)_COSERVERINFO.dwReserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwReserved2$set(MemorySegment seg, long index, int x) {
        _COSERVERINFO.dwReserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


