// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$781 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$781() {}
    static final FunctionDescriptor CryptAcquireCertificatePrivateKey$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CryptAcquireCertificatePrivateKey$MH = RuntimeHelper.downcallHandle(
        "CryptAcquireCertificatePrivateKey",
        constants$781.CryptAcquireCertificatePrivateKey$FUNC
    );
    static final FunctionDescriptor CryptFindCertificateKeyProvInfo$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CryptFindCertificateKeyProvInfo$MH = RuntimeHelper.downcallHandle(
        "CryptFindCertificateKeyProvInfo",
        constants$781.CryptFindCertificateKeyProvInfo$FUNC
    );
    static final FunctionDescriptor PFN_IMPORT_PRIV_KEY_FUNC$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PFN_IMPORT_PRIV_KEY_FUNC_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_IMPORT_PRIV_KEY_FUNC_UP$MH = RuntimeHelper.upcallHandle(PFN_IMPORT_PRIV_KEY_FUNC.class, "apply", constants$781.PFN_IMPORT_PRIV_KEY_FUNC_UP$FUNC);
    static final FunctionDescriptor PFN_IMPORT_PRIV_KEY_FUNC_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_IMPORT_PRIV_KEY_FUNC_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$781.PFN_IMPORT_PRIV_KEY_FUNC_DOWN$FUNC
    );
    static final FunctionDescriptor CryptImportPKCS8$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("PrivateKey"),
            Constants$root.C_POINTER$LAYOUT.withName("pResolvehCryptProvFunc"),
            Constants$root.C_POINTER$LAYOUT.withName("pVoidResolveFunc"),
            Constants$root.C_POINTER$LAYOUT.withName("pDecryptPrivateKeyFunc"),
            Constants$root.C_POINTER$LAYOUT.withName("pVoidDecryptFunc")
        ).withName("_CRYPT_PKCS8_IMPORT_PARAMS"),
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CryptImportPKCS8$MH = RuntimeHelper.downcallHandle(
        "CryptImportPKCS8",
        constants$781.CryptImportPKCS8$FUNC
    );
    static final FunctionDescriptor PFN_EXPORT_PRIV_KEY_FUNC$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PFN_EXPORT_PRIV_KEY_FUNC_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_EXPORT_PRIV_KEY_FUNC_UP$MH = RuntimeHelper.upcallHandle(PFN_EXPORT_PRIV_KEY_FUNC.class, "apply", constants$781.PFN_EXPORT_PRIV_KEY_FUNC_UP$FUNC);
}


