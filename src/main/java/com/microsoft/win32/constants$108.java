// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$108 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$108() {}
    static final FunctionDescriptor RtlGetDeviceFamilyInfoEnum$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlGetDeviceFamilyInfoEnum$MH = RuntimeHelper.downcallHandle(
        "RtlGetDeviceFamilyInfoEnum",
        constants$108.RtlGetDeviceFamilyInfoEnum$FUNC
    );
    static final FunctionDescriptor RtlConvertDeviceFamilyInfoToString$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RtlConvertDeviceFamilyInfoToString$MH = RuntimeHelper.downcallHandle(
        "RtlConvertDeviceFamilyInfoToString",
        constants$108.RtlConvertDeviceFamilyInfoToString$FUNC
    );
    static final FunctionDescriptor RtlSwitchedVVI$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle RtlSwitchedVVI$MH = RuntimeHelper.downcallHandle(
        "RtlSwitchedVVI",
        constants$108.RtlSwitchedVVI$FUNC
    );
    static final FunctionDescriptor PTP_SIMPLE_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PTP_SIMPLE_CALLBACK_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTP_SIMPLE_CALLBACK_UP$MH = RuntimeHelper.upcallHandle(PTP_SIMPLE_CALLBACK.class, "apply", constants$108.PTP_SIMPLE_CALLBACK_UP$FUNC);
    static final FunctionDescriptor PTP_SIMPLE_CALLBACK_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTP_SIMPLE_CALLBACK_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$108.PTP_SIMPLE_CALLBACK_DOWN$FUNC
    );
    static final FunctionDescriptor PTP_CLEANUP_GROUP_CANCEL_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PTP_CLEANUP_GROUP_CANCEL_CALLBACK_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTP_CLEANUP_GROUP_CANCEL_CALLBACK_UP$MH = RuntimeHelper.upcallHandle(PTP_CLEANUP_GROUP_CANCEL_CALLBACK.class, "apply", constants$108.PTP_CLEANUP_GROUP_CANCEL_CALLBACK_UP$FUNC);
}


