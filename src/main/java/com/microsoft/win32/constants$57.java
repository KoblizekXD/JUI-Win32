// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$57 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$57() {}
    static final FunctionDescriptor OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$57.OUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_DOWN$FUNC
    );
    static final FunctionDescriptor POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_UP$MH = RuntimeHelper.upcallHandle(POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK.class, "apply", constants$57.POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_UP$FUNC);
    static final FunctionDescriptor POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$57.POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK_DOWN$FUNC
    );
    static final FunctionDescriptor PEXCEPTION_FILTER$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PEXCEPTION_FILTER_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PEXCEPTION_FILTER_UP$MH = RuntimeHelper.upcallHandle(PEXCEPTION_FILTER.class, "apply", constants$57.PEXCEPTION_FILTER_UP$FUNC);
    static final FunctionDescriptor PEXCEPTION_FILTER_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PEXCEPTION_FILTER_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$57.PEXCEPTION_FILTER_DOWN$FUNC
    );
    static final FunctionDescriptor PTERMINATION_HANDLER$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PTERMINATION_HANDLER_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_CHAR$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTERMINATION_HANDLER_UP$MH = RuntimeHelper.upcallHandle(PTERMINATION_HANDLER.class, "apply", constants$57.PTERMINATION_HANDLER_UP$FUNC);
}


