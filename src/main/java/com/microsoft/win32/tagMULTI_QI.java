// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagMULTI_QI {
 *     const IID* pIID;
 *     IUnknown* pItf;
 *     HRESULT hr;
 * };
 * }
 */
public class tagMULTI_QI {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("pIID"),
        Constants$root.C_POINTER$LAYOUT.withName("pItf"),
        Constants$root.C_LONG$LAYOUT.withName("hr"),
        MemoryLayout.paddingLayout(32)
    ).withName("tagMULTI_QI");
    public static MemoryLayout $LAYOUT() {
        return tagMULTI_QI.$struct$LAYOUT;
    }
    static final VarHandle pIID$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pIID"));
    public static VarHandle pIID$VH() {
        return tagMULTI_QI.pIID$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * const IID* pIID;
     * }
     */
    public static MemorySegment pIID$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagMULTI_QI.pIID$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * const IID* pIID;
     * }
     */
    public static void pIID$set(MemorySegment seg, MemorySegment x) {
        tagMULTI_QI.pIID$VH.set(seg, x);
    }
    public static MemorySegment pIID$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagMULTI_QI.pIID$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pIID$set(MemorySegment seg, long index, MemorySegment x) {
        tagMULTI_QI.pIID$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pItf$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pItf"));
    public static VarHandle pItf$VH() {
        return tagMULTI_QI.pItf$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IUnknown* pItf;
     * }
     */
    public static MemorySegment pItf$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagMULTI_QI.pItf$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IUnknown* pItf;
     * }
     */
    public static void pItf$set(MemorySegment seg, MemorySegment x) {
        tagMULTI_QI.pItf$VH.set(seg, x);
    }
    public static MemorySegment pItf$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagMULTI_QI.pItf$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pItf$set(MemorySegment seg, long index, MemorySegment x) {
        tagMULTI_QI.pItf$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hr"));
    public static VarHandle hr$VH() {
        return tagMULTI_QI.hr$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HRESULT hr;
     * }
     */
    public static int hr$get(MemorySegment seg) {
        return (int)tagMULTI_QI.hr$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HRESULT hr;
     * }
     */
    public static void hr$set(MemorySegment seg, int x) {
        tagMULTI_QI.hr$VH.set(seg, x);
    }
    public static int hr$get(MemorySegment seg, long index) {
        return (int)tagMULTI_QI.hr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hr$set(MemorySegment seg, long index, int x) {
        tagMULTI_QI.hr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


