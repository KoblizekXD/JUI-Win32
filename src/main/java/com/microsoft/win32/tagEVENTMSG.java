// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagEVENTMSG {
 *     UINT message;
 *     UINT paramL;
 *     UINT paramH;
 *     DWORD time;
 *     HWND hwnd;
 * };
 * }
 */
public class tagEVENTMSG {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("message"),
        Constants$root.C_LONG$LAYOUT.withName("paramL"),
        Constants$root.C_LONG$LAYOUT.withName("paramH"),
        Constants$root.C_LONG$LAYOUT.withName("time"),
        Constants$root.C_POINTER$LAYOUT.withName("hwnd")
    ).withName("tagEVENTMSG");
    public static MemoryLayout $LAYOUT() {
        return tagEVENTMSG.$struct$LAYOUT;
    }
    static final VarHandle message$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("message"));
    public static VarHandle message$VH() {
        return tagEVENTMSG.message$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT message;
     * }
     */
    public static int message$get(MemorySegment seg) {
        return (int)tagEVENTMSG.message$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT message;
     * }
     */
    public static void message$set(MemorySegment seg, int x) {
        tagEVENTMSG.message$VH.set(seg, x);
    }
    public static int message$get(MemorySegment seg, long index) {
        return (int)tagEVENTMSG.message$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void message$set(MemorySegment seg, long index, int x) {
        tagEVENTMSG.message$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle paramL$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("paramL"));
    public static VarHandle paramL$VH() {
        return tagEVENTMSG.paramL$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT paramL;
     * }
     */
    public static int paramL$get(MemorySegment seg) {
        return (int)tagEVENTMSG.paramL$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT paramL;
     * }
     */
    public static void paramL$set(MemorySegment seg, int x) {
        tagEVENTMSG.paramL$VH.set(seg, x);
    }
    public static int paramL$get(MemorySegment seg, long index) {
        return (int)tagEVENTMSG.paramL$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void paramL$set(MemorySegment seg, long index, int x) {
        tagEVENTMSG.paramL$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle paramH$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("paramH"));
    public static VarHandle paramH$VH() {
        return tagEVENTMSG.paramH$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT paramH;
     * }
     */
    public static int paramH$get(MemorySegment seg) {
        return (int)tagEVENTMSG.paramH$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT paramH;
     * }
     */
    public static void paramH$set(MemorySegment seg, int x) {
        tagEVENTMSG.paramH$VH.set(seg, x);
    }
    public static int paramH$get(MemorySegment seg, long index) {
        return (int)tagEVENTMSG.paramH$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void paramH$set(MemorySegment seg, long index, int x) {
        tagEVENTMSG.paramH$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle time$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("time"));
    public static VarHandle time$VH() {
        return tagEVENTMSG.time$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD time;
     * }
     */
    public static int time$get(MemorySegment seg) {
        return (int)tagEVENTMSG.time$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD time;
     * }
     */
    public static void time$set(MemorySegment seg, int x) {
        tagEVENTMSG.time$VH.set(seg, x);
    }
    public static int time$get(MemorySegment seg, long index) {
        return (int)tagEVENTMSG.time$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void time$set(MemorySegment seg, long index, int x) {
        tagEVENTMSG.time$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hwnd$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hwnd"));
    public static VarHandle hwnd$VH() {
        return tagEVENTMSG.hwnd$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwnd;
     * }
     */
    public static MemorySegment hwnd$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagEVENTMSG.hwnd$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwnd;
     * }
     */
    public static void hwnd$set(MemorySegment seg, MemorySegment x) {
        tagEVENTMSG.hwnd$VH.set(seg, x);
    }
    public static MemorySegment hwnd$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagEVENTMSG.hwnd$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hwnd$set(MemorySegment seg, long index, MemorySegment x) {
        tagEVENTMSG.hwnd$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


