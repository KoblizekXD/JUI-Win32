// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*PTERMINATION_HANDLER)(unsigned char _abnormal_termination,void* EstablisherFrame);
 * }
 */
public interface PTERMINATION_HANDLER {

    void apply(byte _abnormal_termination, java.lang.foreign.MemorySegment EstablisherFrame);
    static MemorySegment allocate(PTERMINATION_HANDLER fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$57.PTERMINATION_HANDLER_UP$MH, fi, constants$57.PTERMINATION_HANDLER$FUNC, scope);
    }
    static PTERMINATION_HANDLER ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (byte __abnormal_termination, java.lang.foreign.MemorySegment _EstablisherFrame) -> {
            try {
                constants$58.PTERMINATION_HANDLER_DOWN$MH.invokeExact(symbol, __abnormal_termination, _EstablisherFrame);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


