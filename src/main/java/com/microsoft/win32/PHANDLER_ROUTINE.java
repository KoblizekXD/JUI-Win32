// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * int (*PHANDLER_ROUTINE)(unsigned long CtrlType);
 * }
 */
public interface PHANDLER_ROUTINE {

    int apply(int CtrlType);
    static MemorySegment allocate(PHANDLER_ROUTINE fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$550.PHANDLER_ROUTINE_UP$MH, fi, constants$550.PHANDLER_ROUTINE$FUNC, scope);
    }
    static PHANDLER_ROUTINE ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (int _CtrlType) -> {
            try {
                return (int)constants$550.PHANDLER_ROUTINE_DOWN$MH.invokeExact(symbol, _CtrlType);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


