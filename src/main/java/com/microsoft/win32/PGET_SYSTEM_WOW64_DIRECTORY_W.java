// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * unsigned int (*PGET_SYSTEM_WOW64_DIRECTORY_W)(unsigned short* lpBuffer,unsigned int uSize);
 * }
 */
public interface PGET_SYSTEM_WOW64_DIRECTORY_W {

    int apply(java.lang.foreign.MemorySegment lpBuffer, int uSize);
    static MemorySegment allocate(PGET_SYSTEM_WOW64_DIRECTORY_W fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$280.PGET_SYSTEM_WOW64_DIRECTORY_W_UP$MH, fi, constants$280.PGET_SYSTEM_WOW64_DIRECTORY_W$FUNC, scope);
    }
    static PGET_SYSTEM_WOW64_DIRECTORY_W ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _lpBuffer, int _uSize) -> {
            try {
                return (int)constants$280.PGET_SYSTEM_WOW64_DIRECTORY_W_DOWN$MH.invokeExact(symbol, _lpBuffer, _uSize);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


