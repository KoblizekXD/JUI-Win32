// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagWNDCLASSEXA {
 *     UINT cbSize;
 *     UINT style;
 *     WNDPROC lpfnWndProc;
 *     int cbClsExtra;
 *     int cbWndExtra;
 *     HINSTANCE hInstance;
 *     HICON hIcon;
 *     HCURSOR hCursor;
 *     HBRUSH hbrBackground;
 *     LPCSTR lpszMenuName;
 *     LPCSTR lpszClassName;
 *     HICON hIconSm;
 * };
 * }
 */
public class tagWNDCLASSEXA {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        Constants$root.C_LONG$LAYOUT.withName("style"),
        Constants$root.C_POINTER$LAYOUT.withName("lpfnWndProc"),
        Constants$root.C_LONG$LAYOUT.withName("cbClsExtra"),
        Constants$root.C_LONG$LAYOUT.withName("cbWndExtra"),
        Constants$root.C_POINTER$LAYOUT.withName("hInstance"),
        Constants$root.C_POINTER$LAYOUT.withName("hIcon"),
        Constants$root.C_POINTER$LAYOUT.withName("hCursor"),
        Constants$root.C_POINTER$LAYOUT.withName("hbrBackground"),
        Constants$root.C_POINTER$LAYOUT.withName("lpszMenuName"),
        Constants$root.C_POINTER$LAYOUT.withName("lpszClassName"),
        Constants$root.C_POINTER$LAYOUT.withName("hIconSm")
    ).withName("tagWNDCLASSEXA");
    public static MemoryLayout $LAYOUT() {
        return tagWNDCLASSEXA.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return tagWNDCLASSEXA.cbSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)tagWNDCLASSEXA.cbSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        tagWNDCLASSEXA.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)tagWNDCLASSEXA.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        tagWNDCLASSEXA.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle style$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("style"));
    public static VarHandle style$VH() {
        return tagWNDCLASSEXA.style$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT style;
     * }
     */
    public static int style$get(MemorySegment seg) {
        return (int)tagWNDCLASSEXA.style$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT style;
     * }
     */
    public static void style$set(MemorySegment seg, int x) {
        tagWNDCLASSEXA.style$VH.set(seg, x);
    }
    public static int style$get(MemorySegment seg, long index) {
        return (int)tagWNDCLASSEXA.style$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void style$set(MemorySegment seg, long index, int x) {
        tagWNDCLASSEXA.style$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lpfnWndProc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("lpfnWndProc"));
    public static VarHandle lpfnWndProc$VH() {
        return tagWNDCLASSEXA.lpfnWndProc$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WNDPROC lpfnWndProc;
     * }
     */
    public static MemorySegment lpfnWndProc$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.lpfnWndProc$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WNDPROC lpfnWndProc;
     * }
     */
    public static void lpfnWndProc$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.lpfnWndProc$VH.set(seg, x);
    }
    public static MemorySegment lpfnWndProc$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.lpfnWndProc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lpfnWndProc$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.lpfnWndProc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static WNDPROC lpfnWndProc(MemorySegment segment, SegmentScope scope) {
        return WNDPROC.ofAddress(lpfnWndProc$get(segment), scope);
    }
    static final VarHandle cbClsExtra$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbClsExtra"));
    public static VarHandle cbClsExtra$VH() {
        return tagWNDCLASSEXA.cbClsExtra$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int cbClsExtra;
     * }
     */
    public static int cbClsExtra$get(MemorySegment seg) {
        return (int)tagWNDCLASSEXA.cbClsExtra$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int cbClsExtra;
     * }
     */
    public static void cbClsExtra$set(MemorySegment seg, int x) {
        tagWNDCLASSEXA.cbClsExtra$VH.set(seg, x);
    }
    public static int cbClsExtra$get(MemorySegment seg, long index) {
        return (int)tagWNDCLASSEXA.cbClsExtra$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbClsExtra$set(MemorySegment seg, long index, int x) {
        tagWNDCLASSEXA.cbClsExtra$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbWndExtra$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbWndExtra"));
    public static VarHandle cbWndExtra$VH() {
        return tagWNDCLASSEXA.cbWndExtra$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * int cbWndExtra;
     * }
     */
    public static int cbWndExtra$get(MemorySegment seg) {
        return (int)tagWNDCLASSEXA.cbWndExtra$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * int cbWndExtra;
     * }
     */
    public static void cbWndExtra$set(MemorySegment seg, int x) {
        tagWNDCLASSEXA.cbWndExtra$VH.set(seg, x);
    }
    public static int cbWndExtra$get(MemorySegment seg, long index) {
        return (int)tagWNDCLASSEXA.cbWndExtra$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbWndExtra$set(MemorySegment seg, long index, int x) {
        tagWNDCLASSEXA.cbWndExtra$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hInstance$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hInstance"));
    public static VarHandle hInstance$VH() {
        return tagWNDCLASSEXA.hInstance$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static MemorySegment hInstance$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hInstance$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HINSTANCE hInstance;
     * }
     */
    public static void hInstance$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.hInstance$VH.set(seg, x);
    }
    public static MemorySegment hInstance$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hInstance$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hInstance$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.hInstance$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hIcon$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hIcon"));
    public static VarHandle hIcon$VH() {
        return tagWNDCLASSEXA.hIcon$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HICON hIcon;
     * }
     */
    public static MemorySegment hIcon$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hIcon$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HICON hIcon;
     * }
     */
    public static void hIcon$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.hIcon$VH.set(seg, x);
    }
    public static MemorySegment hIcon$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hIcon$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hIcon$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.hIcon$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hCursor$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hCursor"));
    public static VarHandle hCursor$VH() {
        return tagWNDCLASSEXA.hCursor$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HCURSOR hCursor;
     * }
     */
    public static MemorySegment hCursor$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hCursor$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HCURSOR hCursor;
     * }
     */
    public static void hCursor$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.hCursor$VH.set(seg, x);
    }
    public static MemorySegment hCursor$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hCursor$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hCursor$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.hCursor$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hbrBackground$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hbrBackground"));
    public static VarHandle hbrBackground$VH() {
        return tagWNDCLASSEXA.hbrBackground$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HBRUSH hbrBackground;
     * }
     */
    public static MemorySegment hbrBackground$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hbrBackground$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HBRUSH hbrBackground;
     * }
     */
    public static void hbrBackground$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.hbrBackground$VH.set(seg, x);
    }
    public static MemorySegment hbrBackground$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hbrBackground$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hbrBackground$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.hbrBackground$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lpszMenuName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("lpszMenuName"));
    public static VarHandle lpszMenuName$VH() {
        return tagWNDCLASSEXA.lpszMenuName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCSTR lpszMenuName;
     * }
     */
    public static MemorySegment lpszMenuName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.lpszMenuName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCSTR lpszMenuName;
     * }
     */
    public static void lpszMenuName$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.lpszMenuName$VH.set(seg, x);
    }
    public static MemorySegment lpszMenuName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.lpszMenuName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszMenuName$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.lpszMenuName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lpszClassName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("lpszClassName"));
    public static VarHandle lpszClassName$VH() {
        return tagWNDCLASSEXA.lpszClassName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCSTR lpszClassName;
     * }
     */
    public static MemorySegment lpszClassName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.lpszClassName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCSTR lpszClassName;
     * }
     */
    public static void lpszClassName$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.lpszClassName$VH.set(seg, x);
    }
    public static MemorySegment lpszClassName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.lpszClassName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszClassName$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.lpszClassName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hIconSm$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("hIconSm"));
    public static VarHandle hIconSm$VH() {
        return tagWNDCLASSEXA.hIconSm$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HICON hIconSm;
     * }
     */
    public static MemorySegment hIconSm$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hIconSm$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HICON hIconSm;
     * }
     */
    public static void hIconSm$set(MemorySegment seg, MemorySegment x) {
        tagWNDCLASSEXA.hIconSm$VH.set(seg, x);
    }
    public static MemorySegment hIconSm$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagWNDCLASSEXA.hIconSm$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hIconSm$set(MemorySegment seg, long index, MemorySegment x) {
        tagWNDCLASSEXA.hIconSm$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


