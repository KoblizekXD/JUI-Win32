// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _NDR_EXPR_DESC {
 *     unsigned short* pOffset;
 *     PFORMAT_STRING pFormatExpr;
 * };
 * }
 */
public class _NDR_EXPR_DESC {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_POINTER$LAYOUT.withName("pOffset"),
        Constants$root.C_POINTER$LAYOUT.withName("pFormatExpr")
    ).withName("_NDR_EXPR_DESC");
    public static MemoryLayout $LAYOUT() {
        return _NDR_EXPR_DESC.$struct$LAYOUT;
    }
    static final VarHandle pOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pOffset"));
    public static VarHandle pOffset$VH() {
        return _NDR_EXPR_DESC.pOffset$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned short* pOffset;
     * }
     */
    public static MemorySegment pOffset$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_NDR_EXPR_DESC.pOffset$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned short* pOffset;
     * }
     */
    public static void pOffset$set(MemorySegment seg, MemorySegment x) {
        _NDR_EXPR_DESC.pOffset$VH.set(seg, x);
    }
    public static MemorySegment pOffset$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_NDR_EXPR_DESC.pOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pOffset$set(MemorySegment seg, long index, MemorySegment x) {
        _NDR_EXPR_DESC.pOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pFormatExpr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pFormatExpr"));
    public static VarHandle pFormatExpr$VH() {
        return _NDR_EXPR_DESC.pFormatExpr$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PFORMAT_STRING pFormatExpr;
     * }
     */
    public static MemorySegment pFormatExpr$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_NDR_EXPR_DESC.pFormatExpr$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PFORMAT_STRING pFormatExpr;
     * }
     */
    public static void pFormatExpr$set(MemorySegment seg, MemorySegment x) {
        _NDR_EXPR_DESC.pFormatExpr$VH.set(seg, x);
    }
    public static MemorySegment pFormatExpr$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_NDR_EXPR_DESC.pFormatExpr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pFormatExpr$set(MemorySegment seg, long index, MemorySegment x) {
        _NDR_EXPR_DESC.pFormatExpr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


