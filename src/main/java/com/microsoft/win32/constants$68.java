// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$68 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$68() {}
    static final StructLayout GUID_STANDBY_RESET_PERCENT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_STANDBY_RESET_PERCENT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_STANDBY_RESET_PERCENT", constants$68.GUID_STANDBY_RESET_PERCENT$LAYOUT);
    static final StructLayout GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT", constants$68.GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT$LAYOUT);
    static final StructLayout GUID_HUPR_ADAPTIVE_DIM_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_HUPR_ADAPTIVE_DIM_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_HUPR_ADAPTIVE_DIM_TIMEOUT", constants$68.GUID_HUPR_ADAPTIVE_DIM_TIMEOUT$LAYOUT);
    static final StructLayout GUID_ALLOW_STANDBY_STATES$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_ALLOW_STANDBY_STATES$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_ALLOW_STANDBY_STATES", constants$68.GUID_ALLOW_STANDBY_STATES$LAYOUT);
    static final StructLayout GUID_ALLOW_RTC_WAKE$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_ALLOW_RTC_WAKE$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_ALLOW_RTC_WAKE", constants$68.GUID_ALLOW_RTC_WAKE$LAYOUT);
    static final StructLayout GUID_LEGACY_RTC_MITIGATION$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_LEGACY_RTC_MITIGATION$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_LEGACY_RTC_MITIGATION", constants$68.GUID_LEGACY_RTC_MITIGATION$LAYOUT);
}


