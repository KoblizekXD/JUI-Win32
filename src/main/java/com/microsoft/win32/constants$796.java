// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$796 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$796() {}
    static final FunctionDescriptor PFXExportCertStoreEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFXExportCertStoreEx$MH = RuntimeHelper.downcallHandle(
        "PFXExportCertStoreEx",
        constants$796.PFXExportCertStoreEx$FUNC
    );
    static final FunctionDescriptor PFXExportCertStore$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFXExportCertStore$MH = RuntimeHelper.downcallHandle(
        "PFXExportCertStore",
        constants$796.PFXExportCertStore$FUNC
    );
    static final FunctionDescriptor PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final FunctionDescriptor PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK_UP$MH = RuntimeHelper.upcallHandle(PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK.class, "apply", constants$796.PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK_UP$FUNC);
    static final FunctionDescriptor PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$796.PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK_DOWN$FUNC
    );
    static final FunctionDescriptor CertOpenServerOcspResponse$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CertOpenServerOcspResponse$MH = RuntimeHelper.downcallHandle(
        "CertOpenServerOcspResponse",
        constants$796.CertOpenServerOcspResponse$FUNC
    );
    static final FunctionDescriptor CertAddRefServerOcspResponse$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CertAddRefServerOcspResponse$MH = RuntimeHelper.downcallHandle(
        "CertAddRefServerOcspResponse",
        constants$796.CertAddRefServerOcspResponse$FUNC
    );
}


