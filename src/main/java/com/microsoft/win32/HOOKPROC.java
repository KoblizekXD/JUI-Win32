// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * long long (*HOOKPROC)(int code,unsigned long long wParam,long long lParam);
 * }
 */
public interface HOOKPROC {

    long apply(int code, long wParam, long lParam);
    static MemorySegment allocate(HOOKPROC fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$391.HOOKPROC_UP$MH, fi, constants$391.HOOKPROC$FUNC, scope);
    }
    static HOOKPROC ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (int _code, long _wParam, long _lParam) -> {
            try {
                return (long)constants$391.HOOKPROC_DOWN$MH.invokeExact(symbol, _code, _wParam, _lParam);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


