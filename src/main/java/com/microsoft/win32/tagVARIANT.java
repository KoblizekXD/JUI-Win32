// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagVARIANT {
 *     union {
 *         struct {
 *             VARTYPE vt;
 *             WORD wReserved1;
 *             WORD wReserved2;
 *             WORD wReserved3;
 *             union {
 *                 LONGLONG llVal;
 *                 LONG lVal;
 *                 BYTE bVal;
 *                 SHORT iVal;
 *                 FLOAT fltVal;
 *                 DOUBLE dblVal;
 *                 VARIANT_BOOL boolVal;
 *                 VARIANT_BOOL __OBSOLETE__VARIANT_BOOL;
 *                 SCODE scode;
 *                 CY cyVal;
 *                 DATE date;
 *                 BSTR bstrVal;
 *                 IUnknown* punkVal;
 *                 IDispatch* pdispVal;
 *                 SAFEARRAY* parray;
 *                 BYTE* pbVal;
 *                 SHORT* piVal;
 *                 LONG* plVal;
 *                 LONGLONG* pllVal;
 *                 FLOAT* pfltVal;
 *                 DOUBLE* pdblVal;
 *                 VARIANT_BOOL* pboolVal;
 *                 VARIANT_BOOL* __OBSOLETE__VARIANT_PBOOL;
 *                 SCODE* pscode;
 *                 CY* pcyVal;
 *                 DATE* pdate;
 *                 BSTR* pbstrVal;
 *                 IUnknown** ppunkVal;
 *                 IDispatch** ppdispVal;
 *                 SAFEARRAY** pparray;
 *                 VARIANT* pvarVal;
 *                 PVOID byref;
 *                 CHAR cVal;
 *                 USHORT uiVal;
 *                 ULONG ulVal;
 *                 ULONGLONG ullVal;
 *                 INT intVal;
 *                 UINT uintVal;
 *                 DECIMAL* pdecVal;
 *                 CHAR* pcVal;
 *                 USHORT* puiVal;
 *                 ULONG* pulVal;
 *                 ULONGLONG* pullVal;
 *                 INT* pintVal;
 *                 UINT* puintVal;
 *                 struct {
 *                     PVOID pvRecord;
 *                     IRecordInfo* pRecInfo;
 *                 };
 *             };
 *         };
 *         DECIMAL decVal;
 *     };
 * };
 * }
 */
public class tagVARIANT {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_SHORT$LAYOUT.withName("vt"),
                Constants$root.C_SHORT$LAYOUT.withName("wReserved1"),
                Constants$root.C_SHORT$LAYOUT.withName("wReserved2"),
                Constants$root.C_SHORT$LAYOUT.withName("wReserved3"),
                MemoryLayout.unionLayout(
                    Constants$root.C_LONG_LONG$LAYOUT.withName("llVal"),
                    Constants$root.C_LONG$LAYOUT.withName("lVal"),
                    Constants$root.C_CHAR$LAYOUT.withName("bVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("iVal"),
                    Constants$root.C_FLOAT$LAYOUT.withName("fltVal"),
                    Constants$root.C_DOUBLE$LAYOUT.withName("dblVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("boolVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("__OBSOLETE__VARIANT_BOOL"),
                    Constants$root.C_LONG$LAYOUT.withName("scode"),
                    MemoryLayout.unionLayout(
                        MemoryLayout.structLayout(
                            Constants$root.C_LONG$LAYOUT.withName("Lo"),
                            Constants$root.C_LONG$LAYOUT.withName("Hi")
                        ).withName("$anon$0"),
                        Constants$root.C_LONG_LONG$LAYOUT.withName("int64")
                    ).withName("cyVal"),
                    Constants$root.C_DOUBLE$LAYOUT.withName("date"),
                    Constants$root.C_POINTER$LAYOUT.withName("bstrVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("punkVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdispVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("parray"),
                    Constants$root.C_POINTER$LAYOUT.withName("pbVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("piVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("plVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pllVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pfltVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdblVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pboolVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("__OBSOLETE__VARIANT_PBOOL"),
                    Constants$root.C_POINTER$LAYOUT.withName("pscode"),
                    Constants$root.C_POINTER$LAYOUT.withName("pcyVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdate"),
                    Constants$root.C_POINTER$LAYOUT.withName("pbstrVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("ppunkVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("ppdispVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pparray"),
                    Constants$root.C_POINTER$LAYOUT.withName("pvarVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("byref"),
                    Constants$root.C_CHAR$LAYOUT.withName("cVal"),
                    Constants$root.C_SHORT$LAYOUT.withName("uiVal"),
                    Constants$root.C_LONG$LAYOUT.withName("ulVal"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("ullVal"),
                    Constants$root.C_LONG$LAYOUT.withName("intVal"),
                    Constants$root.C_LONG$LAYOUT.withName("uintVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pdecVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pcVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("puiVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pulVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pullVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("pintVal"),
                    Constants$root.C_POINTER$LAYOUT.withName("puintVal"),
                    MemoryLayout.structLayout(
                        Constants$root.C_POINTER$LAYOUT.withName("pvRecord"),
                        Constants$root.C_POINTER$LAYOUT.withName("pRecInfo")
                    ).withName("$anon$0")
                ).withName("$anon$0")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                Constants$root.C_SHORT$LAYOUT.withName("wReserved"),
                MemoryLayout.unionLayout(
                    MemoryLayout.structLayout(
                        Constants$root.C_CHAR$LAYOUT.withName("scale"),
                        Constants$root.C_CHAR$LAYOUT.withName("sign")
                    ).withName("$anon$0"),
                    Constants$root.C_SHORT$LAYOUT.withName("signscale")
                ).withName("$anon$0"),
                Constants$root.C_LONG$LAYOUT.withName("Hi32"),
                MemoryLayout.unionLayout(
                    MemoryLayout.structLayout(
                        Constants$root.C_LONG$LAYOUT.withName("Lo32"),
                        Constants$root.C_LONG$LAYOUT.withName("Mid32")
                    ).withName("$anon$0"),
                    Constants$root.C_LONG_LONG$LAYOUT.withName("Lo64")
                ).withName("$anon$1")
            ).withName("decVal")
        ).withName("$anon$0")
    ).withName("tagVARIANT");
    public static MemoryLayout $LAYOUT() {
        return tagVARIANT.$struct$LAYOUT;
    }
    static final VarHandle vt$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("vt"));
    public static VarHandle vt$VH() {
        return tagVARIANT.vt$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARTYPE vt;
     * }
     */
    public static short vt$get(MemorySegment seg) {
        return (short)tagVARIANT.vt$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARTYPE vt;
     * }
     */
    public static void vt$set(MemorySegment seg, short x) {
        tagVARIANT.vt$VH.set(seg, x);
    }
    public static short vt$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.vt$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void vt$set(MemorySegment seg, long index, short x) {
        tagVARIANT.vt$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wReserved1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("wReserved1"));
    public static VarHandle wReserved1$VH() {
        return tagVARIANT.wReserved1$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wReserved1;
     * }
     */
    public static short wReserved1$get(MemorySegment seg) {
        return (short)tagVARIANT.wReserved1$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wReserved1;
     * }
     */
    public static void wReserved1$set(MemorySegment seg, short x) {
        tagVARIANT.wReserved1$VH.set(seg, x);
    }
    public static short wReserved1$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.wReserved1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved1$set(MemorySegment seg, long index, short x) {
        tagVARIANT.wReserved1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wReserved2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("wReserved2"));
    public static VarHandle wReserved2$VH() {
        return tagVARIANT.wReserved2$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wReserved2;
     * }
     */
    public static short wReserved2$get(MemorySegment seg) {
        return (short)tagVARIANT.wReserved2$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wReserved2;
     * }
     */
    public static void wReserved2$set(MemorySegment seg, short x) {
        tagVARIANT.wReserved2$VH.set(seg, x);
    }
    public static short wReserved2$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.wReserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved2$set(MemorySegment seg, long index, short x) {
        tagVARIANT.wReserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle wReserved3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("wReserved3"));
    public static VarHandle wReserved3$VH() {
        return tagVARIANT.wReserved3$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD wReserved3;
     * }
     */
    public static short wReserved3$get(MemorySegment seg) {
        return (short)tagVARIANT.wReserved3$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD wReserved3;
     * }
     */
    public static void wReserved3$set(MemorySegment seg, short x) {
        tagVARIANT.wReserved3$VH.set(seg, x);
    }
    public static short wReserved3$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.wReserved3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void wReserved3$set(MemorySegment seg, long index, short x) {
        tagVARIANT.wReserved3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle llVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("llVal"));
    public static VarHandle llVal$VH() {
        return tagVARIANT.llVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONGLONG llVal;
     * }
     */
    public static long llVal$get(MemorySegment seg) {
        return (long)tagVARIANT.llVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONGLONG llVal;
     * }
     */
    public static void llVal$set(MemorySegment seg, long x) {
        tagVARIANT.llVal$VH.set(seg, x);
    }
    public static long llVal$get(MemorySegment seg, long index) {
        return (long)tagVARIANT.llVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void llVal$set(MemorySegment seg, long index, long x) {
        tagVARIANT.llVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("lVal"));
    public static VarHandle lVal$VH() {
        return tagVARIANT.lVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG lVal;
     * }
     */
    public static int lVal$get(MemorySegment seg) {
        return (int)tagVARIANT.lVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG lVal;
     * }
     */
    public static void lVal$set(MemorySegment seg, int x) {
        tagVARIANT.lVal$VH.set(seg, x);
    }
    public static int lVal$get(MemorySegment seg, long index) {
        return (int)tagVARIANT.lVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lVal$set(MemorySegment seg, long index, int x) {
        tagVARIANT.lVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle bVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("bVal"));
    public static VarHandle bVal$VH() {
        return tagVARIANT.bVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE bVal;
     * }
     */
    public static byte bVal$get(MemorySegment seg) {
        return (byte)tagVARIANT.bVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE bVal;
     * }
     */
    public static void bVal$set(MemorySegment seg, byte x) {
        tagVARIANT.bVal$VH.set(seg, x);
    }
    public static byte bVal$get(MemorySegment seg, long index) {
        return (byte)tagVARIANT.bVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void bVal$set(MemorySegment seg, long index, byte x) {
        tagVARIANT.bVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("iVal"));
    public static VarHandle iVal$VH() {
        return tagVARIANT.iVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SHORT iVal;
     * }
     */
    public static short iVal$get(MemorySegment seg) {
        return (short)tagVARIANT.iVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SHORT iVal;
     * }
     */
    public static void iVal$set(MemorySegment seg, short x) {
        tagVARIANT.iVal$VH.set(seg, x);
    }
    public static short iVal$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.iVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iVal$set(MemorySegment seg, long index, short x) {
        tagVARIANT.iVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle fltVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("fltVal"));
    public static VarHandle fltVal$VH() {
        return tagVARIANT.fltVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FLOAT fltVal;
     * }
     */
    public static float fltVal$get(MemorySegment seg) {
        return (float)tagVARIANT.fltVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FLOAT fltVal;
     * }
     */
    public static void fltVal$set(MemorySegment seg, float x) {
        tagVARIANT.fltVal$VH.set(seg, x);
    }
    public static float fltVal$get(MemorySegment seg, long index) {
        return (float)tagVARIANT.fltVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fltVal$set(MemorySegment seg, long index, float x) {
        tagVARIANT.fltVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dblVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("dblVal"));
    public static VarHandle dblVal$VH() {
        return tagVARIANT.dblVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DOUBLE dblVal;
     * }
     */
    public static double dblVal$get(MemorySegment seg) {
        return (double)tagVARIANT.dblVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DOUBLE dblVal;
     * }
     */
    public static void dblVal$set(MemorySegment seg, double x) {
        tagVARIANT.dblVal$VH.set(seg, x);
    }
    public static double dblVal$get(MemorySegment seg, long index) {
        return (double)tagVARIANT.dblVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dblVal$set(MemorySegment seg, long index, double x) {
        tagVARIANT.dblVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle boolVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("boolVal"));
    public static VarHandle boolVal$VH() {
        return tagVARIANT.boolVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARIANT_BOOL boolVal;
     * }
     */
    public static short boolVal$get(MemorySegment seg) {
        return (short)tagVARIANT.boolVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARIANT_BOOL boolVal;
     * }
     */
    public static void boolVal$set(MemorySegment seg, short x) {
        tagVARIANT.boolVal$VH.set(seg, x);
    }
    public static short boolVal$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.boolVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void boolVal$set(MemorySegment seg, long index, short x) {
        tagVARIANT.boolVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle __OBSOLETE__VARIANT_BOOL$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("__OBSOLETE__VARIANT_BOOL"));
    public static VarHandle __OBSOLETE__VARIANT_BOOL$VH() {
        return tagVARIANT.__OBSOLETE__VARIANT_BOOL$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARIANT_BOOL __OBSOLETE__VARIANT_BOOL;
     * }
     */
    public static short __OBSOLETE__VARIANT_BOOL$get(MemorySegment seg) {
        return (short)tagVARIANT.__OBSOLETE__VARIANT_BOOL$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARIANT_BOOL __OBSOLETE__VARIANT_BOOL;
     * }
     */
    public static void __OBSOLETE__VARIANT_BOOL$set(MemorySegment seg, short x) {
        tagVARIANT.__OBSOLETE__VARIANT_BOOL$VH.set(seg, x);
    }
    public static short __OBSOLETE__VARIANT_BOOL$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.__OBSOLETE__VARIANT_BOOL$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void __OBSOLETE__VARIANT_BOOL$set(MemorySegment seg, long index, short x) {
        tagVARIANT.__OBSOLETE__VARIANT_BOOL$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle scode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("scode"));
    public static VarHandle scode$VH() {
        return tagVARIANT.scode$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SCODE scode;
     * }
     */
    public static int scode$get(MemorySegment seg) {
        return (int)tagVARIANT.scode$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SCODE scode;
     * }
     */
    public static void scode$set(MemorySegment seg, int x) {
        tagVARIANT.scode$VH.set(seg, x);
    }
    public static int scode$get(MemorySegment seg, long index) {
        return (int)tagVARIANT.scode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void scode$set(MemorySegment seg, long index, int x) {
        tagVARIANT.scode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment cyVal$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    static final VarHandle date$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("date"));
    public static VarHandle date$VH() {
        return tagVARIANT.date$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DATE date;
     * }
     */
    public static double date$get(MemorySegment seg) {
        return (double)tagVARIANT.date$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DATE date;
     * }
     */
    public static void date$set(MemorySegment seg, double x) {
        tagVARIANT.date$VH.set(seg, x);
    }
    public static double date$get(MemorySegment seg, long index) {
        return (double)tagVARIANT.date$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void date$set(MemorySegment seg, long index, double x) {
        tagVARIANT.date$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle bstrVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("bstrVal"));
    public static VarHandle bstrVal$VH() {
        return tagVARIANT.bstrVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BSTR bstrVal;
     * }
     */
    public static MemorySegment bstrVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.bstrVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BSTR bstrVal;
     * }
     */
    public static void bstrVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.bstrVal$VH.set(seg, x);
    }
    public static MemorySegment bstrVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.bstrVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void bstrVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.bstrVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle punkVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("punkVal"));
    public static VarHandle punkVal$VH() {
        return tagVARIANT.punkVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IUnknown* punkVal;
     * }
     */
    public static MemorySegment punkVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.punkVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IUnknown* punkVal;
     * }
     */
    public static void punkVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.punkVal$VH.set(seg, x);
    }
    public static MemorySegment punkVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.punkVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void punkVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.punkVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdispVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdispVal"));
    public static VarHandle pdispVal$VH() {
        return tagVARIANT.pdispVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IDispatch* pdispVal;
     * }
     */
    public static MemorySegment pdispVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdispVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IDispatch* pdispVal;
     * }
     */
    public static void pdispVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pdispVal$VH.set(seg, x);
    }
    public static MemorySegment pdispVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdispVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdispVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pdispVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle parray$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("parray"));
    public static VarHandle parray$VH() {
        return tagVARIANT.parray$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SAFEARRAY* parray;
     * }
     */
    public static MemorySegment parray$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.parray$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SAFEARRAY* parray;
     * }
     */
    public static void parray$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.parray$VH.set(seg, x);
    }
    public static MemorySegment parray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.parray$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void parray$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.parray$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pbVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pbVal"));
    public static VarHandle pbVal$VH() {
        return tagVARIANT.pbVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE* pbVal;
     * }
     */
    public static MemorySegment pbVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pbVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE* pbVal;
     * }
     */
    public static void pbVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pbVal$VH.set(seg, x);
    }
    public static MemorySegment pbVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pbVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pbVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pbVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle piVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("piVal"));
    public static VarHandle piVal$VH() {
        return tagVARIANT.piVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SHORT* piVal;
     * }
     */
    public static MemorySegment piVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.piVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SHORT* piVal;
     * }
     */
    public static void piVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.piVal$VH.set(seg, x);
    }
    public static MemorySegment piVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.piVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void piVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.piVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle plVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("plVal"));
    public static VarHandle plVal$VH() {
        return tagVARIANT.plVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONG* plVal;
     * }
     */
    public static MemorySegment plVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.plVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONG* plVal;
     * }
     */
    public static void plVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.plVal$VH.set(seg, x);
    }
    public static MemorySegment plVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.plVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void plVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.plVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pllVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pllVal"));
    public static VarHandle pllVal$VH() {
        return tagVARIANT.pllVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LONGLONG* pllVal;
     * }
     */
    public static MemorySegment pllVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pllVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LONGLONG* pllVal;
     * }
     */
    public static void pllVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pllVal$VH.set(seg, x);
    }
    public static MemorySegment pllVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pllVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pllVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pllVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pfltVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pfltVal"));
    public static VarHandle pfltVal$VH() {
        return tagVARIANT.pfltVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * FLOAT* pfltVal;
     * }
     */
    public static MemorySegment pfltVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pfltVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * FLOAT* pfltVal;
     * }
     */
    public static void pfltVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pfltVal$VH.set(seg, x);
    }
    public static MemorySegment pfltVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pfltVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pfltVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pfltVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdblVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdblVal"));
    public static VarHandle pdblVal$VH() {
        return tagVARIANT.pdblVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DOUBLE* pdblVal;
     * }
     */
    public static MemorySegment pdblVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdblVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DOUBLE* pdblVal;
     * }
     */
    public static void pdblVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pdblVal$VH.set(seg, x);
    }
    public static MemorySegment pdblVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdblVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdblVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pdblVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pboolVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pboolVal"));
    public static VarHandle pboolVal$VH() {
        return tagVARIANT.pboolVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARIANT_BOOL* pboolVal;
     * }
     */
    public static MemorySegment pboolVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pboolVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARIANT_BOOL* pboolVal;
     * }
     */
    public static void pboolVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pboolVal$VH.set(seg, x);
    }
    public static MemorySegment pboolVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pboolVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pboolVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pboolVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle __OBSOLETE__VARIANT_PBOOL$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("__OBSOLETE__VARIANT_PBOOL"));
    public static VarHandle __OBSOLETE__VARIANT_PBOOL$VH() {
        return tagVARIANT.__OBSOLETE__VARIANT_PBOOL$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARIANT_BOOL* __OBSOLETE__VARIANT_PBOOL;
     * }
     */
    public static MemorySegment __OBSOLETE__VARIANT_PBOOL$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.__OBSOLETE__VARIANT_PBOOL$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARIANT_BOOL* __OBSOLETE__VARIANT_PBOOL;
     * }
     */
    public static void __OBSOLETE__VARIANT_PBOOL$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.__OBSOLETE__VARIANT_PBOOL$VH.set(seg, x);
    }
    public static MemorySegment __OBSOLETE__VARIANT_PBOOL$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.__OBSOLETE__VARIANT_PBOOL$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void __OBSOLETE__VARIANT_PBOOL$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.__OBSOLETE__VARIANT_PBOOL$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pscode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pscode"));
    public static VarHandle pscode$VH() {
        return tagVARIANT.pscode$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SCODE* pscode;
     * }
     */
    public static MemorySegment pscode$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pscode$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SCODE* pscode;
     * }
     */
    public static void pscode$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pscode$VH.set(seg, x);
    }
    public static MemorySegment pscode$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pscode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pscode$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pscode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pcyVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pcyVal"));
    public static VarHandle pcyVal$VH() {
        return tagVARIANT.pcyVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * CY* pcyVal;
     * }
     */
    public static MemorySegment pcyVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pcyVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * CY* pcyVal;
     * }
     */
    public static void pcyVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pcyVal$VH.set(seg, x);
    }
    public static MemorySegment pcyVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pcyVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pcyVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pcyVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdate$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdate"));
    public static VarHandle pdate$VH() {
        return tagVARIANT.pdate$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DATE* pdate;
     * }
     */
    public static MemorySegment pdate$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdate$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DATE* pdate;
     * }
     */
    public static void pdate$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pdate$VH.set(seg, x);
    }
    public static MemorySegment pdate$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdate$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdate$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pdate$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pbstrVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pbstrVal"));
    public static VarHandle pbstrVal$VH() {
        return tagVARIANT.pbstrVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BSTR* pbstrVal;
     * }
     */
    public static MemorySegment pbstrVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pbstrVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BSTR* pbstrVal;
     * }
     */
    public static void pbstrVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pbstrVal$VH.set(seg, x);
    }
    public static MemorySegment pbstrVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pbstrVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pbstrVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pbstrVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ppunkVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ppunkVal"));
    public static VarHandle ppunkVal$VH() {
        return tagVARIANT.ppunkVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IUnknown** ppunkVal;
     * }
     */
    public static MemorySegment ppunkVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.ppunkVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IUnknown** ppunkVal;
     * }
     */
    public static void ppunkVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.ppunkVal$VH.set(seg, x);
    }
    public static MemorySegment ppunkVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.ppunkVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ppunkVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.ppunkVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ppdispVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ppdispVal"));
    public static VarHandle ppdispVal$VH() {
        return tagVARIANT.ppdispVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IDispatch** ppdispVal;
     * }
     */
    public static MemorySegment ppdispVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.ppdispVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IDispatch** ppdispVal;
     * }
     */
    public static void ppdispVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.ppdispVal$VH.set(seg, x);
    }
    public static MemorySegment ppdispVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.ppdispVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ppdispVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.ppdispVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pparray$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pparray"));
    public static VarHandle pparray$VH() {
        return tagVARIANT.pparray$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * SAFEARRAY** pparray;
     * }
     */
    public static MemorySegment pparray$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pparray$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * SAFEARRAY** pparray;
     * }
     */
    public static void pparray$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pparray$VH.set(seg, x);
    }
    public static MemorySegment pparray$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pparray$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pparray$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pparray$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pvarVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pvarVal"));
    public static VarHandle pvarVal$VH() {
        return tagVARIANT.pvarVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * VARIANT* pvarVal;
     * }
     */
    public static MemorySegment pvarVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pvarVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * VARIANT* pvarVal;
     * }
     */
    public static void pvarVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pvarVal$VH.set(seg, x);
    }
    public static MemorySegment pvarVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pvarVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pvarVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pvarVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle byref$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("byref"));
    public static VarHandle byref$VH() {
        return tagVARIANT.byref$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PVOID byref;
     * }
     */
    public static MemorySegment byref$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.byref$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PVOID byref;
     * }
     */
    public static void byref$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.byref$VH.set(seg, x);
    }
    public static MemorySegment byref$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.byref$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void byref$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.byref$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("cVal"));
    public static VarHandle cVal$VH() {
        return tagVARIANT.cVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * CHAR cVal;
     * }
     */
    public static byte cVal$get(MemorySegment seg) {
        return (byte)tagVARIANT.cVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * CHAR cVal;
     * }
     */
    public static void cVal$set(MemorySegment seg, byte x) {
        tagVARIANT.cVal$VH.set(seg, x);
    }
    public static byte cVal$get(MemorySegment seg, long index) {
        return (byte)tagVARIANT.cVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cVal$set(MemorySegment seg, long index, byte x) {
        tagVARIANT.cVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle uiVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("uiVal"));
    public static VarHandle uiVal$VH() {
        return tagVARIANT.uiVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT uiVal;
     * }
     */
    public static short uiVal$get(MemorySegment seg) {
        return (short)tagVARIANT.uiVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT uiVal;
     * }
     */
    public static void uiVal$set(MemorySegment seg, short x) {
        tagVARIANT.uiVal$VH.set(seg, x);
    }
    public static short uiVal$get(MemorySegment seg, long index) {
        return (short)tagVARIANT.uiVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void uiVal$set(MemorySegment seg, long index, short x) {
        tagVARIANT.uiVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ulVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ulVal"));
    public static VarHandle ulVal$VH() {
        return tagVARIANT.ulVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG ulVal;
     * }
     */
    public static int ulVal$get(MemorySegment seg) {
        return (int)tagVARIANT.ulVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG ulVal;
     * }
     */
    public static void ulVal$set(MemorySegment seg, int x) {
        tagVARIANT.ulVal$VH.set(seg, x);
    }
    public static int ulVal$get(MemorySegment seg, long index) {
        return (int)tagVARIANT.ulVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ulVal$set(MemorySegment seg, long index, int x) {
        tagVARIANT.ulVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle ullVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("ullVal"));
    public static VarHandle ullVal$VH() {
        return tagVARIANT.ullVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONGLONG ullVal;
     * }
     */
    public static long ullVal$get(MemorySegment seg) {
        return (long)tagVARIANT.ullVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONGLONG ullVal;
     * }
     */
    public static void ullVal$set(MemorySegment seg, long x) {
        tagVARIANT.ullVal$VH.set(seg, x);
    }
    public static long ullVal$get(MemorySegment seg, long index) {
        return (long)tagVARIANT.ullVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ullVal$set(MemorySegment seg, long index, long x) {
        tagVARIANT.ullVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle intVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("intVal"));
    public static VarHandle intVal$VH() {
        return tagVARIANT.intVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT intVal;
     * }
     */
    public static int intVal$get(MemorySegment seg) {
        return (int)tagVARIANT.intVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT intVal;
     * }
     */
    public static void intVal$set(MemorySegment seg, int x) {
        tagVARIANT.intVal$VH.set(seg, x);
    }
    public static int intVal$get(MemorySegment seg, long index) {
        return (int)tagVARIANT.intVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void intVal$set(MemorySegment seg, long index, int x) {
        tagVARIANT.intVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle uintVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("uintVal"));
    public static VarHandle uintVal$VH() {
        return tagVARIANT.uintVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT uintVal;
     * }
     */
    public static int uintVal$get(MemorySegment seg) {
        return (int)tagVARIANT.uintVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT uintVal;
     * }
     */
    public static void uintVal$set(MemorySegment seg, int x) {
        tagVARIANT.uintVal$VH.set(seg, x);
    }
    public static int uintVal$get(MemorySegment seg, long index) {
        return (int)tagVARIANT.uintVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void uintVal$set(MemorySegment seg, long index, int x) {
        tagVARIANT.uintVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pdecVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pdecVal"));
    public static VarHandle pdecVal$VH() {
        return tagVARIANT.pdecVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DECIMAL* pdecVal;
     * }
     */
    public static MemorySegment pdecVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdecVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DECIMAL* pdecVal;
     * }
     */
    public static void pdecVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pdecVal$VH.set(seg, x);
    }
    public static MemorySegment pdecVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pdecVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pdecVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pdecVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pcVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pcVal"));
    public static VarHandle pcVal$VH() {
        return tagVARIANT.pcVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * CHAR* pcVal;
     * }
     */
    public static MemorySegment pcVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pcVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * CHAR* pcVal;
     * }
     */
    public static void pcVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pcVal$VH.set(seg, x);
    }
    public static MemorySegment pcVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pcVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pcVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pcVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle puiVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("puiVal"));
    public static VarHandle puiVal$VH() {
        return tagVARIANT.puiVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * USHORT* puiVal;
     * }
     */
    public static MemorySegment puiVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.puiVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * USHORT* puiVal;
     * }
     */
    public static void puiVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.puiVal$VH.set(seg, x);
    }
    public static MemorySegment puiVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.puiVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void puiVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.puiVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pulVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pulVal"));
    public static VarHandle pulVal$VH() {
        return tagVARIANT.pulVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG* pulVal;
     * }
     */
    public static MemorySegment pulVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pulVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG* pulVal;
     * }
     */
    public static void pulVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pulVal$VH.set(seg, x);
    }
    public static MemorySegment pulVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pulVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pulVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pulVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pullVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pullVal"));
    public static VarHandle pullVal$VH() {
        return tagVARIANT.pullVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONGLONG* pullVal;
     * }
     */
    public static MemorySegment pullVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pullVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONGLONG* pullVal;
     * }
     */
    public static void pullVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pullVal$VH.set(seg, x);
    }
    public static MemorySegment pullVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pullVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pullVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pullVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pintVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pintVal"));
    public static VarHandle pintVal$VH() {
        return tagVARIANT.pintVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * INT* pintVal;
     * }
     */
    public static MemorySegment pintVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pintVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * INT* pintVal;
     * }
     */
    public static void pintVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pintVal$VH.set(seg, x);
    }
    public static MemorySegment pintVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pintVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pintVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pintVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle puintVal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("puintVal"));
    public static VarHandle puintVal$VH() {
        return tagVARIANT.puintVal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * UINT* puintVal;
     * }
     */
    public static MemorySegment puintVal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.puintVal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * UINT* puintVal;
     * }
     */
    public static void puintVal$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.puintVal$VH.set(seg, x);
    }
    public static MemorySegment puintVal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.puintVal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void puintVal$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.puintVal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pvRecord$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pvRecord"));
    public static VarHandle pvRecord$VH() {
        return tagVARIANT.pvRecord$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PVOID pvRecord;
     * }
     */
    public static MemorySegment pvRecord$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pvRecord$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PVOID pvRecord;
     * }
     */
    public static void pvRecord$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pvRecord$VH.set(seg, x);
    }
    public static MemorySegment pvRecord$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pvRecord$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pvRecord$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pvRecord$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pRecInfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pRecInfo"));
    public static VarHandle pRecInfo$VH() {
        return tagVARIANT.pRecInfo$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IRecordInfo* pRecInfo;
     * }
     */
    public static MemorySegment pRecInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pRecInfo$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IRecordInfo* pRecInfo;
     * }
     */
    public static void pRecInfo$set(MemorySegment seg, MemorySegment x) {
        tagVARIANT.pRecInfo$VH.set(seg, x);
    }
    public static MemorySegment pRecInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagVARIANT.pRecInfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pRecInfo$set(MemorySegment seg, long index, MemorySegment x) {
        tagVARIANT.pRecInfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment decVal$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


