// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * void (*CS_TYPE_TO_NETCS_ROUTINE)(void* hBinding,unsigned long ulNetworkCodeSet,void* pLocalData,unsigned long ulLocalDataLength,unsigned char* pNetworkData,unsigned long* pulNetworkDataLength,unsigned long* pStatus);
 * }
 */
public interface CS_TYPE_TO_NETCS_ROUTINE {

    void apply(java.lang.foreign.MemorySegment hBinding, int ulNetworkCodeSet, java.lang.foreign.MemorySegment pLocalData, int ulLocalDataLength, java.lang.foreign.MemorySegment pNetworkData, java.lang.foreign.MemorySegment pulNetworkDataLength, java.lang.foreign.MemorySegment pStatus);
    static MemorySegment allocate(CS_TYPE_TO_NETCS_ROUTINE fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$813.CS_TYPE_TO_NETCS_ROUTINE_UP$MH, fi, constants$813.CS_TYPE_TO_NETCS_ROUTINE$FUNC, scope);
    }
    static CS_TYPE_TO_NETCS_ROUTINE ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _hBinding, int _ulNetworkCodeSet, java.lang.foreign.MemorySegment _pLocalData, int _ulLocalDataLength, java.lang.foreign.MemorySegment _pNetworkData, java.lang.foreign.MemorySegment _pulNetworkDataLength, java.lang.foreign.MemorySegment _pStatus) -> {
            try {
                constants$813.CS_TYPE_TO_NETCS_ROUTINE_DOWN$MH.invokeExact(symbol, _hBinding, _ulNetworkCodeSet, _pLocalData, _ulLocalDataLength, _pNetworkData, _pulNetworkDataLength, _pStatus);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


