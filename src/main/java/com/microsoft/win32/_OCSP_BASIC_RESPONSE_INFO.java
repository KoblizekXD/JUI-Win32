// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _OCSP_BASIC_RESPONSE_INFO {
 *     DWORD dwVersion;
 *     DWORD dwResponderIdChoice;
 *     union {
 *         CERT_NAME_BLOB ByNameResponderId;
 *         CRYPT_HASH_BLOB ByKeyResponderId;
 *     };
 *     FILETIME ProducedAt;
 *     DWORD cResponseEntry;
 *     POCSP_BASIC_RESPONSE_ENTRY rgResponseEntry;
 *     DWORD cExtension;
 *     PCERT_EXTENSION rgExtension;
 * };
 * }
 */
public class _OCSP_BASIC_RESPONSE_INFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwVersion"),
        Constants$root.C_LONG$LAYOUT.withName("dwResponderIdChoice"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("ByNameResponderId"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("ByKeyResponderId")
        ).withName("$anon$0"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("dwLowDateTime"),
            Constants$root.C_LONG$LAYOUT.withName("dwHighDateTime")
        ).withName("ProducedAt"),
        Constants$root.C_LONG$LAYOUT.withName("cResponseEntry"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("rgResponseEntry"),
        Constants$root.C_LONG$LAYOUT.withName("cExtension"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("rgExtension")
    ).withName("_OCSP_BASIC_RESPONSE_INFO");
    public static MemoryLayout $LAYOUT() {
        return _OCSP_BASIC_RESPONSE_INFO.$struct$LAYOUT;
    }
    static final VarHandle dwVersion$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwVersion"));
    public static VarHandle dwVersion$VH() {
        return _OCSP_BASIC_RESPONSE_INFO.dwVersion$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwVersion;
     * }
     */
    public static int dwVersion$get(MemorySegment seg) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.dwVersion$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwVersion;
     * }
     */
    public static void dwVersion$set(MemorySegment seg, int x) {
        _OCSP_BASIC_RESPONSE_INFO.dwVersion$VH.set(seg, x);
    }
    public static int dwVersion$get(MemorySegment seg, long index) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.dwVersion$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwVersion$set(MemorySegment seg, long index, int x) {
        _OCSP_BASIC_RESPONSE_INFO.dwVersion$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwResponderIdChoice$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwResponderIdChoice"));
    public static VarHandle dwResponderIdChoice$VH() {
        return _OCSP_BASIC_RESPONSE_INFO.dwResponderIdChoice$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwResponderIdChoice;
     * }
     */
    public static int dwResponderIdChoice$get(MemorySegment seg) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.dwResponderIdChoice$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwResponderIdChoice;
     * }
     */
    public static void dwResponderIdChoice$set(MemorySegment seg, int x) {
        _OCSP_BASIC_RESPONSE_INFO.dwResponderIdChoice$VH.set(seg, x);
    }
    public static int dwResponderIdChoice$get(MemorySegment seg, long index) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.dwResponderIdChoice$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwResponderIdChoice$set(MemorySegment seg, long index, int x) {
        _OCSP_BASIC_RESPONSE_INFO.dwResponderIdChoice$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ByNameResponderId$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment ByKeyResponderId$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    public static MemorySegment ProducedAt$slice(MemorySegment seg) {
        return seg.asSlice(24, 8);
    }
    static final VarHandle cResponseEntry$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cResponseEntry"));
    public static VarHandle cResponseEntry$VH() {
        return _OCSP_BASIC_RESPONSE_INFO.cResponseEntry$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cResponseEntry;
     * }
     */
    public static int cResponseEntry$get(MemorySegment seg) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.cResponseEntry$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cResponseEntry;
     * }
     */
    public static void cResponseEntry$set(MemorySegment seg, int x) {
        _OCSP_BASIC_RESPONSE_INFO.cResponseEntry$VH.set(seg, x);
    }
    public static int cResponseEntry$get(MemorySegment seg, long index) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.cResponseEntry$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cResponseEntry$set(MemorySegment seg, long index, int x) {
        _OCSP_BASIC_RESPONSE_INFO.cResponseEntry$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rgResponseEntry$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rgResponseEntry"));
    public static VarHandle rgResponseEntry$VH() {
        return _OCSP_BASIC_RESPONSE_INFO.rgResponseEntry$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * POCSP_BASIC_RESPONSE_ENTRY rgResponseEntry;
     * }
     */
    public static MemorySegment rgResponseEntry$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_OCSP_BASIC_RESPONSE_INFO.rgResponseEntry$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * POCSP_BASIC_RESPONSE_ENTRY rgResponseEntry;
     * }
     */
    public static void rgResponseEntry$set(MemorySegment seg, MemorySegment x) {
        _OCSP_BASIC_RESPONSE_INFO.rgResponseEntry$VH.set(seg, x);
    }
    public static MemorySegment rgResponseEntry$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_OCSP_BASIC_RESPONSE_INFO.rgResponseEntry$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rgResponseEntry$set(MemorySegment seg, long index, MemorySegment x) {
        _OCSP_BASIC_RESPONSE_INFO.rgResponseEntry$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cExtension$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cExtension"));
    public static VarHandle cExtension$VH() {
        return _OCSP_BASIC_RESPONSE_INFO.cExtension$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cExtension;
     * }
     */
    public static int cExtension$get(MemorySegment seg) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.cExtension$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cExtension;
     * }
     */
    public static void cExtension$set(MemorySegment seg, int x) {
        _OCSP_BASIC_RESPONSE_INFO.cExtension$VH.set(seg, x);
    }
    public static int cExtension$get(MemorySegment seg, long index) {
        return (int)_OCSP_BASIC_RESPONSE_INFO.cExtension$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cExtension$set(MemorySegment seg, long index, int x) {
        _OCSP_BASIC_RESPONSE_INFO.cExtension$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle rgExtension$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("rgExtension"));
    public static VarHandle rgExtension$VH() {
        return _OCSP_BASIC_RESPONSE_INFO.rgExtension$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_EXTENSION rgExtension;
     * }
     */
    public static MemorySegment rgExtension$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_OCSP_BASIC_RESPONSE_INFO.rgExtension$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_EXTENSION rgExtension;
     * }
     */
    public static void rgExtension$set(MemorySegment seg, MemorySegment x) {
        _OCSP_BASIC_RESPONSE_INFO.rgExtension$VH.set(seg, x);
    }
    public static MemorySegment rgExtension$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_OCSP_BASIC_RESPONSE_INFO.rgExtension$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void rgExtension$set(MemorySegment seg, long index, MemorySegment x) {
        _OCSP_BASIC_RESPONSE_INFO.rgExtension$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


