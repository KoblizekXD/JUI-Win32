// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _tagPROTOCOLDATA {
 *     DWORD grfFlags;
 *     DWORD dwState;
 *     LPVOID pData;
 *     ULONG cbData;
 * };
 * }
 */
public class _tagPROTOCOLDATA {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("grfFlags"),
        Constants$root.C_LONG$LAYOUT.withName("dwState"),
        Constants$root.C_POINTER$LAYOUT.withName("pData"),
        Constants$root.C_LONG$LAYOUT.withName("cbData"),
        MemoryLayout.paddingLayout(32)
    ).withName("_tagPROTOCOLDATA");
    public static MemoryLayout $LAYOUT() {
        return _tagPROTOCOLDATA.$struct$LAYOUT;
    }
    static final VarHandle grfFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("grfFlags"));
    public static VarHandle grfFlags$VH() {
        return _tagPROTOCOLDATA.grfFlags$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD grfFlags;
     * }
     */
    public static int grfFlags$get(MemorySegment seg) {
        return (int)_tagPROTOCOLDATA.grfFlags$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD grfFlags;
     * }
     */
    public static void grfFlags$set(MemorySegment seg, int x) {
        _tagPROTOCOLDATA.grfFlags$VH.set(seg, x);
    }
    public static int grfFlags$get(MemorySegment seg, long index) {
        return (int)_tagPROTOCOLDATA.grfFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void grfFlags$set(MemorySegment seg, long index, int x) {
        _tagPROTOCOLDATA.grfFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwState$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwState"));
    public static VarHandle dwState$VH() {
        return _tagPROTOCOLDATA.dwState$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwState;
     * }
     */
    public static int dwState$get(MemorySegment seg) {
        return (int)_tagPROTOCOLDATA.dwState$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwState;
     * }
     */
    public static void dwState$set(MemorySegment seg, int x) {
        _tagPROTOCOLDATA.dwState$VH.set(seg, x);
    }
    public static int dwState$get(MemorySegment seg, long index) {
        return (int)_tagPROTOCOLDATA.dwState$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwState$set(MemorySegment seg, long index, int x) {
        _tagPROTOCOLDATA.dwState$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pData$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pData"));
    public static VarHandle pData$VH() {
        return _tagPROTOCOLDATA.pData$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPVOID pData;
     * }
     */
    public static MemorySegment pData$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_tagPROTOCOLDATA.pData$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPVOID pData;
     * }
     */
    public static void pData$set(MemorySegment seg, MemorySegment x) {
        _tagPROTOCOLDATA.pData$VH.set(seg, x);
    }
    public static MemorySegment pData$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_tagPROTOCOLDATA.pData$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pData$set(MemorySegment seg, long index, MemorySegment x) {
        _tagPROTOCOLDATA.pData$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbData$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbData"));
    public static VarHandle cbData$VH() {
        return _tagPROTOCOLDATA.cbData$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ULONG cbData;
     * }
     */
    public static int cbData$get(MemorySegment seg) {
        return (int)_tagPROTOCOLDATA.cbData$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ULONG cbData;
     * }
     */
    public static void cbData$set(MemorySegment seg, int x) {
        _tagPROTOCOLDATA.cbData$VH.set(seg, x);
    }
    public static int cbData$get(MemorySegment seg, long index) {
        return (int)_tagPROTOCOLDATA.cbData$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbData$set(MemorySegment seg, long index, int x) {
        _tagPROTOCOLDATA.cbData$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


