// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tMIXERCONTROLDETAILS {
 *     DWORD cbStruct;
 *     DWORD dwControlID;
 *     DWORD cChannels;
 *     union {
 *         HWND hwndOwner;
 *         DWORD cMultipleItems;
 *     };
 *     DWORD cbDetails;
 *     LPVOID paDetails;
 * };
 * }
 */
public class tMIXERCONTROLDETAILS {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbStruct"),
        Constants$root.C_LONG$LAYOUT.withName("dwControlID"),
        Constants$root.C_LONG$LAYOUT.withName("cChannels"),
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withBitAlignment(32).withName("hwndOwner"),
            Constants$root.C_LONG$LAYOUT.withName("cMultipleItems")
        ).withName("$anon$0"),
        Constants$root.C_LONG$LAYOUT.withName("cbDetails"),
        Constants$root.C_POINTER$LAYOUT.withName("paDetails")
    ).withName("tMIXERCONTROLDETAILS");
    public static MemoryLayout $LAYOUT() {
        return tMIXERCONTROLDETAILS.$struct$LAYOUT;
    }
    static final VarHandle cbStruct$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbStruct"));
    public static VarHandle cbStruct$VH() {
        return tMIXERCONTROLDETAILS.cbStruct$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbStruct;
     * }
     */
    public static int cbStruct$get(MemorySegment seg) {
        return (int)tMIXERCONTROLDETAILS.cbStruct$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbStruct;
     * }
     */
    public static void cbStruct$set(MemorySegment seg, int x) {
        tMIXERCONTROLDETAILS.cbStruct$VH.set(seg, x);
    }
    public static int cbStruct$get(MemorySegment seg, long index) {
        return (int)tMIXERCONTROLDETAILS.cbStruct$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbStruct$set(MemorySegment seg, long index, int x) {
        tMIXERCONTROLDETAILS.cbStruct$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwControlID$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwControlID"));
    public static VarHandle dwControlID$VH() {
        return tMIXERCONTROLDETAILS.dwControlID$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwControlID;
     * }
     */
    public static int dwControlID$get(MemorySegment seg) {
        return (int)tMIXERCONTROLDETAILS.dwControlID$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwControlID;
     * }
     */
    public static void dwControlID$set(MemorySegment seg, int x) {
        tMIXERCONTROLDETAILS.dwControlID$VH.set(seg, x);
    }
    public static int dwControlID$get(MemorySegment seg, long index) {
        return (int)tMIXERCONTROLDETAILS.dwControlID$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwControlID$set(MemorySegment seg, long index, int x) {
        tMIXERCONTROLDETAILS.dwControlID$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cChannels$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cChannels"));
    public static VarHandle cChannels$VH() {
        return tMIXERCONTROLDETAILS.cChannels$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cChannels;
     * }
     */
    public static int cChannels$get(MemorySegment seg) {
        return (int)tMIXERCONTROLDETAILS.cChannels$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cChannels;
     * }
     */
    public static void cChannels$set(MemorySegment seg, int x) {
        tMIXERCONTROLDETAILS.cChannels$VH.set(seg, x);
    }
    public static int cChannels$get(MemorySegment seg, long index) {
        return (int)tMIXERCONTROLDETAILS.cChannels$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cChannels$set(MemorySegment seg, long index, int x) {
        tMIXERCONTROLDETAILS.cChannels$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hwndOwner$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("hwndOwner"));
    public static VarHandle hwndOwner$VH() {
        return tMIXERCONTROLDETAILS.hwndOwner$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static MemorySegment hwndOwner$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tMIXERCONTROLDETAILS.hwndOwner$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HWND hwndOwner;
     * }
     */
    public static void hwndOwner$set(MemorySegment seg, MemorySegment x) {
        tMIXERCONTROLDETAILS.hwndOwner$VH.set(seg, x);
    }
    public static MemorySegment hwndOwner$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tMIXERCONTROLDETAILS.hwndOwner$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hwndOwner$set(MemorySegment seg, long index, MemorySegment x) {
        tMIXERCONTROLDETAILS.hwndOwner$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cMultipleItems$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("cMultipleItems"));
    public static VarHandle cMultipleItems$VH() {
        return tMIXERCONTROLDETAILS.cMultipleItems$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cMultipleItems;
     * }
     */
    public static int cMultipleItems$get(MemorySegment seg) {
        return (int)tMIXERCONTROLDETAILS.cMultipleItems$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cMultipleItems;
     * }
     */
    public static void cMultipleItems$set(MemorySegment seg, int x) {
        tMIXERCONTROLDETAILS.cMultipleItems$VH.set(seg, x);
    }
    public static int cMultipleItems$get(MemorySegment seg, long index) {
        return (int)tMIXERCONTROLDETAILS.cMultipleItems$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cMultipleItems$set(MemorySegment seg, long index, int x) {
        tMIXERCONTROLDETAILS.cMultipleItems$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbDetails$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbDetails"));
    public static VarHandle cbDetails$VH() {
        return tMIXERCONTROLDETAILS.cbDetails$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbDetails;
     * }
     */
    public static int cbDetails$get(MemorySegment seg) {
        return (int)tMIXERCONTROLDETAILS.cbDetails$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbDetails;
     * }
     */
    public static void cbDetails$set(MemorySegment seg, int x) {
        tMIXERCONTROLDETAILS.cbDetails$VH.set(seg, x);
    }
    public static int cbDetails$get(MemorySegment seg, long index) {
        return (int)tMIXERCONTROLDETAILS.cbDetails$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbDetails$set(MemorySegment seg, long index, int x) {
        tMIXERCONTROLDETAILS.cbDetails$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle paDetails$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("paDetails"));
    public static VarHandle paDetails$VH() {
        return tMIXERCONTROLDETAILS.paDetails$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPVOID paDetails;
     * }
     */
    public static MemorySegment paDetails$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tMIXERCONTROLDETAILS.paDetails$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPVOID paDetails;
     * }
     */
    public static void paDetails$set(MemorySegment seg, MemorySegment x) {
        tMIXERCONTROLDETAILS.paDetails$VH.set(seg, x);
    }
    public static MemorySegment paDetails$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tMIXERCONTROLDETAILS.paDetails$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void paDetails$set(MemorySegment seg, long index, MemorySegment x) {
        tMIXERCONTROLDETAILS.paDetails$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


