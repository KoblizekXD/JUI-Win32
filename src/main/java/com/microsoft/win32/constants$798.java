// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$798 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$798() {}
    static final FunctionDescriptor CertFreeCertificateChainList$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CertFreeCertificateChainList$MH = RuntimeHelper.downcallHandle(
        "CertFreeCertificateChainList",
        constants$798.CertFreeCertificateChainList$FUNC
    );
    static final FunctionDescriptor CryptRetrieveTimeStamp$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CryptRetrieveTimeStamp$MH = RuntimeHelper.downcallHandle(
        "CryptRetrieveTimeStamp",
        constants$798.CryptRetrieveTimeStamp$FUNC
    );
    static final FunctionDescriptor CryptVerifyTimeStampSignature$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle CryptVerifyTimeStampSignature$MH = RuntimeHelper.downcallHandle(
        "CryptVerifyTimeStampSignature",
        constants$798.CryptVerifyTimeStampSignature$FUNC
    );
    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH_UP$MH = RuntimeHelper.upcallHandle(PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH.class, "apply", constants$798.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH_UP$FUNC);
    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$798.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH_DOWN$FUNC
    );
    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET_UP$MH = RuntimeHelper.upcallHandle(PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET.class, "apply", constants$798.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET_UP$FUNC);
}


