// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$845 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$845() {}
    static final FunctionDescriptor RpcSmSwapClientAllocFree$ClientAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor RpcSmSwapClientAllocFree$ClientAlloc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle RpcSmSwapClientAllocFree$ClientAlloc_UP$MH = RuntimeHelper.upcallHandle(RpcSmSwapClientAllocFree$ClientAlloc.class, "apply", constants$845.RpcSmSwapClientAllocFree$ClientAlloc_UP$FUNC);
    static final FunctionDescriptor RpcSmSwapClientAllocFree$ClientAlloc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle RpcSmSwapClientAllocFree$ClientAlloc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$845.RpcSmSwapClientAllocFree$ClientAlloc_DOWN$FUNC
    );
    static final FunctionDescriptor RpcSmSwapClientAllocFree$ClientFree$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor RpcSmSwapClientAllocFree$ClientFree_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcSmSwapClientAllocFree$ClientFree_UP$MH = RuntimeHelper.upcallHandle(RpcSmSwapClientAllocFree$ClientFree.class, "apply", constants$845.RpcSmSwapClientAllocFree$ClientFree_UP$FUNC);
    static final FunctionDescriptor RpcSmSwapClientAllocFree$ClientFree_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcSmSwapClientAllocFree$ClientFree_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$845.RpcSmSwapClientAllocFree$ClientFree_DOWN$FUNC
    );
    static final FunctionDescriptor RpcSmSwapClientAllocFree$OldClientAlloc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final FunctionDescriptor RpcSmSwapClientAllocFree$OldClientAlloc_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle RpcSmSwapClientAllocFree$OldClientAlloc_UP$MH = RuntimeHelper.upcallHandle(RpcSmSwapClientAllocFree$OldClientAlloc.class, "apply", constants$845.RpcSmSwapClientAllocFree$OldClientAlloc_UP$FUNC);
    static final FunctionDescriptor RpcSmSwapClientAllocFree$OldClientAlloc_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle RpcSmSwapClientAllocFree$OldClientAlloc_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$845.RpcSmSwapClientAllocFree$OldClientAlloc_DOWN$FUNC
    );
}


