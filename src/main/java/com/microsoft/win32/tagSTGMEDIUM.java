// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct tagSTGMEDIUM {
 *     DWORD tymed;
 *     union {
 *         HBITMAP hBitmap;
 *         HMETAFILEPICT hMetaFilePict;
 *         HENHMETAFILE hEnhMetaFile;
 *         HGLOBAL hGlobal;
 *         LPOLESTR lpszFileName;
 *         IStream* pstm;
 *         IStorage* pstg;
 *     };
 *     IUnknown* pUnkForRelease;
 * };
 * }
 */
public class tagSTGMEDIUM {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("tymed"),
        MemoryLayout.paddingLayout(32),
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("hBitmap"),
            Constants$root.C_POINTER$LAYOUT.withName("hMetaFilePict"),
            Constants$root.C_POINTER$LAYOUT.withName("hEnhMetaFile"),
            Constants$root.C_POINTER$LAYOUT.withName("hGlobal"),
            Constants$root.C_POINTER$LAYOUT.withName("lpszFileName"),
            Constants$root.C_POINTER$LAYOUT.withName("pstm"),
            Constants$root.C_POINTER$LAYOUT.withName("pstg")
        ).withName("$anon$0"),
        Constants$root.C_POINTER$LAYOUT.withName("pUnkForRelease")
    ).withName("tagSTGMEDIUM");
    public static MemoryLayout $LAYOUT() {
        return tagSTGMEDIUM.$struct$LAYOUT;
    }
    static final VarHandle tymed$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("tymed"));
    public static VarHandle tymed$VH() {
        return tagSTGMEDIUM.tymed$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD tymed;
     * }
     */
    public static int tymed$get(MemorySegment seg) {
        return (int)tagSTGMEDIUM.tymed$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD tymed;
     * }
     */
    public static void tymed$set(MemorySegment seg, int x) {
        tagSTGMEDIUM.tymed$VH.set(seg, x);
    }
    public static int tymed$get(MemorySegment seg, long index) {
        return (int)tagSTGMEDIUM.tymed$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tymed$set(MemorySegment seg, long index, int x) {
        tagSTGMEDIUM.tymed$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hBitmap$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("hBitmap"));
    public static VarHandle hBitmap$VH() {
        return tagSTGMEDIUM.hBitmap$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HBITMAP hBitmap;
     * }
     */
    public static MemorySegment hBitmap$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hBitmap$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HBITMAP hBitmap;
     * }
     */
    public static void hBitmap$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.hBitmap$VH.set(seg, x);
    }
    public static MemorySegment hBitmap$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hBitmap$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hBitmap$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.hBitmap$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hMetaFilePict$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("hMetaFilePict"));
    public static VarHandle hMetaFilePict$VH() {
        return tagSTGMEDIUM.hMetaFilePict$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HMETAFILEPICT hMetaFilePict;
     * }
     */
    public static MemorySegment hMetaFilePict$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hMetaFilePict$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HMETAFILEPICT hMetaFilePict;
     * }
     */
    public static void hMetaFilePict$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.hMetaFilePict$VH.set(seg, x);
    }
    public static MemorySegment hMetaFilePict$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hMetaFilePict$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hMetaFilePict$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.hMetaFilePict$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hEnhMetaFile$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("hEnhMetaFile"));
    public static VarHandle hEnhMetaFile$VH() {
        return tagSTGMEDIUM.hEnhMetaFile$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HENHMETAFILE hEnhMetaFile;
     * }
     */
    public static MemorySegment hEnhMetaFile$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hEnhMetaFile$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HENHMETAFILE hEnhMetaFile;
     * }
     */
    public static void hEnhMetaFile$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.hEnhMetaFile$VH.set(seg, x);
    }
    public static MemorySegment hEnhMetaFile$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hEnhMetaFile$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hEnhMetaFile$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.hEnhMetaFile$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle hGlobal$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("hGlobal"));
    public static VarHandle hGlobal$VH() {
        return tagSTGMEDIUM.hGlobal$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * HGLOBAL hGlobal;
     * }
     */
    public static MemorySegment hGlobal$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hGlobal$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * HGLOBAL hGlobal;
     * }
     */
    public static void hGlobal$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.hGlobal$VH.set(seg, x);
    }
    public static MemorySegment hGlobal$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.hGlobal$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void hGlobal$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.hGlobal$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle lpszFileName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("lpszFileName"));
    public static VarHandle lpszFileName$VH() {
        return tagSTGMEDIUM.lpszFileName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPOLESTR lpszFileName;
     * }
     */
    public static MemorySegment lpszFileName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.lpszFileName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPOLESTR lpszFileName;
     * }
     */
    public static void lpszFileName$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.lpszFileName$VH.set(seg, x);
    }
    public static MemorySegment lpszFileName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.lpszFileName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void lpszFileName$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.lpszFileName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pstm$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pstm"));
    public static VarHandle pstm$VH() {
        return tagSTGMEDIUM.pstm$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IStream* pstm;
     * }
     */
    public static MemorySegment pstm$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.pstm$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IStream* pstm;
     * }
     */
    public static void pstm$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.pstm$VH.set(seg, x);
    }
    public static MemorySegment pstm$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.pstm$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pstm$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.pstm$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pstg$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pstg"));
    public static VarHandle pstg$VH() {
        return tagSTGMEDIUM.pstg$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IStorage* pstg;
     * }
     */
    public static MemorySegment pstg$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.pstg$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IStorage* pstg;
     * }
     */
    public static void pstg$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.pstg$VH.set(seg, x);
    }
    public static MemorySegment pstg$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.pstg$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pstg$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.pstg$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pUnkForRelease$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pUnkForRelease"));
    public static VarHandle pUnkForRelease$VH() {
        return tagSTGMEDIUM.pUnkForRelease$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * IUnknown* pUnkForRelease;
     * }
     */
    public static MemorySegment pUnkForRelease$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.pUnkForRelease$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * IUnknown* pUnkForRelease;
     * }
     */
    public static void pUnkForRelease$set(MemorySegment seg, MemorySegment x) {
        tagSTGMEDIUM.pUnkForRelease$VH.set(seg, x);
    }
    public static MemorySegment pUnkForRelease$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)tagSTGMEDIUM.pUnkForRelease$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pUnkForRelease$set(MemorySegment seg, long index, MemorySegment x) {
        tagSTGMEDIUM.pUnkForRelease$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


