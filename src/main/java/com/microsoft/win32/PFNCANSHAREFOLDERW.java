// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * long (*PFNCANSHAREFOLDERW)(unsigned short* pszPath);
 * }
 */
public interface PFNCANSHAREFOLDERW {

    int apply(java.lang.foreign.MemorySegment pszPath);
    static MemorySegment allocate(PFNCANSHAREFOLDERW fi, SegmentScope scope) {
        return RuntimeHelper.upcallStub(constants$706.PFNCANSHAREFOLDERW_UP$MH, fi, constants$706.PFNCANSHAREFOLDERW$FUNC, scope);
    }
    static PFNCANSHAREFOLDERW ofAddress(MemorySegment addr, SegmentScope scope) {
        MemorySegment symbol = MemorySegment.ofAddress(addr.address(), 0, scope);
        return (java.lang.foreign.MemorySegment _pszPath) -> {
            try {
                return (int)constants$706.PFNCANSHAREFOLDERW_DOWN$MH.invokeExact(symbol, _pszPath);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


