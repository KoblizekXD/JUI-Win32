// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _DRIVER_INFO_3W {
 *     DWORD cVersion;
 *     LPWSTR pName;
 *     LPWSTR pEnvironment;
 *     LPWSTR pDriverPath;
 *     LPWSTR pDataFile;
 *     LPWSTR pConfigFile;
 *     LPWSTR pHelpFile;
 *     LPWSTR pDependentFiles;
 *     LPWSTR pMonitorName;
 *     LPWSTR pDefaultDataType;
 * };
 * }
 */
public class _DRIVER_INFO_3W {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cVersion"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("pName"),
        Constants$root.C_POINTER$LAYOUT.withName("pEnvironment"),
        Constants$root.C_POINTER$LAYOUT.withName("pDriverPath"),
        Constants$root.C_POINTER$LAYOUT.withName("pDataFile"),
        Constants$root.C_POINTER$LAYOUT.withName("pConfigFile"),
        Constants$root.C_POINTER$LAYOUT.withName("pHelpFile"),
        Constants$root.C_POINTER$LAYOUT.withName("pDependentFiles"),
        Constants$root.C_POINTER$LAYOUT.withName("pMonitorName"),
        Constants$root.C_POINTER$LAYOUT.withName("pDefaultDataType")
    ).withName("_DRIVER_INFO_3W");
    public static MemoryLayout $LAYOUT() {
        return _DRIVER_INFO_3W.$struct$LAYOUT;
    }
    static final VarHandle cVersion$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cVersion"));
    public static VarHandle cVersion$VH() {
        return _DRIVER_INFO_3W.cVersion$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cVersion;
     * }
     */
    public static int cVersion$get(MemorySegment seg) {
        return (int)_DRIVER_INFO_3W.cVersion$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cVersion;
     * }
     */
    public static void cVersion$set(MemorySegment seg, int x) {
        _DRIVER_INFO_3W.cVersion$VH.set(seg, x);
    }
    public static int cVersion$get(MemorySegment seg, long index) {
        return (int)_DRIVER_INFO_3W.cVersion$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cVersion$set(MemorySegment seg, long index, int x) {
        _DRIVER_INFO_3W.cVersion$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pName"));
    public static VarHandle pName$VH() {
        return _DRIVER_INFO_3W.pName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pName;
     * }
     */
    public static MemorySegment pName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pName;
     * }
     */
    public static void pName$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pName$VH.set(seg, x);
    }
    public static MemorySegment pName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pName$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pEnvironment$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pEnvironment"));
    public static VarHandle pEnvironment$VH() {
        return _DRIVER_INFO_3W.pEnvironment$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pEnvironment;
     * }
     */
    public static MemorySegment pEnvironment$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pEnvironment$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pEnvironment;
     * }
     */
    public static void pEnvironment$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pEnvironment$VH.set(seg, x);
    }
    public static MemorySegment pEnvironment$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pEnvironment$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pEnvironment$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pEnvironment$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pDriverPath$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pDriverPath"));
    public static VarHandle pDriverPath$VH() {
        return _DRIVER_INFO_3W.pDriverPath$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDriverPath;
     * }
     */
    public static MemorySegment pDriverPath$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDriverPath$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDriverPath;
     * }
     */
    public static void pDriverPath$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pDriverPath$VH.set(seg, x);
    }
    public static MemorySegment pDriverPath$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDriverPath$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pDriverPath$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pDriverPath$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pDataFile$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pDataFile"));
    public static VarHandle pDataFile$VH() {
        return _DRIVER_INFO_3W.pDataFile$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDataFile;
     * }
     */
    public static MemorySegment pDataFile$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDataFile$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDataFile;
     * }
     */
    public static void pDataFile$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pDataFile$VH.set(seg, x);
    }
    public static MemorySegment pDataFile$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDataFile$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pDataFile$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pDataFile$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pConfigFile$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pConfigFile"));
    public static VarHandle pConfigFile$VH() {
        return _DRIVER_INFO_3W.pConfigFile$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pConfigFile;
     * }
     */
    public static MemorySegment pConfigFile$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pConfigFile$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pConfigFile;
     * }
     */
    public static void pConfigFile$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pConfigFile$VH.set(seg, x);
    }
    public static MemorySegment pConfigFile$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pConfigFile$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pConfigFile$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pConfigFile$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pHelpFile$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pHelpFile"));
    public static VarHandle pHelpFile$VH() {
        return _DRIVER_INFO_3W.pHelpFile$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pHelpFile;
     * }
     */
    public static MemorySegment pHelpFile$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pHelpFile$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pHelpFile;
     * }
     */
    public static void pHelpFile$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pHelpFile$VH.set(seg, x);
    }
    public static MemorySegment pHelpFile$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pHelpFile$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pHelpFile$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pHelpFile$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pDependentFiles$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pDependentFiles"));
    public static VarHandle pDependentFiles$VH() {
        return _DRIVER_INFO_3W.pDependentFiles$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDependentFiles;
     * }
     */
    public static MemorySegment pDependentFiles$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDependentFiles$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDependentFiles;
     * }
     */
    public static void pDependentFiles$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pDependentFiles$VH.set(seg, x);
    }
    public static MemorySegment pDependentFiles$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDependentFiles$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pDependentFiles$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pDependentFiles$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pMonitorName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pMonitorName"));
    public static VarHandle pMonitorName$VH() {
        return _DRIVER_INFO_3W.pMonitorName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pMonitorName;
     * }
     */
    public static MemorySegment pMonitorName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pMonitorName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pMonitorName;
     * }
     */
    public static void pMonitorName$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pMonitorName$VH.set(seg, x);
    }
    public static MemorySegment pMonitorName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pMonitorName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pMonitorName$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pMonitorName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pDefaultDataType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pDefaultDataType"));
    public static VarHandle pDefaultDataType$VH() {
        return _DRIVER_INFO_3W.pDefaultDataType$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pDefaultDataType;
     * }
     */
    public static MemorySegment pDefaultDataType$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDefaultDataType$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pDefaultDataType;
     * }
     */
    public static void pDefaultDataType$set(MemorySegment seg, MemorySegment x) {
        _DRIVER_INFO_3W.pDefaultDataType$VH.set(seg, x);
    }
    public static MemorySegment pDefaultDataType$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_DRIVER_INFO_3W.pDefaultDataType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pDefaultDataType$set(MemorySegment seg, long index, MemorySegment x) {
        _DRIVER_INFO_3W.pDefaultDataType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


