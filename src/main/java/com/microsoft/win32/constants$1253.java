// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$1253 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$1253() {}
    static final FunctionDescriptor LPHANDLER_FUNCTION_EX$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor LPHANDLER_FUNCTION_EX_UP$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPHANDLER_FUNCTION_EX_UP$MH = RuntimeHelper.upcallHandle(LPHANDLER_FUNCTION_EX.class, "apply", constants$1253.LPHANDLER_FUNCTION_EX_UP$FUNC);
    static final FunctionDescriptor LPHANDLER_FUNCTION_EX_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPHANDLER_FUNCTION_EX_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$1253.LPHANDLER_FUNCTION_EX_DOWN$FUNC
    );
    static final FunctionDescriptor PFN_SC_NOTIFY_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PFN_SC_NOTIFY_CALLBACK_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_SC_NOTIFY_CALLBACK_UP$MH = RuntimeHelper.upcallHandle(PFN_SC_NOTIFY_CALLBACK.class, "apply", constants$1253.PFN_SC_NOTIFY_CALLBACK_UP$FUNC);
    static final FunctionDescriptor PFN_SC_NOTIFY_CALLBACK_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_SC_NOTIFY_CALLBACK_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$1253.PFN_SC_NOTIFY_CALLBACK_DOWN$FUNC
    );
    static final FunctionDescriptor ChangeServiceConfigA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ChangeServiceConfigA$MH = RuntimeHelper.downcallHandle(
        "ChangeServiceConfigA",
        constants$1253.ChangeServiceConfigA$FUNC
    );
    static final FunctionDescriptor ChangeServiceConfigW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ChangeServiceConfigW$MH = RuntimeHelper.downcallHandle(
        "ChangeServiceConfigW",
        constants$1253.ChangeServiceConfigW$FUNC
    );
}


