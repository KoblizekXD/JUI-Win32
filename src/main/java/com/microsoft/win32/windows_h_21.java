// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class windows_h_21 extends windows_h_20 {

    /**
     * {@snippet :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthHealthy = 3;
     * }
     */
    public static int DiskHealthHealthy() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_HEALTH_STATUS.DiskHealthMax = 4;
     * }
     */
    public static int DiskHealthMax() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DISK_HEALTH_STATUS* PSTORAGE_DISK_HEALTH_STATUS;
     * }
     */
    public static final OfAddress PSTORAGE_DISK_HEALTH_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusNone = 0;
     * }
     */
    public static int DiskOpStatusNone() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusUnknown = 1;
     * }
     */
    public static int DiskOpStatusUnknown() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusOk = 2;
     * }
     */
    public static int DiskOpStatusOk() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusPredictingFailure = 3;
     * }
     */
    public static int DiskOpStatusPredictingFailure() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusInService = 4;
     * }
     */
    public static int DiskOpStatusInService() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusHardwareError = 5;
     * }
     */
    public static int DiskOpStatusHardwareError() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusNotUsable = 6;
     * }
     */
    public static int DiskOpStatusNotUsable() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusTransientError = 7;
     * }
     */
    public static int DiskOpStatusTransientError() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DISK_OPERATIONAL_STATUS.DiskOpStatusMissing = 8;
     * }
     */
    public static int DiskOpStatusMissing() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DISK_OPERATIONAL_STATUS* PSTORAGE_DISK_OPERATIONAL_STATUS;
     * }
     */
    public static final OfAddress PSTORAGE_DISK_OPERATIONAL_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonUnknown = 0;
     * }
     */
    public static int DiskOpReasonUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonScsiSenseCode = 1;
     * }
     */
    public static int DiskOpReasonScsiSenseCode() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMedia = 2;
     * }
     */
    public static int DiskOpReasonMedia() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonIo = 3;
     * }
     */
    public static int DiskOpReasonIo() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonThresholdExceeded = 4;
     * }
     */
    public static int DiskOpReasonThresholdExceeded() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostData = 5;
     * }
     */
    public static int DiskOpReasonLostData() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonEnergySource = 6;
     * }
     */
    public static int DiskOpReasonEnergySource() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonConfiguration = 7;
     * }
     */
    public static int DiskOpReasonConfiguration() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDeviceController = 8;
     * }
     */
    public static int DiskOpReasonDeviceController() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMediaController = 9;
     * }
     */
    public static int DiskOpReasonMediaController() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonComponent = 10;
     * }
     */
    public static int DiskOpReasonComponent() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonNVDIMM_N = 11;
     * }
     */
    public static int DiskOpReasonNVDIMM_N() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonBackgroundOperation = 12;
     * }
     */
    public static int DiskOpReasonBackgroundOperation() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonInvalidFirmware = 13;
     * }
     */
    public static int DiskOpReasonInvalidFirmware() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonHealthCheck = 14;
     * }
     */
    public static int DiskOpReasonHealthCheck() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostDataPersistence = 15;
     * }
     */
    public static int DiskOpReasonLostDataPersistence() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDisabledByPlatform = 16;
     * }
     */
    public static int DiskOpReasonDisabledByPlatform() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonLostWritePersistence = 17;
     * }
     */
    public static int DiskOpReasonLostWritePersistence() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonDataPersistenceLossImminent = 18;
     * }
     */
    public static int DiskOpReasonDataPersistenceLossImminent() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonWritePersistenceLossImminent = 19;
     * }
     */
    public static int DiskOpReasonWritePersistenceLossImminent() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_OPERATIONAL_STATUS_REASON.DiskOpReasonMax = 20;
     * }
     */
    public static int DiskOpReasonMax() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_OPERATIONAL_STATUS_REASON* PSTORAGE_OPERATIONAL_STATUS_REASON;
     * }
     */
    public static final OfAddress PSTORAGE_OPERATIONAL_STATUS_REASON = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OPERATIONAL_REASON* PSTORAGE_OPERATIONAL_REASON;
     * }
     */
    public static final OfAddress PSTORAGE_OPERATIONAL_REASON = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_MANAGEMENT_STATUS* PSTORAGE_DEVICE_MANAGEMENT_STATUS;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_MANAGEMENT_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ADAPTER_SERIAL_NUMBER* PSTORAGE_ADAPTER_SERIAL_NUMBER;
     * }
     */
    public static final OfAddress PSTORAGE_ADAPTER_SERIAL_NUMBER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeUnknown = 0;
     * }
     */
    public static int ZonedDeviceTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeHostManaged = 1;
     * }
     */
    public static int ZonedDeviceTypeHostManaged() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeHostAware = 2;
     * }
     */
    public static int ZonedDeviceTypeHostAware() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONED_DEVICE_TYPES.ZonedDeviceTypeDeviceManaged = 3;
     * }
     */
    public static int ZonedDeviceTypeDeviceManaged() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ZONED_DEVICE_TYPES* PSTORAGE_ZONED_DEVICE_TYPES;
     * }
     */
    public static final OfAddress PSTORAGE_ZONED_DEVICE_TYPES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeUnknown = 0;
     * }
     */
    public static int ZoneTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeConventional = 1;
     * }
     */
    public static int ZoneTypeConventional() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeSequentialWriteRequired = 2;
     * }
     */
    public static int ZoneTypeSequentialWriteRequired() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeSequentialWritePreferred = 3;
     * }
     */
    public static int ZoneTypeSequentialWritePreferred() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_TYPES.ZoneTypeMax = 4;
     * }
     */
    public static int ZoneTypeMax() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ZONE_TYPES* PSTORAGE_ZONE_TYPES;
     * }
     */
    public static final OfAddress PSTORAGE_ZONE_TYPES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ZONE_GROUP* PSTORAGE_ZONE_GROUP;
     * }
     */
    public static final OfAddress PSTORAGE_ZONE_GROUP = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ZONED_DEVICE_DESCRIPTOR* PSTORAGE_ZONED_DEVICE_DESCRIPTOR;
     * }
     */
    public static final OfAddress PSTORAGE_ZONED_DEVICE_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_LOCATION* PDEVICE_LOCATION;
     * }
     */
    public static final OfAddress PDEVICE_LOCATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_LOCATION_DESCRIPTOR* PSTORAGE_DEVICE_LOCATION_DESCRIPTOR;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_LOCATION_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_NUMA_PROPERTY* PSTORAGE_DEVICE_NUMA_PROPERTY;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_NUMA_PROPERTY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT* PSTORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_UNSAFE_SHUTDOWN_COUNT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_ENDURANCE_INFO* PSTORAGE_HW_ENDURANCE_INFO;
     * }
     */
    public static final OfAddress PSTORAGE_HW_ENDURANCE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_ENDURANCE_DATA_DESCRIPTOR* PSTORAGE_HW_ENDURANCE_DATA_DESCRIPTOR;
     * }
     */
    public static final OfAddress PSTORAGE_HW_ENDURANCE_DATA_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_LED_STATE_DESCRIPTOR* PSTORAGE_DEVICE_LED_STATE_DESCRIPTOR;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_LED_STATE_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY* PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_ENCRYPTION_TYPE.StorageEncryptionTypeUnknown = 0;
     * }
     */
    public static int StorageEncryptionTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ENCRYPTION_TYPE.StorageEncryptionTypeEDrive = 1;
     * }
     */
    public static int StorageEncryptionTypeEDrive() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ENCRYPTION_TYPE.StorageEncryptionTypeTcgOpal = 2;
     * }
     */
    public static int StorageEncryptionTypeTcgOpal() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ENCRYPTION_TYPE* PSTORAGE_ENCRYPTION_TYPE;
     * }
     */
    public static final OfAddress PSTORAGE_ENCRYPTION_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY_V2* PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY_V2;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_SELF_ENCRYPTION_PROPERTY_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_FRU_ID_DESCRIPTOR* PSTORAGE_FRU_ID_DESCRIPTOR;
     * }
     */
    public static final OfAddress PSTORAGE_FRU_ID_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long DEVICE_DATA_MANAGEMENT_SET_ACTION;
     * }
     */
    public static final OfInt DEVICE_DATA_MANAGEMENT_SET_ACTION = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long DEVICE_DSM_ACTION;
     * }
     */
    public static final OfInt DEVICE_DSM_ACTION = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_RANGE* PDEVICE_DATA_SET_RANGE;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_RANGE* PDEVICE_DSM_RANGE;
     * }
     */
    public static final OfAddress PDEVICE_DSM_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES* PDEVICE_MANAGE_DATA_SET_ATTRIBUTES;
     * }
     */
    public static final OfAddress PDEVICE_MANAGE_DATA_SET_ATTRIBUTES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES* PDEVICE_DSM_INPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT* PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT* PDEVICE_DSM_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_DEFINITION* PDEVICE_DSM_DEFINITION;
     * }
     */
    public static final OfAddress PDEVICE_DSM_DEFINITION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS* PDEVICE_DSM_NOTIFICATION_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_NOTIFICATION_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OFFLOAD_TOKEN* PSTORAGE_OFFLOAD_TOKEN;
     * }
     */
    public static final OfAddress PSTORAGE_OFFLOAD_TOKEN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS* PDEVICE_DSM_OFFLOAD_READ_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_OFFLOAD_READ_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OFFLOAD_READ_OUTPUT* PSTORAGE_OFFLOAD_READ_OUTPUT;
     * }
     */
    public static final OfAddress PSTORAGE_OFFLOAD_READ_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS* PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_OFFLOAD_WRITE_OUTPUT* PSTORAGE_OFFLOAD_WRITE_OUTPUT;
     * }
     */
    public static final OfAddress PSTORAGE_OFFLOAD_WRITE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS* PDEVICE_DATA_SET_LBP_STATE_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_LBP_STATE_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LBP_STATE_PARAMETERS* PDEVICE_DSM_ALLOCATION_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_ALLOCATION_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE* PDEVICE_DATA_SET_LB_PROVISIONING_STATE;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_LB_PROVISIONING_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE* PDEVICE_DSM_ALLOCATION_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_ALLOCATION_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2* PDEVICE_DATA_SET_LB_PROVISIONING_STATE_V2;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_LB_PROVISIONING_STATE_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE_V2* PDEVICE_DSM_ALLOCATION_OUTPUT2;
     * }
     */
    public static final OfAddress PDEVICE_DSM_ALLOCATION_OUTPUT2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS* PDEVICE_DATA_SET_REPAIR_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_REPAIR_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS* PDEVICE_DSM_REPAIR_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_REPAIR_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_REPAIR_OUTPUT* PDEVICE_DATA_SET_REPAIR_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_REPAIR_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_REPAIR_OUTPUT* PDEVICE_DSM_REPAIR_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_REPAIR_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT* PDEVICE_DATA_SET_SCRUB_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_SCRUB_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT* PDEVICE_DSM_SCRUB_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_SCRUB_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_SCRUB_EX_OUTPUT* PDEVICE_DATA_SET_SCRUB_EX_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_SCRUB_EX_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_SCRUB_EX_OUTPUT* PDEVICE_DSM_SCRUB_OUTPUT2;
     * }
     */
    public static final OfAddress PDEVICE_DSM_SCRUB_OUTPUT2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_TIERING_QUERY_INPUT* PDEVICE_DSM_TIERING_QUERY_INPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_TIERING_QUERY_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_TIERING_QUERY_INPUT* PDEVICE_DSM_TIERING_QUERY_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_TIERING_QUERY_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_TIER_REGION* PSTORAGE_TIER_REGION;
     * }
     */
    public static final OfAddress PSTORAGE_TIER_REGION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_TIERING_QUERY_OUTPUT* PDEVICE_DSM_TIERING_QUERY_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_TIERING_QUERY_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS* PDEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_NVCACHE_CHANGE_PRIORITY_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT* PDEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DATA_SET_TOPOLOGY_ID_QUERY_OUTPUT* PDEVICE_DSM_TOPOLOGY_ID_QUERY_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_TOPOLOGY_ID_QUERY_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_STORAGE_ADDRESS_RANGE* PDEVICE_STORAGE_ADDRESS_RANGE;
     * }
     */
    public static final OfAddress PDEVICE_STORAGE_ADDRESS_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT* PDEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_PHYSICAL_ADDRESSES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_REPORT_ZONES_PARAMETERS* PDEVICE_DSM_REPORT_ZONES_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_REPORT_ZONES_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeAndLengthMayDifferent = 0;
     * }
     */
    public static int ZonesAttributeTypeAndLengthMayDifferent() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeSameLengthSame = 1;
     * }
     */
    public static int ZonesAttributeTypeSameLengthSame() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeSameLastZoneLengthDifferent = 2;
     * }
     */
    public static int ZonesAttributeTypeSameLastZoneLengthDifferent() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONES_ATTRIBUTES.ZonesAttributeTypeMayDifferentLengthSame = 3;
     * }
     */
    public static int ZonesAttributeTypeMayDifferentLengthSame() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ZONES_ATTRIBUTES* PSTORAGE_ZONES_ATTRIBUTES;
     * }
     */
    public static final OfAddress PSTORAGE_ZONES_ATTRIBUTES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionConventional = 0;
     * }
     */
    public static int ZoneConditionConventional() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionEmpty = 1;
     * }
     */
    public static int ZoneConditionEmpty() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionImplicitlyOpened = 2;
     * }
     */
    public static int ZoneConditionImplicitlyOpened() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionExplicitlyOpened = 3;
     * }
     */
    public static int ZoneConditionExplicitlyOpened() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionClosed = 4;
     * }
     */
    public static int ZoneConditionClosed() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionReadOnly = 13;
     * }
     */
    public static int ZoneConditionReadOnly() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionFull = 14;
     * }
     */
    public static int ZoneConditionFull() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ZONE_CONDITION.ZoneConditionOffline = 15;
     * }
     */
    public static int ZoneConditionOffline() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ZONE_CONDITION* PSTORAGE_ZONE_CONDITION;
     * }
     */
    public static final OfAddress PSTORAGE_ZONE_CONDITION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ZONE_DESCRIPTOR* PSTORAGE_ZONE_DESCRIPTOR;
     * }
     */
    public static final OfAddress PSTORAGE_ZONE_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_REPORT_ZONES_DATA* PDEVICE_DSM_REPORT_ZONES_DATA;
     * }
     */
    public static final OfAddress PDEVICE_DSM_REPORT_ZONES_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_REPORT_ZONES_DATA* PDEVICE_DSM_REPORT_ZONES_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_REPORT_ZONES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_STORAGE_RANGE_ATTRIBUTES* PDEVICE_STORAGE_RANGE_ATTRIBUTES;
     * }
     */
    public static final OfAddress PDEVICE_STORAGE_RANGE_ATTRIBUTES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_RANGE_ERROR_INFO* PDEVICE_DSM_RANGE_ERROR_INFO;
     * }
     */
    public static final OfAddress PDEVICE_DSM_RANGE_ERROR_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_RANGE_ERROR_INFO* PDEVICE_DSM_RANGE_ERROR_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_RANGE_ERROR_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_LOST_QUERY_PARAMETERS* PDEVICE_DSM_LOST_QUERY_PARAMETERS;
     * }
     */
    public static final OfAddress PDEVICE_DSM_LOST_QUERY_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_LOST_QUERY_OUTPUT* PDEVICE_DSM_LOST_QUERY_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_LOST_QUERY_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_FREE_SPACE_OUTPUT* PDEVICE_DSM_FREE_SPACE_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_FREE_SPACE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_DSM_CONVERSION_OUTPUT* PDEVICE_DSM_CONVERSION_OUTPUT;
     * }
     */
    public static final OfAddress PDEVICE_DSM_CONVERSION_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT* PSTORAGE_GET_BC_PROPERTIES_OUTPUT;
     * }
     */
    public static final OfAddress PSTORAGE_GET_BC_PROPERTIES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT* PSTORAGE_ALLOCATE_BC_STREAM_INPUT;
     * }
     */
    public static final OfAddress PSTORAGE_ALLOCATE_BC_STREAM_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT* PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT;
     * }
     */
    public static final OfAddress PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PRIORITY_HINT_SUPPORT* PSTORAGE_PRIORITY_HINT_SUPPORT;
     * }
     */
    public static final OfAddress PSTORAGE_PRIORITY_HINT_SUPPORT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_DIAGNOSTIC_LEVEL.StorageDiagnosticLevelDefault = 0;
     * }
     */
    public static int StorageDiagnosticLevelDefault() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DIAGNOSTIC_LEVEL.StorageDiagnosticLevelMax = 1;
     * }
     */
    public static int StorageDiagnosticLevelMax() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DIAGNOSTIC_LEVEL* PSTORAGE_DIAGNOSTIC_LEVEL;
     * }
     */
    public static final OfAddress PSTORAGE_DIAGNOSTIC_LEVEL = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeUndefined = 0;
     * }
     */
    public static int StorageDiagnosticTargetTypeUndefined() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypePort = 1;
     * }
     */
    public static int StorageDiagnosticTargetTypePort() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeMiniport = 2;
     * }
     */
    public static int StorageDiagnosticTargetTypeMiniport() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeHbaFirmware = 3;
     * }
     */
    public static int StorageDiagnosticTargetTypeHbaFirmware() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DIAGNOSTIC_TARGET_TYPE.StorageDiagnosticTargetTypeMax = 4;
     * }
     */
    public static int StorageDiagnosticTargetTypeMax() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DIAGNOSTIC_TARGET_TYPE* PSTORAGE_DIAGNOSTIC_TARGET_TYPE;
     * }
     */
    public static final OfAddress PSTORAGE_DIAGNOSTIC_TARGET_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DIAGNOSTIC_REQUEST* PSTORAGE_DIAGNOSTIC_REQUEST;
     * }
     */
    public static final OfAddress PSTORAGE_DIAGNOSTIC_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DIAGNOSTIC_DATA* PSTORAGE_DIAGNOSTIC_DATA;
     * }
     */
    public static final OfAddress PSTORAGE_DIAGNOSTIC_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PHYSICAL_ELEMENT_STATUS_REQUEST* PPHYSICAL_ELEMENT_STATUS_REQUEST;
     * }
     */
    public static final OfAddress PPHYSICAL_ELEMENT_STATUS_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PHYSICAL_ELEMENT_STATUS_DESCRIPTOR* PPHYSICAL_ELEMENT_STATUS_DESCRIPTOR;
     * }
     */
    public static final OfAddress PPHYSICAL_ELEMENT_STATUS_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PHYSICAL_ELEMENT_STATUS* PPHYSICAL_ELEMENT_STATUS;
     * }
     */
    public static final OfAddress PPHYSICAL_ELEMENT_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REMOVE_ELEMENT_AND_TRUNCATE_REQUEST* PREMOVE_ELEMENT_AND_TRUNCATE_REQUEST;
     * }
     */
    public static final OfAddress PREMOVE_ELEMENT_AND_TRUNCATE_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceInternalStatusDataRequestTypeUndefined = 0;
     * }
     */
    public static int DeviceInternalStatusDataRequestTypeUndefined() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceCurrentInternalStatusDataHeader = 1;
     * }
     */
    public static int DeviceCurrentInternalStatusDataHeader() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceCurrentInternalStatusData = 2;
     * }
     */
    public static int DeviceCurrentInternalStatusData() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceSavedInternalStatusDataHeader = 3;
     * }
     */
    public static int DeviceSavedInternalStatusDataHeader() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE.DeviceSavedInternalStatusData = 4;
     * }
     */
    public static int DeviceSavedInternalStatusData() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _DEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE* PDEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE;
     * }
     */
    public static final OfAddress PDEVICE_INTERNAL_STATUS_DATA_REQUEST_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSetUndefined = 0;
     * }
     */
    public static int DeviceStatusDataSetUndefined() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet1 = 1;
     * }
     */
    public static int DeviceStatusDataSet1() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet2 = 2;
     * }
     */
    public static int DeviceStatusDataSet2() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet3 = 3;
     * }
     */
    public static int DeviceStatusDataSet3() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSet4 = 4;
     * }
     */
    public static int DeviceStatusDataSet4() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _DEVICE_INTERNAL_STATUS_DATA_SET.DeviceStatusDataSetMax = 5;
     * }
     */
    public static int DeviceStatusDataSetMax() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * typedef enum _DEVICE_INTERNAL_STATUS_DATA_SET* PDEVICE_INTERNAL_STATUS_DATA_SET;
     * }
     */
    public static final OfAddress PDEVICE_INTERNAL_STATUS_DATA_SET = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GET_DEVICE_INTERNAL_STATUS_DATA_REQUEST* PGET_DEVICE_INTERNAL_STATUS_DATA_REQUEST;
     * }
     */
    public static final OfAddress PGET_DEVICE_INTERNAL_STATUS_DATA_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICE_INTERNAL_STATUS_DATA* PDEVICE_INTERNAL_STATUS_DATA;
     * }
     */
    public static final OfAddress PDEVICE_INTERNAL_STATUS_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_SANITIZE_METHOD.StorageSanitizeMethodDefault = 0;
     * }
     */
    public static int StorageSanitizeMethodDefault() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_SANITIZE_METHOD.StorageSanitizeMethodBlockErase = 1;
     * }
     */
    public static int StorageSanitizeMethodBlockErase() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_SANITIZE_METHOD.StorageSanitizeMethodCryptoErase = 2;
     * }
     */
    public static int StorageSanitizeMethodCryptoErase() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_SANITIZE_METHOD* PSTORAGE_SANITIZE_METHOD;
     * }
     */
    public static final OfAddress PSTORAGE_SANITIZE_METHOD = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_REINITIALIZE_MEDIA* PSTORAGE_REINITIALIZE_MEDIA;
     * }
     */
    public static final OfAddress PSTORAGE_REINITIALIZE_MEDIA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA* PSTORAGE_MEDIA_SERIAL_NUMBER_DATA;
     * }
     */
    public static final OfAddress PSTORAGE_MEDIA_SERIAL_NUMBER_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_READ_CAPACITY* PSTORAGE_READ_CAPACITY;
     * }
     */
    public static final OfAddress PSTORAGE_READ_CAPACITY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeUnknown = 0;
     * }
     */
    public static int WriteCacheTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeNone = 1;
     * }
     */
    public static int WriteCacheTypeNone() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeWriteBack = 2;
     * }
     */
    public static int WriteCacheTypeWriteBack() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_TYPE.WriteCacheTypeWriteThrough = 3;
     * }
     */
    public static int WriteCacheTypeWriteThrough() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_ENABLE.WriteCacheEnableUnknown = 0;
     * }
     */
    public static int WriteCacheEnableUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_ENABLE.WriteCacheDisabled = 1;
     * }
     */
    public static int WriteCacheDisabled() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_ENABLE.WriteCacheEnabled = 2;
     * }
     */
    public static int WriteCacheEnabled() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_CHANGE.WriteCacheChangeUnknown = 0;
     * }
     */
    public static int WriteCacheChangeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_CHANGE.WriteCacheNotChangeable = 1;
     * }
     */
    public static int WriteCacheNotChangeable() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _WRITE_CACHE_CHANGE.WriteCacheChangeable = 2;
     * }
     */
    public static int WriteCacheChangeable() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _WRITE_THROUGH.WriteThroughUnknown = 0;
     * }
     */
    public static int WriteThroughUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _WRITE_THROUGH.WriteThroughNotSupported = 1;
     * }
     */
    public static int WriteThroughNotSupported() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _WRITE_THROUGH.WriteThroughSupported = 2;
     * }
     */
    public static int WriteThroughSupported() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef struct _STORAGE_WRITE_CACHE_PROPERTY* PSTORAGE_WRITE_CACHE_PROPERTY;
     * }
     */
    public static final OfAddress PSTORAGE_WRITE_CACHE_PROPERTY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PERSISTENT_RESERVE_COMMAND* PPERSISTENT_RESERVE_COMMAND;
     * }
     */
    public static final OfAddress PPERSISTENT_RESERVE_COMMAND = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _DEVICEDUMP_COLLECTION_TYPE.TCCollectionBugCheck = 1;
     * }
     */
    public static int TCCollectionBugCheck() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _DEVICEDUMP_COLLECTION_TYPE.TCCollectionApplicationRequested = 2;
     * }
     */
    public static int TCCollectionApplicationRequested() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _DEVICEDUMP_COLLECTION_TYPE.TCCollectionDeviceRequested = 3;
     * }
     */
    public static int TCCollectionDeviceRequested() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _DEVICEDUMP_COLLECTION_TYPE* PDEVICEDUMP_COLLECTION_TYPE;
     * }
     */
    public static final OfAddress PDEVICEDUMP_COLLECTION_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_SUBSECTION_POINTER* PDEVICEDUMP_SUBSECTION_POINTER;
     * }
     */
    public static final OfAddress PDEVICEDUMP_SUBSECTION_POINTER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_STRUCTURE_VERSION* PDEVICEDUMP_STRUCTURE_VERSION;
     * }
     */
    public static final OfAddress PDEVICEDUMP_STRUCTURE_VERSION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_SECTION_HEADER* PDEVICEDUMP_SECTION_HEADER;
     * }
     */
    public static final OfAddress PDEVICEDUMP_SECTION_HEADER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GP_LOG_PAGE_DESCRIPTOR* PGP_LOG_PAGE_DESCRIPTOR;
     * }
     */
    public static final OfAddress PGP_LOG_PAGE_DESCRIPTOR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_PUBLIC_SUBSECTION* PDEVICEDUMP_PUBLIC_SUBSECTION;
     * }
     */
    public static final OfAddress PDEVICEDUMP_PUBLIC_SUBSECTION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_RESTRICTED_SUBSECTION* PDEVICEDUMP_RESTRICTED_SUBSECTION;
     * }
     */
    public static final OfAddress PDEVICEDUMP_RESTRICTED_SUBSECTION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_PRIVATE_SUBSECTION* PDEVICEDUMP_PRIVATE_SUBSECTION;
     * }
     */
    public static final OfAddress PDEVICEDUMP_PRIVATE_SUBSECTION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_STORAGEDEVICE_DATA* PDEVICEDUMP_STORAGEDEVICE_DATA;
     * }
     */
    public static final OfAddress PDEVICEDUMP_STORAGEDEVICE_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD* PDEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD;
     * }
     */
    public static final OfAddress PDEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP* PDEVICEDUMP_STORAGESTACK_PUBLIC_DUMP;
     * }
     */
    public static final OfAddress PDEVICEDUMP_STORAGESTACK_PUBLIC_DUMP = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_IDLE_POWER* PSTORAGE_IDLE_POWER;
     * }
     */
    public static final OfAddress PSTORAGE_IDLE_POWER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_POWERUP_REASON_TYPE.StoragePowerupUnknown = 0;
     * }
     */
    public static int StoragePowerupUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_POWERUP_REASON_TYPE.StoragePowerupIO = 1;
     * }
     */
    public static int StoragePowerupIO() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_POWERUP_REASON_TYPE.StoragePowerupDeviceAttention = 2;
     * }
     */
    public static int StoragePowerupDeviceAttention() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_POWERUP_REASON_TYPE* PSTORAGE_POWERUP_REASON_TYPE;
     * }
     */
    public static final OfAddress PSTORAGE_POWERUP_REASON_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_IDLE_POWERUP_REASON* PSTORAGE_IDLE_POWERUP_REASON;
     * }
     */
    public static final OfAddress PSTORAGE_IDLE_POWERUP_REASON = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_POWER_CAP_UNITS.StorageDevicePowerCapUnitsPercent = 0;
     * }
     */
    public static int StorageDevicePowerCapUnitsPercent() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_DEVICE_POWER_CAP_UNITS.StorageDevicePowerCapUnitsMilliwatts = 1;
     * }
     */
    public static int StorageDevicePowerCapUnitsMilliwatts() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_DEVICE_POWER_CAP_UNITS* PSTORAGE_DEVICE_POWER_CAP_UNITS;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_POWER_CAP_UNITS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_DEVICE_POWER_CAP* PSTORAGE_DEVICE_POWER_CAP;
     * }
     */
    public static final OfAddress PSTORAGE_DEVICE_POWER_CAP = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_RPMB_DATA_FRAME* PSTORAGE_RPMB_DATA_FRAME;
     * }
     */
    public static final OfAddress PSTORAGE_RPMB_DATA_FRAME = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbProgramAuthKey = 1;
     * }
     */
    public static int StorRpmbProgramAuthKey() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbQueryWriteCounter = 2;
     * }
     */
    public static int StorRpmbQueryWriteCounter() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedWrite = 3;
     * }
     */
    public static int StorRpmbAuthenticatedWrite() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedRead = 4;
     * }
     */
    public static int StorRpmbAuthenticatedRead() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbReadResultRequest = 5;
     * }
     */
    public static int StorRpmbReadResultRequest() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedDeviceConfigWrite = 6;
     * }
     */
    public static int StorRpmbAuthenticatedDeviceConfigWrite() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RPMB_COMMAND_TYPE.StorRpmbAuthenticatedDeviceConfigRead = 7;
     * }
     */
    public static int StorRpmbAuthenticatedDeviceConfigRead() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_RPMB_COMMAND_TYPE* PSTORAGE_RPMB_COMMAND_TYPE;
     * }
     */
    public static final OfAddress PSTORAGE_RPMB_COMMAND_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_EVENT_NOTIFICATION* PSTORAGE_EVENT_NOTIFICATION;
     * }
     */
    public static final OfAddress PSTORAGE_EVENT_NOTIFICATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeUnknown = 0;
     * }
     */
    public static int StorageCounterTypeUnknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeTemperatureCelsius = 1;
     * }
     */
    public static int StorageCounterTypeTemperatureCelsius() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeTemperatureCelsiusMax = 2;
     * }
     */
    public static int StorageCounterTypeTemperatureCelsiusMax() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadErrorsTotal = 3;
     * }
     */
    public static int StorageCounterTypeReadErrorsTotal() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadErrorsCorrected = 4;
     * }
     */
    public static int StorageCounterTypeReadErrorsCorrected() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadErrorsUncorrected = 5;
     * }
     */
    public static int StorageCounterTypeReadErrorsUncorrected() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteErrorsTotal = 6;
     * }
     */
    public static int StorageCounterTypeWriteErrorsTotal() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteErrorsCorrected = 7;
     * }
     */
    public static int StorageCounterTypeWriteErrorsCorrected() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteErrorsUncorrected = 8;
     * }
     */
    public static int StorageCounterTypeWriteErrorsUncorrected() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeManufactureDate = 9;
     * }
     */
    public static int StorageCounterTypeManufactureDate() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeStartStopCycleCount = 10;
     * }
     */
    public static int StorageCounterTypeStartStopCycleCount() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeStartStopCycleCountMax = 11;
     * }
     */
    public static int StorageCounterTypeStartStopCycleCountMax() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeLoadUnloadCycleCount = 12;
     * }
     */
    public static int StorageCounterTypeLoadUnloadCycleCount() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeLoadUnloadCycleCountMax = 13;
     * }
     */
    public static int StorageCounterTypeLoadUnloadCycleCountMax() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWearPercentage = 14;
     * }
     */
    public static int StorageCounterTypeWearPercentage() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWearPercentageWarning = 15;
     * }
     */
    public static int StorageCounterTypeWearPercentageWarning() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWearPercentageMax = 16;
     * }
     */
    public static int StorageCounterTypeWearPercentageMax() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypePowerOnHours = 17;
     * }
     */
    public static int StorageCounterTypePowerOnHours() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeReadLatency100NSMax = 18;
     * }
     */
    public static int StorageCounterTypeReadLatency100NSMax() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeWriteLatency100NSMax = 19;
     * }
     */
    public static int StorageCounterTypeWriteLatency100NSMax() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeFlushLatency100NSMax = 20;
     * }
     */
    public static int StorageCounterTypeFlushLatency100NSMax() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_COUNTER_TYPE.StorageCounterTypeMax = 21;
     * }
     */
    public static int StorageCounterTypeMax() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_COUNTER_TYPE* PSTORAGE_COUNTER_TYPE;
     * }
     */
    public static final OfAddress PSTORAGE_COUNTER_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_COUNTER* PSTORAGE_COUNTER;
     * }
     */
    public static final OfAddress PSTORAGE_COUNTER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_COUNTERS* PSTORAGE_COUNTERS;
     * }
     */
    public static final OfAddress PSTORAGE_COUNTERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_FIRMWARE_INFO_QUERY* PSTORAGE_HW_FIRMWARE_INFO_QUERY;
     * }
     */
    public static final OfAddress PSTORAGE_HW_FIRMWARE_INFO_QUERY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_FIRMWARE_SLOT_INFO* PSTORAGE_HW_FIRMWARE_SLOT_INFO;
     * }
     */
    public static final OfAddress PSTORAGE_HW_FIRMWARE_SLOT_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_FIRMWARE_INFO* PSTORAGE_HW_FIRMWARE_INFO;
     * }
     */
    public static final OfAddress PSTORAGE_HW_FIRMWARE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_FIRMWARE_DOWNLOAD* PSTORAGE_HW_FIRMWARE_DOWNLOAD;
     * }
     */
    public static final OfAddress PSTORAGE_HW_FIRMWARE_DOWNLOAD = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_FIRMWARE_DOWNLOAD_V2* PSTORAGE_HW_FIRMWARE_DOWNLOAD_V2;
     * }
     */
    public static final OfAddress PSTORAGE_HW_FIRMWARE_DOWNLOAD_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_HW_FIRMWARE_ACTIVATE* PSTORAGE_HW_FIRMWARE_ACTIVATE;
     * }
     */
    public static final OfAddress PSTORAGE_HW_FIRMWARE_ACTIVATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_PROTOCOL_COMMAND* PSTORAGE_PROTOCOL_COMMAND;
     * }
     */
    public static final OfAddress PSTORAGE_PROTOCOL_COMMAND = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_ATTRIBUTE_MGMT_ACTION.StorAttributeMgmt_ClearAttribute = 0;
     * }
     */
    public static int StorAttributeMgmt_ClearAttribute() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ATTRIBUTE_MGMT_ACTION.StorAttributeMgmt_SetAttribute = 1;
     * }
     */
    public static int StorAttributeMgmt_SetAttribute() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_ATTRIBUTE_MGMT_ACTION.StorAttributeMgmt_ResetAttribute = 2;
     * }
     */
    public static int StorAttributeMgmt_ResetAttribute() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_ATTRIBUTE_MGMT_ACTION* PSTORAGE_ATTRIBUTE_MGMT_ACTION;
     * }
     */
    public static final OfAddress PSTORAGE_ATTRIBUTE_MGMT_ACTION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_ATTRIBUTE_MGMT* PSTORAGE_ATTRIBUTE_MGMT;
     * }
     */
    public static final OfAddress PSTORAGE_ATTRIBUTE_MGMT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_HEALTH_NOTIFICATION_DATA* PSCM_PD_HEALTH_NOTIFICATION_DATA;
     * }
     */
    public static final OfAddress PSCM_PD_HEALTH_NOTIFICATION_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_LOGICAL_DEVICE_INSTANCE* PSCM_LOGICAL_DEVICE_INSTANCE;
     * }
     */
    public static final OfAddress PSCM_LOGICAL_DEVICE_INSTANCE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_LOGICAL_DEVICES* PSCM_LOGICAL_DEVICES;
     * }
     */
    public static final OfAddress PSCM_LOGICAL_DEVICES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PHYSICAL_DEVICE_INSTANCE* PSCM_PHYSICAL_DEVICE_INSTANCE;
     * }
     */
    public static final OfAddress PSCM_PHYSICAL_DEVICE_INSTANCE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PHYSICAL_DEVICES* PSCM_PHYSICAL_DEVICES;
     * }
     */
    public static final OfAddress PSCM_PHYSICAL_DEVICES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_REGION_FLAG.ScmRegionFlagNone = 0;
     * }
     */
    public static int ScmRegionFlagNone() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_REGION_FLAG.ScmRegionFlagLabel = 1;
     * }
     */
    public static int ScmRegionFlagLabel() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_REGION_FLAG* PSCM_REGION_FLAG;
     * }
     */
    public static final OfAddress PSCM_REGION_FLAG = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_REGION* PSCM_REGION;
     * }
     */
    public static final OfAddress PSCM_REGION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_REGIONS* PSCM_REGIONS;
     * }
     */
    public static final OfAddress PSCM_REGIONS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_BUS_QUERY_TYPE.ScmBusQuery_Descriptor = 0;
     * }
     */
    public static int ScmBusQuery_Descriptor() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_QUERY_TYPE.ScmBusQuery_IsSupported = 1;
     * }
     */
    public static int ScmBusQuery_IsSupported() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_QUERY_TYPE.ScmBusQuery_Max = 2;
     * }
     */
    public static int ScmBusQuery_Max() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_BUS_QUERY_TYPE* PSCM_BUS_QUERY_TYPE;
     * }
     */
    public static final OfAddress PSCM_BUS_QUERY_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_BUS_SET_TYPE.ScmBusSet_Descriptor = 0;
     * }
     */
    public static int ScmBusSet_Descriptor() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_SET_TYPE.ScmBusSet_IsSupported = 1;
     * }
     */
    public static int ScmBusSet_IsSupported() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_SET_TYPE.ScmBusSet_Max = 2;
     * }
     */
    public static int ScmBusSet_Max() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_BUS_SET_TYPE* PSCM_BUS_SET_TYPE;
     * }
     */
    public static final OfAddress PSCM_BUS_SET_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_RuntimeFwActivationInfo = 0;
     * }
     */
    public static int ScmBusProperty_RuntimeFwActivationInfo() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_DedicatedMemoryInfo = 1;
     * }
     */
    public static int ScmBusProperty_DedicatedMemoryInfo() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_DedicatedMemoryState = 2;
     * }
     */
    public static int ScmBusProperty_DedicatedMemoryState() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_PROPERTY_ID.ScmBusProperty_Max = 3;
     * }
     */
    public static int ScmBusProperty_Max() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_BUS_PROPERTY_ID* PSCM_BUS_PROPERTY_ID;
     * }
     */
    public static final OfAddress PSCM_BUS_PROPERTY_ID = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_BUS_PROPERTY_QUERY* PSCM_BUS_PROPERTY_QUERY;
     * }
     */
    public static final OfAddress PSCM_BUS_PROPERTY_QUERY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE.ScmBusFirmwareActivationState_Idle = 0;
     * }
     */
    public static int ScmBusFirmwareActivationState_Idle() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE.ScmBusFirmwareActivationState_Armed = 1;
     * }
     */
    public static int ScmBusFirmwareActivationState_Armed() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE.ScmBusFirmwareActivationState_Busy = 2;
     * }
     */
    public static int ScmBusFirmwareActivationState_Busy() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_BUS_FIRMWARE_ACTIVATION_STATE* PSCM_BUS_FIRMWARE_ACTIVATION_STATE;
     * }
     */
    public static final OfAddress PSCM_BUS_FIRMWARE_ACTIVATION_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_BUS_RUNTIME_FW_ACTIVATION_INFO* PSCM_BUS_RUNTIME_FW_ACTIVATION_INFO;
     * }
     */
    public static final OfAddress PSCM_BUS_RUNTIME_FW_ACTIVATION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_BUS_DEDICATED_MEMORY_DEVICE_INFO* PSCM_BUS_DEDICATED_MEMORY_DEVICE_INFO;
     * }
     */
    public static final OfAddress PSCM_BUS_DEDICATED_MEMORY_DEVICE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_BUS_DEDICATED_MEMORY_DEVICES_INFO* PSCM_BUS_DEDICATED_MEMORY_DEVICES_INFO;
     * }
     */
    public static final OfAddress PSCM_BUS_DEDICATED_MEMORY_DEVICES_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_BUS_PROPERTY_SET* PSCM_BUS_PROPERTY_SET;
     * }
     */
    public static final OfAddress PSCM_BUS_PROPERTY_SET = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_BUS_DEDICATED_MEMORY_STATE* PSCM_BUS_DEDICATED_MEMORY_STATE;
     * }
     */
    public static final OfAddress PSCM_BUS_DEDICATED_MEMORY_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_INTERLEAVED_PD_INFO* PSCM_INTERLEAVED_PD_INFO;
     * }
     */
    public static final OfAddress PSCM_INTERLEAVED_PD_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_LD_INTERLEAVE_SET_INFO* PSCM_LD_INTERLEAVE_SET_INFO;
     * }
     */
    public static final OfAddress PSCM_LD_INTERLEAVE_SET_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_QUERY_TYPE.ScmPhysicalDeviceQuery_Descriptor = 0;
     * }
     */
    public static int ScmPhysicalDeviceQuery_Descriptor() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_QUERY_TYPE.ScmPhysicalDeviceQuery_IsSupported = 1;
     * }
     */
    public static int ScmPhysicalDeviceQuery_IsSupported() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_QUERY_TYPE.ScmPhysicalDeviceQuery_Max = 2;
     * }
     */
    public static int ScmPhysicalDeviceQuery_Max() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_QUERY_TYPE* PSCM_PD_QUERY_TYPE;
     * }
     */
    public static final OfAddress PSCM_PD_QUERY_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_SET_TYPE.ScmPhysicalDeviceSet_Descriptor = 0;
     * }
     */
    public static int ScmPhysicalDeviceSet_Descriptor() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_SET_TYPE.ScmPhysicalDeviceSet_IsSupported = 1;
     * }
     */
    public static int ScmPhysicalDeviceSet_IsSupported() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_SET_TYPE.ScmPhysicalDeviceSet_Max = 2;
     * }
     */
    public static int ScmPhysicalDeviceSet_Max() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_SET_TYPE* PSCM_PD_SET_TYPE;
     * }
     */
    public static final OfAddress PSCM_PD_SET_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_DeviceInfo = 0;
     * }
     */
    public static int ScmPhysicalDeviceProperty_DeviceInfo() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_ManagementStatus = 1;
     * }
     */
    public static int ScmPhysicalDeviceProperty_ManagementStatus() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_FirmwareInfo = 2;
     * }
     */
    public static int ScmPhysicalDeviceProperty_FirmwareInfo() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_LocationString = 3;
     * }
     */
    public static int ScmPhysicalDeviceProperty_LocationString() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_DeviceSpecificInfo = 4;
     * }
     */
    public static int ScmPhysicalDeviceProperty_DeviceSpecificInfo() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_DeviceHandle = 5;
     * }
     */
    public static int ScmPhysicalDeviceProperty_DeviceHandle() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_FruIdString = 6;
     * }
     */
    public static int ScmPhysicalDeviceProperty_FruIdString() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_RuntimeFwActivationInfo = 7;
     * }
     */
    public static int ScmPhysicalDeviceProperty_RuntimeFwActivationInfo() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_RuntimeFwActivationArmState = 8;
     * }
     */
    public static int ScmPhysicalDeviceProperty_RuntimeFwActivationArmState() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_PROPERTY_ID.ScmPhysicalDeviceProperty_Max = 9;
     * }
     */
    public static int ScmPhysicalDeviceProperty_Max() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_PROPERTY_ID* PSCM_PD_PROPERTY_ID;
     * }
     */
    public static final OfAddress PSCM_PD_PROPERTY_ID = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_PROPERTY_QUERY* PSCM_PD_PROPERTY_QUERY;
     * }
     */
    public static final OfAddress PSCM_PD_PROPERTY_QUERY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_PROPERTY_SET* PSCM_PD_PROPERTY_SET;
     * }
     */
    public static final OfAddress PSCM_PD_PROPERTY_SET = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_RUNTIME_FW_ACTIVATION_ARM_STATE* PSCM_PD_RUNTIME_FW_ACTIVATION_ARM_STATE;
     * }
     */
    public static final OfAddress PSCM_PD_RUNTIME_FW_ACTIVATION_ARM_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_DESCRIPTOR_HEADER* PSCM_PD_DESCRIPTOR_HEADER;
     * }
     */
    public static final OfAddress PSCM_PD_DESCRIPTOR_HEADER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_DEVICE_HANDLE* PSCM_PD_DEVICE_HANDLE;
     * }
     */
    public static final OfAddress PSCM_PD_DEVICE_HANDLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_DEVICE_INFO* PSCM_PD_DEVICE_INFO;
     * }
     */
    public static final OfAddress PSCM_PD_DEVICE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_DEVICE_SPECIFIC_PROPERTY* PSCM_PD_DEVICE_SPECIFIC_PROPERTY;
     * }
     */
    public static final OfAddress PSCM_PD_DEVICE_SPECIFIC_PROPERTY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_DEVICE_SPECIFIC_INFO* PSCM_PD_DEVICE_SPECIFIC_INFO;
     * }
     */
    public static final OfAddress PSCM_PD_DEVICE_SPECIFIC_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_FIRMWARE_SLOT_INFO* PSCM_PD_FIRMWARE_SLOT_INFO;
     * }
     */
    public static final OfAddress PSCM_PD_FIRMWARE_SLOT_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_FIRMWARE_INFO* PSCM_PD_FIRMWARE_INFO;
     * }
     */
    public static final OfAddress PSCM_PD_FIRMWARE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Unknown = 0;
     * }
     */
    public static int ScmPhysicalDeviceHealth_Unknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Unhealthy = 1;
     * }
     */
    public static int ScmPhysicalDeviceHealth_Unhealthy() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Warning = 2;
     * }
     */
    public static int ScmPhysicalDeviceHealth_Warning() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Healthy = 3;
     * }
     */
    public static int ScmPhysicalDeviceHealth_Healthy() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_HEALTH_STATUS.ScmPhysicalDeviceHealth_Max = 4;
     * }
     */
    public static int ScmPhysicalDeviceHealth_Max() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_HEALTH_STATUS* PSCM_PD_HEALTH_STATUS;
     * }
     */
    public static final OfAddress PSCM_PD_HEALTH_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Unknown = 0;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Unknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Ok = 1;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Ok() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_PredictingFailure = 2;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_PredictingFailure() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_InService = 3;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_InService() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_HardwareError = 4;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_HardwareError() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_NotUsable = 5;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_NotUsable() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_TransientError = 6;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_TransientError() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Missing = 7;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Missing() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS.ScmPhysicalDeviceOpStatus_Max = 8;
     * }
     */
    public static int ScmPhysicalDeviceOpStatus_Max() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_OPERATIONAL_STATUS* PSCM_PD_OPERATIONAL_STATUS;
     * }
     */
    public static final OfAddress PSCM_PD_OPERATIONAL_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Unknown = 0;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Unknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Media = 1;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Media() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_ThresholdExceeded = 2;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_ThresholdExceeded() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_LostData = 3;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_LostData() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_EnergySource = 4;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_EnergySource() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Configuration = 5;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Configuration() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_DeviceController = 6;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_DeviceController() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_MediaController = 7;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_MediaController() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Component = 8;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Component() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_BackgroundOperation = 9;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_BackgroundOperation() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_InvalidFirmware = 10;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_InvalidFirmware() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_HealthCheck = 11;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_HealthCheck() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_LostDataPersistence = 12;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_LostDataPersistence() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_DisabledByPlatform = 13;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_DisabledByPlatform() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_PermanentError = 14;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_PermanentError() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_LostWritePersistence = 15;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_LostWritePersistence() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_FatalError = 16;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_FatalError() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_DataPersistenceLossImminent = 17;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_DataPersistenceLossImminent() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_WritePersistenceLossImminent = 18;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_WritePersistenceLossImminent() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock = 19;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_MediaRemainingSpareBlock() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_PerformanceDegradation = 20;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_PerformanceDegradation() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_ExcessiveTemperature = 21;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_ExcessiveTemperature() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_InternalFailure = 22;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_InternalFailure() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_OPERATIONAL_STATUS_REASON.ScmPhysicalDeviceOpReason_Max = 23;
     * }
     */
    public static int ScmPhysicalDeviceOpReason_Max() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_OPERATIONAL_STATUS_REASON* PSCM_PD_OPERATIONAL_STATUS_REASON;
     * }
     */
    public static final OfAddress PSCM_PD_OPERATIONAL_STATUS_REASON = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_MANAGEMENT_STATUS* PSCM_PD_MANAGEMENT_STATUS;
     * }
     */
    public static final OfAddress PSCM_PD_MANAGEMENT_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_LOCATION_STRING* PSCM_PD_LOCATION_STRING;
     * }
     */
    public static final OfAddress PSCM_PD_LOCATION_STRING = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_FRU_ID_STRING* PSCM_PD_FRU_ID_STRING;
     * }
     */
    public static final OfAddress PSCM_PD_FRU_ID_STRING = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_FIRMWARE_DOWNLOAD* PSCM_PD_FIRMWARE_DOWNLOAD;
     * }
     */
    public static final OfAddress PSCM_PD_FIRMWARE_DOWNLOAD = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_FIRMWARE_ACTIVATE* PSCM_PD_FIRMWARE_ACTIVATE;
     * }
     */
    public static final OfAddress PSCM_PD_FIRMWARE_ACTIVATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_None = 0;
     * }
     */
    public static int ScmPdLastFwActivationStatus_None() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_Success = 1;
     * }
     */
    public static int ScmPdLastFwActivationStatus_Success() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_FwNotFound = 2;
     * }
     */
    public static int ScmPdLastFwActivationStatus_FwNotFound() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivationStatus_ColdRebootRequired = 3;
     * }
     */
    public static int ScmPdLastFwActivationStatus_ColdRebootRequired() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_ActivationInProgress = 4;
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_ActivationInProgress() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_Retry = 5;
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_Retry() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_FwUnsupported = 6;
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_FwUnsupported() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_LAST_FW_ACTIVATION_STATUS.ScmPdLastFwActivaitonStatus_UnknownError = 7;
     * }
     */
    public static int ScmPdLastFwActivaitonStatus_UnknownError() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_LAST_FW_ACTIVATION_STATUS* PSCM_PD_LAST_FW_ACTIVATION_STATUS;
     * }
     */
    public static final OfAddress PSCM_PD_LAST_FW_ACTIVATION_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_FIRMWARE_ACTIVATION_STATE.ScmPdFirmwareActivationState_Idle = 0;
     * }
     */
    public static int ScmPdFirmwareActivationState_Idle() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_FIRMWARE_ACTIVATION_STATE.ScmPdFirmwareActivationState_Armed = 1;
     * }
     */
    public static int ScmPdFirmwareActivationState_Armed() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_FIRMWARE_ACTIVATION_STATE.ScmPdFirmwareActivationState_Busy = 2;
     * }
     */
    public static int ScmPdFirmwareActivationState_Busy() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_FIRMWARE_ACTIVATION_STATE* PSCM_PD_FIRMWARE_ACTIVATION_STATE;
     * }
     */
    public static final OfAddress PSCM_PD_FIRMWARE_ACTIVATION_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_RUNTIME_FW_ACTIVATION_INFO* PSCM_PD_RUNTIME_FW_ACTIVATION_INFO;
     * }
     */
    public static final OfAddress PSCM_PD_RUNTIME_FW_ACTIVATION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_PASSTHROUGH_INPUT* PSCM_PD_PASSTHROUGH_INPUT;
     * }
     */
    public static final OfAddress PSCM_PD_PASSTHROUGH_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_PASSTHROUGH_OUTPUT* PSCM_PD_PASSTHROUGH_OUTPUT;
     * }
     */
    public static final OfAddress PSCM_PD_PASSTHROUGH_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_PASSTHROUGH_INVDIMM_INPUT* PSCM_PD_PASSTHROUGH_INVDIMM_INPUT;
     * }
     */
    public static final OfAddress PSCM_PD_PASSTHROUGH_INVDIMM_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_PASSTHROUGH_INVDIMM_OUTPUT* PSCM_PD_PASSTHROUGH_INVDIMM_OUTPUT;
     * }
     */
    public static final OfAddress PSCM_PD_PASSTHROUGH_INVDIMM_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_REINITIALIZE_MEDIA_INPUT* PSCM_PD_REINITIALIZE_MEDIA_INPUT;
     * }
     */
    public static final OfAddress PSCM_PD_REINITIALIZE_MEDIA_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_Success = 0;
     * }
     */
    public static int ScmPhysicalDeviceReinit_Success() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_RebootNeeded = 1;
     * }
     */
    public static int ScmPhysicalDeviceReinit_RebootNeeded() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_ColdBootNeeded = 2;
     * }
     */
    public static int ScmPhysicalDeviceReinit_ColdBootNeeded() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS.ScmPhysicalDeviceReinit_Max = 3;
     * }
     */
    public static int ScmPhysicalDeviceReinit_Max() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _SCM_PD_MEDIA_REINITIALIZATION_STATUS* PSCM_PD_MEDIA_REINITIALIZATION_STATUS;
     * }
     */
    public static final OfAddress PSCM_PD_MEDIA_REINITIALIZATION_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCM_PD_REINITIALIZE_MEDIA_OUTPUT* PSCM_PD_REINITIALIZE_MEDIA_OUTPUT;
     * }
     */
    public static final OfAddress PSCM_PD_REINITIALIZE_MEDIA_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.Unknown = 0;
     * }
     */
    public static int Unknown() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_1Pt2_512 = 1;
     * }
     */
    public static int F5_1Pt2_512() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_1Pt44_512 = 2;
     * }
     */
    public static int F3_1Pt44_512() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_2Pt88_512 = 3;
     * }
     */
    public static int F3_2Pt88_512() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_20Pt8_512 = 4;
     * }
     */
    public static int F3_20Pt8_512() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_720_512 = 5;
     * }
     */
    public static int F3_720_512() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_360_512 = 6;
     * }
     */
    public static int F5_360_512() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_320_512 = 7;
     * }
     */
    public static int F5_320_512() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_320_1024 = 8;
     * }
     */
    public static int F5_320_1024() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_180_512 = 9;
     * }
     */
    public static int F5_180_512() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_160_512 = 10;
     * }
     */
    public static int F5_160_512() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.RemovableMedia = 11;
     * }
     */
    public static int RemovableMedia() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.FixedMedia = 12;
     * }
     */
    public static int FixedMedia() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_120M_512 = 13;
     * }
     */
    public static int F3_120M_512() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_640_512 = 14;
     * }
     */
    public static int F3_640_512() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_640_512 = 15;
     * }
     */
    public static int F5_640_512() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_720_512 = 16;
     * }
     */
    public static int F5_720_512() {
        return (int)16L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_1Pt2_512 = 17;
     * }
     */
    public static int F3_1Pt2_512() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_1Pt23_1024 = 18;
     * }
     */
    public static int F3_1Pt23_1024() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F5_1Pt23_1024 = 19;
     * }
     */
    public static int F5_1Pt23_1024() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_128Mb_512 = 20;
     * }
     */
    public static int F3_128Mb_512() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_230Mb_512 = 21;
     * }
     */
    public static int F3_230Mb_512() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F8_256_128 = 22;
     * }
     */
    public static int F8_256_128() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_200Mb_512 = 23;
     * }
     */
    public static int F3_200Mb_512() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_240M_512 = 24;
     * }
     */
    public static int F3_240M_512() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum _MEDIA_TYPE.F3_32M_512 = 25;
     * }
     */
    public static int F3_32M_512() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * typedef enum _MEDIA_TYPE* PMEDIA_TYPE;
     * }
     */
    public static final OfAddress PMEDIA_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FORMAT_PARAMETERS* PFORMAT_PARAMETERS;
     * }
     */
    public static final OfAddress PFORMAT_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short BAD_TRACK_NUMBER;
     * }
     */
    public static final OfShort BAD_TRACK_NUMBER = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short* PBAD_TRACK_NUMBER;
     * }
     */
    public static final OfAddress PBAD_TRACK_NUMBER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FORMAT_EX_PARAMETERS* PFORMAT_EX_PARAMETERS;
     * }
     */
    public static final OfAddress PFORMAT_EX_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_GEOMETRY* PDISK_GEOMETRY;
     * }
     */
    public static final OfAddress PDISK_GEOMETRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PARTITION_INFORMATION* PPARTITION_INFORMATION;
     * }
     */
    public static final OfAddress PPARTITION_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SET_PARTITION_INFORMATION* PSET_PARTITION_INFORMATION;
     * }
     */
    public static final OfAddress PSET_PARTITION_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DRIVE_LAYOUT_INFORMATION* PDRIVE_LAYOUT_INFORMATION;
     * }
     */
    public static final OfAddress PDRIVE_LAYOUT_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VERIFY_INFORMATION* PVERIFY_INFORMATION;
     * }
     */
    public static final OfAddress PVERIFY_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REASSIGN_BLOCKS* PREASSIGN_BLOCKS;
     * }
     */
    public static final OfAddress PREASSIGN_BLOCKS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REASSIGN_BLOCKS_EX* PREASSIGN_BLOCKS_EX;
     * }
     */
    public static final OfAddress PREASSIGN_BLOCKS_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _PARTITION_STYLE.PARTITION_STYLE_MBR = 0;
     * }
     */
    public static int PARTITION_STYLE_MBR() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _PARTITION_STYLE.PARTITION_STYLE_GPT = 1;
     * }
     */
    public static int PARTITION_STYLE_GPT() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _PARTITION_STYLE.PARTITION_STYLE_RAW = 2;
     * }
     */
    public static int PARTITION_STYLE_RAW() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef struct _PARTITION_INFORMATION_GPT* PPARTITION_INFORMATION_GPT;
     * }
     */
    public static final OfAddress PPARTITION_INFORMATION_GPT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PARTITION_INFORMATION_MBR* PPARTITION_INFORMATION_MBR;
     * }
     */
    public static final OfAddress PPARTITION_INFORMATION_MBR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SET_PARTITION_INFORMATION_EX* PSET_PARTITION_INFORMATION_EX;
     * }
     */
    public static final OfAddress PSET_PARTITION_INFORMATION_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CREATE_DISK_GPT* PCREATE_DISK_GPT;
     * }
     */
    public static final OfAddress PCREATE_DISK_GPT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CREATE_DISK_MBR* PCREATE_DISK_MBR;
     * }
     */
    public static final OfAddress PCREATE_DISK_MBR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CREATE_DISK* PCREATE_DISK;
     * }
     */
    public static final OfAddress PCREATE_DISK = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GET_LENGTH_INFORMATION* PGET_LENGTH_INFORMATION;
     * }
     */
    public static final OfAddress PGET_LENGTH_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PARTITION_INFORMATION_EX* PPARTITION_INFORMATION_EX;
     * }
     */
    public static final OfAddress PPARTITION_INFORMATION_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DRIVE_LAYOUT_INFORMATION_GPT* PDRIVE_LAYOUT_INFORMATION_GPT;
     * }
     */
    public static final OfAddress PDRIVE_LAYOUT_INFORMATION_GPT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DRIVE_LAYOUT_INFORMATION_MBR* PDRIVE_LAYOUT_INFORMATION_MBR;
     * }
     */
    public static final OfAddress PDRIVE_LAYOUT_INFORMATION_MBR = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DRIVE_LAYOUT_INFORMATION_EX* PDRIVE_LAYOUT_INFORMATION_EX;
     * }
     */
    public static final OfAddress PDRIVE_LAYOUT_INFORMATION_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _DETECTION_TYPE.DetectNone = 0;
     * }
     */
    public static int DetectNone() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _DETECTION_TYPE.DetectInt13 = 1;
     * }
     */
    public static int DetectInt13() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _DETECTION_TYPE.DetectExInt13 = 2;
     * }
     */
    public static int DetectExInt13() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef struct _DISK_INT13_INFO* PDISK_INT13_INFO;
     * }
     */
    public static final OfAddress PDISK_INT13_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_EX_INT13_INFO* PDISK_EX_INT13_INFO;
     * }
     */
    public static final OfAddress PDISK_EX_INT13_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_DETECTION_INFO* PDISK_DETECTION_INFO;
     * }
     */
    public static final OfAddress PDISK_DETECTION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_PARTITION_INFO* PDISK_PARTITION_INFO;
     * }
     */
    public static final OfAddress PDISK_PARTITION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_GEOMETRY_EX* PDISK_GEOMETRY_EX;
     * }
     */
    public static final OfAddress PDISK_GEOMETRY_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_CONTROLLER_NUMBER* PDISK_CONTROLLER_NUMBER;
     * }
     */
    public static final OfAddress PDISK_CONTROLLER_NUMBER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum .EqualPriority = 0;
     * }
     */
    public static int EqualPriority() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum .KeepPrefetchedData = 1;
     * }
     */
    public static int KeepPrefetchedData() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .KeepReadData = 2;
     * }
     */
    public static int KeepReadData() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef struct _DISK_CACHE_INFORMATION* PDISK_CACHE_INFORMATION;
     * }
     */
    public static final OfAddress PDISK_CACHE_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_GROW_PARTITION* PDISK_GROW_PARTITION;
     * }
     */
    public static final OfAddress PDISK_GROW_PARTITION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _HISTOGRAM_BUCKET* PHISTOGRAM_BUCKET;
     * }
     */
    public static final OfAddress PHISTOGRAM_BUCKET = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_HISTOGRAM* PDISK_HISTOGRAM;
     * }
     */
    public static final OfAddress PDISK_HISTOGRAM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_PERFORMANCE* PDISK_PERFORMANCE;
     * }
     */
    public static final OfAddress PDISK_PERFORMANCE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_RECORD* PDISK_RECORD;
     * }
     */
    public static final OfAddress PDISK_RECORD = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_LOGGING* PDISK_LOGGING;
     * }
     */
    public static final OfAddress PDISK_LOGGING = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _BIN_TYPES.RequestSize = 0;
     * }
     */
    public static int RequestSize() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _BIN_TYPES.RequestLocation = 1;
     * }
     */
    public static int RequestLocation() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef struct _BIN_RANGE* PBIN_RANGE;
     * }
     */
    public static final OfAddress PBIN_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PERF_BIN* PPERF_BIN;
     * }
     */
    public static final OfAddress PPERF_BIN = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _BIN_COUNT* PBIN_COUNT;
     * }
     */
    public static final OfAddress PBIN_COUNT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _BIN_RESULTS* PBIN_RESULTS;
     * }
     */
    public static final OfAddress PBIN_RESULTS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GETVERSIONINPARAMS* PGETVERSIONINPARAMS;
     * }
     */
    public static final OfAddress PGETVERSIONINPARAMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GETVERSIONINPARAMS* LPGETVERSIONINPARAMS;
     * }
     */
    public static final OfAddress LPGETVERSIONINPARAMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _IDEREGS* PIDEREGS;
     * }
     */
    public static final OfAddress PIDEREGS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _IDEREGS* LPIDEREGS;
     * }
     */
    public static final OfAddress LPIDEREGS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SENDCMDINPARAMS* PSENDCMDINPARAMS;
     * }
     */
    public static final OfAddress PSENDCMDINPARAMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SENDCMDINPARAMS* LPSENDCMDINPARAMS;
     * }
     */
    public static final OfAddress LPSENDCMDINPARAMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DRIVERSTATUS* PDRIVERSTATUS;
     * }
     */
    public static final OfAddress PDRIVERSTATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DRIVERSTATUS* LPDRIVERSTATUS;
     * }
     */
    public static final OfAddress LPDRIVERSTATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SENDCMDOUTPARAMS* PSENDCMDOUTPARAMS;
     * }
     */
    public static final OfAddress PSENDCMDOUTPARAMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SENDCMDOUTPARAMS* LPSENDCMDOUTPARAMS;
     * }
     */
    public static final OfAddress LPSENDCMDOUTPARAMS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GET_DISK_ATTRIBUTES* PGET_DISK_ATTRIBUTES;
     * }
     */
    public static final OfAddress PGET_DISK_ATTRIBUTES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SET_DISK_ATTRIBUTES* PSET_DISK_ATTRIBUTES;
     * }
     */
    public static final OfAddress PSET_DISK_ATTRIBUTES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.AllElements = 0;
     * }
     */
    public static int AllElements() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.ChangerTransport = 1;
     * }
     */
    public static int ChangerTransport() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.ChangerSlot = 2;
     * }
     */
    public static int ChangerSlot() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.ChangerIEPort = 3;
     * }
     */
    public static int ChangerIEPort() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.ChangerDrive = 4;
     * }
     */
    public static int ChangerDrive() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.ChangerDoor = 5;
     * }
     */
    public static int ChangerDoor() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.ChangerKeypad = 6;
     * }
     */
    public static int ChangerKeypad() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _ELEMENT_TYPE.ChangerMaxElement = 7;
     * }
     */
    public static int ChangerMaxElement() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * typedef enum _ELEMENT_TYPE* PELEMENT_TYPE;
     * }
     */
    public static final OfAddress PELEMENT_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_ELEMENT* PCHANGER_ELEMENT;
     * }
     */
    public static final OfAddress PCHANGER_ELEMENT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_ELEMENT_LIST* PCHANGER_ELEMENT_LIST;
     * }
     */
    public static final OfAddress PCHANGER_ELEMENT_LIST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GET_CHANGER_PARAMETERS* PGET_CHANGER_PARAMETERS;
     * }
     */
    public static final OfAddress PGET_CHANGER_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_PRODUCT_DATA* PCHANGER_PRODUCT_DATA;
     * }
     */
    public static final OfAddress PCHANGER_PRODUCT_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_SET_ACCESS* PCHANGER_SET_ACCESS;
     * }
     */
    public static final OfAddress PCHANGER_SET_ACCESS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_READ_ELEMENT_STATUS* PCHANGER_READ_ELEMENT_STATUS;
     * }
     */
    public static final OfAddress PCHANGER_READ_ELEMENT_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_ELEMENT_STATUS* PCHANGER_ELEMENT_STATUS;
     * }
     */
    public static final OfAddress PCHANGER_ELEMENT_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_ELEMENT_STATUS_EX* PCHANGER_ELEMENT_STATUS_EX;
     * }
     */
    public static final OfAddress PCHANGER_ELEMENT_STATUS_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS* PCHANGER_INITIALIZE_ELEMENT_STATUS;
     * }
     */
    public static final OfAddress PCHANGER_INITIALIZE_ELEMENT_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_SET_POSITION* PCHANGER_SET_POSITION;
     * }
     */
    public static final OfAddress PCHANGER_SET_POSITION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_EXCHANGE_MEDIUM* PCHANGER_EXCHANGE_MEDIUM;
     * }
     */
    public static final OfAddress PCHANGER_EXCHANGE_MEDIUM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_MOVE_MEDIUM* PCHANGER_MOVE_MEDIUM;
     * }
     */
    public static final OfAddress PCHANGER_MOVE_MEDIUM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION* PCHANGER_SEND_VOLUME_TAG_INFORMATION;
     * }
     */
    public static final OfAddress PCHANGER_SEND_VOLUME_TAG_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _READ_ELEMENT_ADDRESS_INFO* PREAD_ELEMENT_ADDRESS_INFO;
     * }
     */
    public static final OfAddress PREAD_ELEMENT_ADDRESS_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemNone = 0;
     * }
     */
    public static int DeviceProblemNone() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemHardware = 1;
     * }
     */
    public static int DeviceProblemHardware() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCHMError = 2;
     * }
     */
    public static int DeviceProblemCHMError() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemDoorOpen = 3;
     * }
     */
    public static int DeviceProblemDoorOpen() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCalibrationError = 4;
     * }
     */
    public static int DeviceProblemCalibrationError() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemTargetFailure = 5;
     * }
     */
    public static int DeviceProblemTargetFailure() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCHMMoveError = 6;
     * }
     */
    public static int DeviceProblemCHMMoveError() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCHMZeroError = 7;
     * }
     */
    public static int DeviceProblemCHMZeroError() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCartridgeInsertError = 8;
     * }
     */
    public static int DeviceProblemCartridgeInsertError() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemPositionError = 9;
     * }
     */
    public static int DeviceProblemPositionError() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemSensorError = 10;
     * }
     */
    public static int DeviceProblemSensorError() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemCartridgeEjectError = 11;
     * }
     */
    public static int DeviceProblemCartridgeEjectError() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemGripperError = 12;
     * }
     */
    public static int DeviceProblemGripperError() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * enum _CHANGER_DEVICE_PROBLEM_TYPE.DeviceProblemDriveError = 13;
     * }
     */
    public static int DeviceProblemDriveError() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * typedef enum _CHANGER_DEVICE_PROBLEM_TYPE* PCHANGER_DEVICE_PROBLEM_TYPE;
     * }
     */
    public static final OfAddress PCHANGER_DEVICE_PROBLEM_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PATHNAME_BUFFER* PPATHNAME_BUFFER;
     * }
     */
    public static final OfAddress PPATHNAME_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER* PFSCTL_QUERY_FAT_BPB_BUFFER;
     * }
     */
    public static final OfAddress PFSCTL_QUERY_FAT_BPB_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PNTFS_VOLUME_DATA_BUFFER;
     * }
     */
    public static final OfAddress PNTFS_VOLUME_DATA_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PNTFS_EXTENDED_VOLUME_DATA;
     * }
     */
    public static final OfAddress PNTFS_EXTENDED_VOLUME_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PREFS_VOLUME_DATA_BUFFER;
     * }
     */
    public static final OfAddress PREFS_VOLUME_DATA_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PSTARTING_LCN_INPUT_BUFFER;
     * }
     */
    public static final OfAddress PSTARTING_LCN_INPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PSTARTING_LCN_INPUT_BUFFER_EX;
     * }
     */
    public static final OfAddress PSTARTING_LCN_INPUT_BUFFER_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PVOLUME_BITMAP_BUFFER;
     * }
     */
    public static final OfAddress PVOLUME_BITMAP_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PSTARTING_VCN_INPUT_BUFFER;
     * }
     */
    public static final OfAddress PSTARTING_VCN_INPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct RETRIEVAL_POINTERS_BUFFER* PRETRIEVAL_POINTERS_BUFFER;
     * }
     */
    public static final OfAddress PRETRIEVAL_POINTERS_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER* PRETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER;
     * }
     */
    public static final OfAddress PRETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct RETRIEVAL_POINTER_COUNT* PRETRIEVAL_POINTER_COUNT;
     * }
     */
    public static final OfAddress PRETRIEVAL_POINTER_COUNT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PNTFS_FILE_RECORD_INPUT_BUFFER;
     * }
     */
    public static final OfAddress PNTFS_FILE_RECORD_INPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PNTFS_FILE_RECORD_OUTPUT_BUFFER;
     * }
     */
    public static final OfAddress PNTFS_FILE_RECORD_OUTPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PMOVE_FILE_DATA;
     * }
     */
    public static final OfAddress PMOVE_FILE_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PMOVE_FILE_RECORD_DATA;
     * }
     */
    public static final OfAddress PMOVE_FILE_RECORD_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MOVE_FILE_DATA32* PMOVE_FILE_DATA32;
     * }
     */
    public static final OfAddress PMOVE_FILE_DATA32 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PFIND_BY_SID_DATA;
     * }
     */
    public static final OfAddress PFIND_BY_SID_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PFIND_BY_SID_OUTPUT;
     * }
     */
    public static final OfAddress PFIND_BY_SID_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PMFT_ENUM_DATA_V0;
     * }
     */
    public static final OfAddress PMFT_ENUM_DATA_V0 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PMFT_ENUM_DATA_V1;
     * }
     */
    public static final OfAddress PMFT_ENUM_DATA_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PMFT_ENUM_DATA;
     * }
     */
    public static final OfAddress PMFT_ENUM_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PCREATE_USN_JOURNAL_DATA;
     * }
     */
    public static final OfAddress PCREATE_USN_JOURNAL_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PREAD_FILE_USN_DATA;
     * }
     */
    public static final OfAddress PREAD_FILE_USN_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PREAD_USN_JOURNAL_DATA_V0;
     * }
     */
    public static final OfAddress PREAD_USN_JOURNAL_DATA_V0 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PREAD_USN_JOURNAL_DATA_V1;
     * }
     */
    public static final OfAddress PREAD_USN_JOURNAL_DATA_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PREAD_USN_JOURNAL_DATA;
     * }
     */
    public static final OfAddress PREAD_USN_JOURNAL_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_TRACK_MODIFIED_RANGES;
     * }
     */
    public static final OfAddress PUSN_TRACK_MODIFIED_RANGES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_RANGE_TRACK_OUTPUT;
     * }
     */
    public static final OfAddress PUSN_RANGE_TRACK_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_RECORD_V2;
     * }
     */
    public static final OfAddress PUSN_RECORD_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_RECORD_V3;
     * }
     */
    public static final OfAddress PUSN_RECORD_V3 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_RECORD;
     * }
     */
    public static final OfAddress PUSN_RECORD = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_RECORD_COMMON_HEADER;
     * }
     */
    public static final OfAddress PUSN_RECORD_COMMON_HEADER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_RECORD_EXTENT;
     * }
     */
    public static final OfAddress PUSN_RECORD_EXTENT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_RECORD_V4;
     * }
     */
    public static final OfAddress PUSN_RECORD_V4 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef union * PUSN_RECORD_UNION;
     * }
     */
    public static final OfAddress PUSN_RECORD_UNION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_JOURNAL_DATA_V0;
     * }
     */
    public static final OfAddress PUSN_JOURNAL_DATA_V0 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_JOURNAL_DATA_V1;
     * }
     */
    public static final OfAddress PUSN_JOURNAL_DATA_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_JOURNAL_DATA_V2;
     * }
     */
    public static final OfAddress PUSN_JOURNAL_DATA_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PUSN_JOURNAL_DATA;
     * }
     */
    public static final OfAddress PUSN_JOURNAL_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PDELETE_USN_JOURNAL_DATA;
     * }
     */
    public static final OfAddress PDELETE_USN_JOURNAL_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MARK_HANDLE_INFO* PMARK_HANDLE_INFO;
     * }
     */
    public static final OfAddress PMARK_HANDLE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _MARK_HANDLE_INFO32* PMARK_HANDLE_INFO32;
     * }
     */
    public static final OfAddress PMARK_HANDLE_INFO32 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PBULK_SECURITY_TEST_DATA;
     * }
     */
    public static final OfAddress PBULK_SECURITY_TEST_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_PREFETCH* PFILE_PREFETCH;
     * }
     */
    public static final OfAddress PFILE_PREFETCH = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_PREFETCH_EX* PFILE_PREFETCH_EX;
     * }
     */
    public static final OfAddress PFILE_PREFETCH_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILESYSTEM_STATISTICS* PFILESYSTEM_STATISTICS;
     * }
     */
    public static final OfAddress PFILESYSTEM_STATISTICS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FAT_STATISTICS* PFAT_STATISTICS;
     * }
     */
    public static final OfAddress PFAT_STATISTICS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _EXFAT_STATISTICS* PEXFAT_STATISTICS;
     * }
     */
    public static final OfAddress PEXFAT_STATISTICS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _NTFS_STATISTICS* PNTFS_STATISTICS;
     * }
     */
    public static final OfAddress PNTFS_STATISTICS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILESYSTEM_STATISTICS_EX* PFILESYSTEM_STATISTICS_EX;
     * }
     */
    public static final OfAddress PFILESYSTEM_STATISTICS_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _NTFS_STATISTICS_EX* PNTFS_STATISTICS_EX;
     * }
     */
    public static final OfAddress PNTFS_STATISTICS_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_OBJECTID_BUFFER* PFILE_OBJECTID_BUFFER;
     * }
     */
    public static final OfAddress PFILE_OBJECTID_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_SET_SPARSE_BUFFER* PFILE_SET_SPARSE_BUFFER;
     * }
     */
    public static final OfAddress PFILE_SET_SPARSE_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_ZERO_DATA_INFORMATION* PFILE_ZERO_DATA_INFORMATION;
     * }
     */
    public static final OfAddress PFILE_ZERO_DATA_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_ZERO_DATA_INFORMATION_EX* PFILE_ZERO_DATA_INFORMATION_EX;
     * }
     */
    public static final OfAddress PFILE_ZERO_DATA_INFORMATION_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_ALLOCATED_RANGE_BUFFER* PFILE_ALLOCATED_RANGE_BUFFER;
     * }
     */
    public static final OfAddress PFILE_ALLOCATED_RANGE_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_BUFFER* PENCRYPTION_BUFFER;
     * }
     */
    public static final OfAddress PENCRYPTION_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DECRYPTION_STATUS_BUFFER* PDECRYPTION_STATUS_BUFFER;
     * }
     */
    public static final OfAddress PDECRYPTION_STATUS_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REQUEST_RAW_ENCRYPTED_DATA* PREQUEST_RAW_ENCRYPTED_DATA;
     * }
     */
    public static final OfAddress PREQUEST_RAW_ENCRYPTED_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTED_DATA_INFO* PENCRYPTED_DATA_INFO;
     * }
     */
    public static final OfAddress PENCRYPTED_DATA_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _EXTENDED_ENCRYPTED_DATA_INFO* PEXTENDED_ENCRYPTED_DATA_INFO;
     * }
     */
    public static final OfAddress PEXTENDED_ENCRYPTED_DATA_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PLEX_READ_DATA_REQUEST* PPLEX_READ_DATA_REQUEST;
     * }
     */
    public static final OfAddress PPLEX_READ_DATA_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SI_COPYFILE* PSI_COPYFILE;
     * }
     */
    public static final OfAddress PSI_COPYFILE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_MAKE_COMPATIBLE_BUFFER* PFILE_MAKE_COMPATIBLE_BUFFER;
     * }
     */
    public static final OfAddress PFILE_MAKE_COMPATIBLE_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_SET_DEFECT_MGMT_BUFFER* PFILE_SET_DEFECT_MGMT_BUFFER;
     * }
     */
    public static final OfAddress PFILE_SET_DEFECT_MGMT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_QUERY_SPARING_BUFFER* PFILE_QUERY_SPARING_BUFFER;
     * }
     */
    public static final OfAddress PFILE_QUERY_SPARING_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER* PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
     * }
     */
    public static final OfAddress PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long CLSN;
     * }
     */
    public static final OfLong CLSN = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER* PFILE_INITIATE_REPAIR_OUTPUT_BUFFER;
     * }
     */
    public static final OfAddress PFILE_INITIATE_REPAIR_OUTPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _SHRINK_VOLUME_REQUEST_TYPES.ShrinkPrepare = 1;
     * }
     */
    public static int ShrinkPrepare() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _SHRINK_VOLUME_REQUEST_TYPES.ShrinkCommit = 2;
     * }
     */
    public static int ShrinkCommit() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _SHRINK_VOLUME_REQUEST_TYPES.ShrinkAbort = 3;
     * }
     */
    public static int ShrinkAbort() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _SHRINK_VOLUME_REQUEST_TYPES* PSHRINK_VOLUME_REQUEST_TYPES;
     * }
     */
    public static final OfAddress PSHRINK_VOLUME_REQUEST_TYPES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SHRINK_VOLUME_INFORMATION* PSHRINK_VOLUME_INFORMATION;
     * }
     */
    public static final OfAddress PSHRINK_VOLUME_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_MODIFY_RM* PTXFS_MODIFY_RM;
     * }
     */
    public static final OfAddress PTXFS_MODIFY_RM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_QUERY_RM_INFORMATION* PTXFS_QUERY_RM_INFORMATION;
     * }
     */
    public static final OfAddress PTXFS_QUERY_RM_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION* PTXFS_ROLLFORWARD_REDO_INFORMATION;
     * }
     */
    public static final OfAddress PTXFS_ROLLFORWARD_REDO_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_START_RM_INFORMATION* PTXFS_START_RM_INFORMATION;
     * }
     */
    public static final OfAddress PTXFS_START_RM_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_GET_METADATA_INFO_OUT* PTXFS_GET_METADATA_INFO_OUT;
     * }
     */
    public static final OfAddress PTXFS_GET_METADATA_INFO_OUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY* PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
     * }
     */
    public static final OfAddress PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES* PTXFS_LIST_TRANSACTION_LOCKED_FILES;
     * }
     */
    public static final OfAddress PTXFS_LIST_TRANSACTION_LOCKED_FILES = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY* PTXFS_LIST_TRANSACTIONS_ENTRY;
     * }
     */
    public static final OfAddress PTXFS_LIST_TRANSACTIONS_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_LIST_TRANSACTIONS* PTXFS_LIST_TRANSACTIONS;
     * }
     */
    public static final OfAddress PTXFS_LIST_TRANSACTIONS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT* PTXFS_READ_BACKUP_INFORMATION_OUT;
     * }
     */
    public static final OfAddress PTXFS_READ_BACKUP_INFORMATION_OUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_WRITE_BACKUP_INFORMATION* PTXFS_WRITE_BACKUP_INFORMATION;
     * }
     */
    public static final OfAddress PTXFS_WRITE_BACKUP_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_GET_TRANSACTED_VERSION* PTXFS_GET_TRANSACTED_VERSION;
     * }
     */
    public static final OfAddress PTXFS_GET_TRANSACTED_VERSION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_SAVEPOINT_INFORMATION* PTXFS_SAVEPOINT_INFORMATION;
     * }
     */
    public static final OfAddress PTXFS_SAVEPOINT_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_CREATE_MINIVERSION_INFO* PTXFS_CREATE_MINIVERSION_INFO;
     * }
     */
    public static final OfAddress PTXFS_CREATE_MINIVERSION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _TXFS_TRANSACTION_ACTIVE_INFO* PTXFS_TRANSACTION_ACTIVE_INFO;
     * }
     */
    public static final OfAddress PTXFS_TRANSACTION_ACTIVE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _BOOT_AREA_INFO* PBOOT_AREA_INFO;
     * }
     */
    public static final OfAddress PBOOT_AREA_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _RETRIEVAL_POINTER_BASE* PRETRIEVAL_POINTER_BASE;
     * }
     */
    public static final OfAddress PRETRIEVAL_POINTER_BASE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION* PFILE_FS_PERSISTENT_VOLUME_INFORMATION;
     * }
     */
    public static final OfAddress PFILE_FS_PERSISTENT_VOLUME_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION* PFILE_SYSTEM_RECOGNITION_INFORMATION;
     * }
     */
    public static final OfAddress PFILE_SYSTEM_RECOGNITION_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REQUEST_OPLOCK_INPUT_BUFFER* PREQUEST_OPLOCK_INPUT_BUFFER;
     * }
     */
    public static final OfAddress PREQUEST_OPLOCK_INPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER* PREQUEST_OPLOCK_OUTPUT_BUFFER;
     * }
     */
    public static final OfAddress PREQUEST_OPLOCK_OUTPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VIRTUAL_STORAGE_TYPE* PVIRTUAL_STORAGE_TYPE;
     * }
     */
    public static final OfAddress PVIRTUAL_STORAGE_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST* PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
     * }
     */
    public static final OfAddress PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY* PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
     * }
     */
    public static final OfAddress PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY* PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
     * }
     */
    public static final OfAddress PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE* PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
     * }
     */
    public static final OfAddress PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_CHANGE_MACHINE_SID_INPUT* PSD_CHANGE_MACHINE_SID_INPUT;
     * }
     */
    public static final OfAddress PSD_CHANGE_MACHINE_SID_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT* PSD_CHANGE_MACHINE_SID_OUTPUT;
     * }
     */
    public static final OfAddress PSD_CHANGE_MACHINE_SID_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_QUERY_STATS_INPUT* PSD_QUERY_STATS_INPUT;
     * }
     */
    public static final OfAddress PSD_QUERY_STATS_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_QUERY_STATS_OUTPUT* PSD_QUERY_STATS_OUTPUT;
     * }
     */
    public static final OfAddress PSD_QUERY_STATS_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_ENUM_SDS_INPUT* PSD_ENUM_SDS_INPUT;
     * }
     */
    public static final OfAddress PSD_ENUM_SDS_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_ENUM_SDS_ENTRY* PSD_ENUM_SDS_ENTRY;
     * }
     */
    public static final OfAddress PSD_ENUM_SDS_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_ENUM_SDS_OUTPUT* PSD_ENUM_SDS_OUTPUT;
     * }
     */
    public static final OfAddress PSD_ENUM_SDS_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_GLOBAL_CHANGE_INPUT* PSD_GLOBAL_CHANGE_INPUT;
     * }
     */
    public static final OfAddress PSD_GLOBAL_CHANGE_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SD_GLOBAL_CHANGE_OUTPUT* PSD_GLOBAL_CHANGE_OUTPUT;
     * }
     */
    public static final OfAddress PSD_GLOBAL_CHANGE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT* PLOOKUP_STREAM_FROM_CLUSTER_INPUT;
     * }
     */
    public static final OfAddress PLOOKUP_STREAM_FROM_CLUSTER_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT* PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
     * }
     */
    public static final OfAddress PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY* PLOOKUP_STREAM_FROM_CLUSTER_ENTRY;
     * }
     */
    public static final OfAddress PLOOKUP_STREAM_FROM_CLUSTER_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_TYPE_NOTIFICATION_INPUT* PFILE_TYPE_NOTIFICATION_INPUT;
     * }
     */
    public static final OfAddress PFILE_TYPE_NOTIFICATION_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * const GUID FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE;
     * }
     */
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$857.FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE$SEGMENT,"FILE_TYPE_NOTIFICATION_GUID_PAGE_FILE");
    }
    /**
     * {@snippet :
     * const GUID FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE;
     * }
     */
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$857.FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE$SEGMENT,"FILE_TYPE_NOTIFICATION_GUID_HIBERNATION_FILE");
    }
    /**
     * {@snippet :
     * const GUID FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE;
     * }
     */
    public static MemorySegment FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$857.FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE$SEGMENT,"FILE_TYPE_NOTIFICATION_GUID_CRASHDUMP_FILE");
    }
    /**
     * {@snippet :
     * typedef struct _CSV_MGMT_LOCK* PCSV_MGMT_LOCK;
     * }
     */
    public static final OfAddress PCSV_MGMT_LOCK = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_NAMESPACE_INFO* PCSV_NAMESPACE_INFO;
     * }
     */
    public static final OfAddress PCSV_NAMESPACE_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlStartRedirectFile = 2;
     * }
     */
    public static int CsvControlStartRedirectFile() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlStopRedirectFile = 3;
     * }
     */
    public static int CsvControlStopRedirectFile() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlQueryRedirectState = 4;
     * }
     */
    public static int CsvControlQueryRedirectState() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlQueryFileRevision = 6;
     * }
     */
    public static int CsvControlQueryFileRevision() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlQueryMdsPath = 8;
     * }
     */
    public static int CsvControlQueryMdsPath() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlQueryFileRevisionFileId128 = 9;
     * }
     */
    public static int CsvControlQueryFileRevisionFileId128() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlQueryVolumeRedirectState = 10;
     * }
     */
    public static int CsvControlQueryVolumeRedirectState() {
        return (int)10L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlEnableUSNRangeModificationTracking = 13;
     * }
     */
    public static int CsvControlEnableUSNRangeModificationTracking() {
        return (int)13L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlMarkHandleLocalVolumeMount = 14;
     * }
     */
    public static int CsvControlMarkHandleLocalVolumeMount() {
        return (int)14L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlUnmarkHandleLocalVolumeMount = 15;
     * }
     */
    public static int CsvControlUnmarkHandleLocalVolumeMount() {
        return (int)15L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlGetCsvFsMdsPathV2 = 18;
     * }
     */
    public static int CsvControlGetCsvFsMdsPathV2() {
        return (int)18L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlDisableCaching = 19;
     * }
     */
    public static int CsvControlDisableCaching() {
        return (int)19L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlEnableCaching = 20;
     * }
     */
    public static int CsvControlEnableCaching() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlStartForceDFO = 21;
     * }
     */
    public static int CsvControlStartForceDFO() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlStopForceDFO = 22;
     * }
     */
    public static int CsvControlStopForceDFO() {
        return (int)22L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlQueryMdsPathNoPause = 23;
     * }
     */
    public static int CsvControlQueryMdsPathNoPause() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlSetVolumeId = 24;
     * }
     */
    public static int CsvControlSetVolumeId() {
        return (int)24L;
    }
    /**
     * {@snippet :
     * enum _CSV_CONTROL_OP.CsvControlQueryVolumeId = 25;
     * }
     */
    public static int CsvControlQueryVolumeId() {
        return (int)25L;
    }
    /**
     * {@snippet :
     * typedef enum _CSV_CONTROL_OP* PCSV_CONTROL_OP;
     * }
     */
    public static final OfAddress PCSV_CONTROL_OP = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_CONTROL_PARAM* PCSV_CONTROL_PARAM;
     * }
     */
    public static final OfAddress PCSV_CONTROL_PARAM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_REDIRECT_STATE* PCSV_QUERY_REDIRECT_STATE;
     * }
     */
    public static final OfAddress PCSV_QUERY_REDIRECT_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_FILE_REVISION* PCSV_QUERY_FILE_REVISION;
     * }
     */
    public static final OfAddress PCSV_QUERY_FILE_REVISION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_FILE_REVISION_FILE_ID_128* PCSV_QUERY_FILE_REVISION_FILE_ID_128;
     * }
     */
    public static final OfAddress PCSV_QUERY_FILE_REVISION_FILE_ID_128 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_MDS_PATH* PCSV_QUERY_MDS_PATH;
     * }
     */
    public static final OfAddress PCSV_QUERY_MDS_PATH = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivityNone = 0;
     * }
     */
    public static int CsvFsDiskConnectivityNone() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivityMdsNodeOnly = 1;
     * }
     */
    public static int CsvFsDiskConnectivityMdsNodeOnly() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivitySubsetOfNodes = 2;
     * }
     */
    public static int CsvFsDiskConnectivitySubsetOfNodes() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _CSVFS_DISK_CONNECTIVITY.CsvFsDiskConnectivityAllNodes = 3;
     * }
     */
    public static int CsvFsDiskConnectivityAllNodes() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _CSVFS_DISK_CONNECTIVITY* PCSVFS_DISK_CONNECTIVITY;
     * }
     */
    public static final OfAddress PCSVFS_DISK_CONNECTIVITY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_VOLUME_REDIRECT_STATE* PCSV_QUERY_VOLUME_REDIRECT_STATE;
     * }
     */
    public static final OfAddress PCSV_QUERY_VOLUME_REDIRECT_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_MDS_PATH_V2* PCSV_QUERY_MDS_PATH_V2;
     * }
     */
    public static final OfAddress PCSV_QUERY_MDS_PATH_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_SET_VOLUME_ID* PCSV_SET_VOLUME_ID;
     * }
     */
    public static final OfAddress PCSV_SET_VOLUME_ID = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_VOLUME_ID* PCSV_QUERY_VOLUME_ID;
     * }
     */
    public static final OfAddress PCSV_QUERY_VOLUME_ID = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _LMR_QUERY_INFO_CLASS.LMRQuerySessionInfo = 1;
     * }
     */
    public static int LMRQuerySessionInfo() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef enum _LMR_QUERY_INFO_CLASS* PLMR_QUERY_INFO_CLASS;
     * }
     */
    public static final OfAddress PLMR_QUERY_INFO_CLASS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _LMR_QUERY_INFO_PARAM* PLMR_QUERY_INFO_PARAM;
     * }
     */
    public static final OfAddress PLMR_QUERY_INFO_PARAM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _LMR_QUERY_SESSION_INFO* PLMR_QUERY_SESSION_INFO;
     * }
     */
    public static final OfAddress PLMR_QUERY_SESSION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT* PCSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
     * }
     */
    public static final OfAddress PCSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _STORAGE_RESERVE_ID.StorageReserveIdNone = 0;
     * }
     */
    public static int StorageReserveIdNone() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RESERVE_ID.StorageReserveIdHard = 1;
     * }
     */
    public static int StorageReserveIdHard() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RESERVE_ID.StorageReserveIdSoft = 2;
     * }
     */
    public static int StorageReserveIdSoft() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RESERVE_ID.StorageReserveIdUpdateScratch = 3;
     * }
     */
    public static int StorageReserveIdUpdateScratch() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _STORAGE_RESERVE_ID.StorageReserveIdMax = 4;
     * }
     */
    public static int StorageReserveIdMax() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _STORAGE_RESERVE_ID* PSTORAGE_RESERVE_ID;
     * }
     */
    public static final OfAddress PSTORAGE_RESERVE_ID = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CSV_IS_OWNED_BY_CSVFS* PCSV_IS_OWNED_BY_CSVFS;
     * }
     */
    public static final OfAddress PCSV_IS_OWNED_BY_CSVFS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_LEVEL_TRIM_RANGE* PFILE_LEVEL_TRIM_RANGE;
     * }
     */
    public static final OfAddress PFILE_LEVEL_TRIM_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_LEVEL_TRIM* PFILE_LEVEL_TRIM;
     * }
     */
    public static final OfAddress PFILE_LEVEL_TRIM = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_LEVEL_TRIM_OUTPUT* PFILE_LEVEL_TRIM_OUTPUT;
     * }
     */
    public static final OfAddress PFILE_LEVEL_TRIM_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _QUERY_FILE_LAYOUT_FILTER_TYPE.QUERY_FILE_LAYOUT_FILTER_TYPE_NONE = 0;
     * }
     */
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_NONE() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _QUERY_FILE_LAYOUT_FILTER_TYPE.QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS = 1;
     * }
     */
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _QUERY_FILE_LAYOUT_FILTER_TYPE.QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID = 2;
     * }
     */
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _QUERY_FILE_LAYOUT_FILTER_TYPE.QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID = 3;
     * }
     */
    public static int QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _QUERY_FILE_LAYOUT_FILTER_TYPE.QUERY_FILE_LAYOUT_NUM_FILTER_TYPES = 4;
     * }
     */
    public static int QUERY_FILE_LAYOUT_NUM_FILTER_TYPES() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef struct _CLUSTER_RANGE* PCLUSTER_RANGE;
     * }
     */
    public static final OfAddress PCLUSTER_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_REFERENCE_RANGE* PFILE_REFERENCE_RANGE;
     * }
     */
    public static final OfAddress PFILE_REFERENCE_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _QUERY_FILE_LAYOUT_INPUT* PQUERY_FILE_LAYOUT_INPUT;
     * }
     */
    public static final OfAddress PQUERY_FILE_LAYOUT_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _QUERY_FILE_LAYOUT_OUTPUT* PQUERY_FILE_LAYOUT_OUTPUT;
     * }
     */
    public static final OfAddress PQUERY_FILE_LAYOUT_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_LAYOUT_ENTRY* PFILE_LAYOUT_ENTRY;
     * }
     */
    public static final OfAddress PFILE_LAYOUT_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_LAYOUT_NAME_ENTRY* PFILE_LAYOUT_NAME_ENTRY;
     * }
     */
    public static final OfAddress PFILE_LAYOUT_NAME_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_LAYOUT_INFO_ENTRY* PFILE_LAYOUT_INFO_ENTRY;
     * }
     */
    public static final OfAddress PFILE_LAYOUT_INFO_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STREAM_LAYOUT_ENTRY* PSTREAM_LAYOUT_ENTRY;
     * }
     */
    public static final OfAddress PSTREAM_LAYOUT_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STREAM_EXTENT_ENTRY* PSTREAM_EXTENT_ENTRY;
     * }
     */
    public static final OfAddress PSTREAM_EXTENT_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER* PFSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
     * }
     */
    public static final OfAddress PFSCTL_GET_INTEGRITY_INFORMATION_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER* PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
     * }
     */
    public static final OfAddress PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX* PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX;
     * }
     */
    public static final OfAddress PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_OFFLOAD_READ_INPUT* PFSCTL_OFFLOAD_READ_INPUT;
     * }
     */
    public static final OfAddress PFSCTL_OFFLOAD_READ_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_OFFLOAD_READ_OUTPUT* PFSCTL_OFFLOAD_READ_OUTPUT;
     * }
     */
    public static final OfAddress PFSCTL_OFFLOAD_READ_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_OFFLOAD_WRITE_INPUT* PFSCTL_OFFLOAD_WRITE_INPUT;
     * }
     */
    public static final OfAddress PFSCTL_OFFLOAD_WRITE_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_OFFLOAD_WRITE_OUTPUT* PFSCTL_OFFLOAD_WRITE_OUTPUT;
     * }
     */
    public static final OfAddress PFSCTL_OFFLOAD_WRITE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SET_PURGE_FAILURE_MODE_INPUT* PSET_PURGE_FAILURE_MODE_INPUT;
     * }
     */
    public static final OfAddress PSET_PURGE_FAILURE_MODE_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REPAIR_COPIES_INPUT* PREPAIR_COPIES_INPUT;
     * }
     */
    public static final OfAddress PREPAIR_COPIES_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REPAIR_COPIES_OUTPUT* PREPAIR_COPIES_OUTPUT;
     * }
     */
    public static final OfAddress PREPAIR_COPIES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_REGION_INFO* PFILE_REGION_INFO;
     * }
     */
    public static final OfAddress PFILE_REGION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_REGION_OUTPUT* PFILE_REGION_OUTPUT;
     * }
     */
    public static final OfAddress PFILE_REGION_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_REGION_INPUT* PFILE_REGION_INPUT;
     * }
     */
    public static final OfAddress PFILE_REGION_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WRITE_USN_REASON_INPUT* PWRITE_USN_REASON_INPUT;
     * }
     */
    public static final OfAddress PWRITE_USN_REASON_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_MEDIA_TYPE.FileStorageTierMediaTypeUnspecified = 0;
     * }
     */
    public static int FileStorageTierMediaTypeUnspecified() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_MEDIA_TYPE.FileStorageTierMediaTypeDisk = 1;
     * }
     */
    public static int FileStorageTierMediaTypeDisk() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_MEDIA_TYPE.FileStorageTierMediaTypeSsd = 2;
     * }
     */
    public static int FileStorageTierMediaTypeSsd() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_MEDIA_TYPE.FileStorageTierMediaTypeScm = 4;
     * }
     */
    public static int FileStorageTierMediaTypeScm() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_MEDIA_TYPE.FileStorageTierMediaTypeMax = 5;
     * }
     */
    public static int FileStorageTierMediaTypeMax() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * typedef enum _FILE_STORAGE_TIER_MEDIA_TYPE* PFILE_STORAGE_TIER_MEDIA_TYPE;
     * }
     */
    public static final OfAddress PFILE_STORAGE_TIER_MEDIA_TYPE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_CLASS.FileStorageTierClassUnspecified = 0;
     * }
     */
    public static int FileStorageTierClassUnspecified() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_CLASS.FileStorageTierClassCapacity = 1;
     * }
     */
    public static int FileStorageTierClassCapacity() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_CLASS.FileStorageTierClassPerformance = 2;
     * }
     */
    public static int FileStorageTierClassPerformance() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _FILE_STORAGE_TIER_CLASS.FileStorageTierClassMax = 3;
     * }
     */
    public static int FileStorageTierClassMax() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _FILE_STORAGE_TIER_CLASS* PFILE_STORAGE_TIER_CLASS;
     * }
     */
    public static final OfAddress PFILE_STORAGE_TIER_CLASS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_STORAGE_TIER* PFILE_STORAGE_TIER;
     * }
     */
    public static final OfAddress PFILE_STORAGE_TIER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_QUERY_STORAGE_CLASSES_OUTPUT* PFSCTL_QUERY_STORAGE_CLASSES_OUTPUT;
     * }
     */
    public static final OfAddress PFSCTL_QUERY_STORAGE_CLASSES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STREAM_INFORMATION_ENTRY* PSTREAM_INFORMATION_ENTRY;
     * }
     */
    public static final OfAddress PSTREAM_INFORMATION_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_QUERY_REGION_INFO_INPUT* PFSCTL_QUERY_REGION_INFO_INPUT;
     * }
     */
    public static final OfAddress PFSCTL_QUERY_REGION_INFO_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_STORAGE_TIER_REGION* PFILE_STORAGE_TIER_REGION;
     * }
     */
    public static final OfAddress PFILE_STORAGE_TIER_REGION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FSCTL_QUERY_REGION_INFO_OUTPUT* PFSCTL_QUERY_REGION_INFO_OUTPUT;
     * }
     */
    public static final OfAddress PFSCTL_QUERY_REGION_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_DESIRED_STORAGE_CLASS_INFORMATION* PFILE_DESIRED_STORAGE_CLASS_INFORMATION;
     * }
     */
    public static final OfAddress PFILE_DESIRED_STORAGE_CLASS_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DUPLICATE_EXTENTS_DATA* PDUPLICATE_EXTENTS_DATA;
     * }
     */
    public static final OfAddress PDUPLICATE_EXTENTS_DATA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DUPLICATE_EXTENTS_DATA32* PDUPLICATE_EXTENTS_DATA32;
     * }
     */
    public static final OfAddress PDUPLICATE_EXTENTS_DATA32 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DUPLICATE_EXTENTS_DATA_EX* PDUPLICATE_EXTENTS_DATA_EX;
     * }
     */
    public static final OfAddress PDUPLICATE_EXTENTS_DATA_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DUPLICATE_EXTENTS_DATA_EX32* PDUPLICATE_EXTENTS_DATA_EX32;
     * }
     */
    public static final OfAddress PDUPLICATE_EXTENTS_DATA_EX32 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _DUPLICATE_EXTENTS_STATE.FileSnapStateInactive = 0;
     * }
     */
    public static int FileSnapStateInactive() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _DUPLICATE_EXTENTS_STATE.FileSnapStateSource = 1;
     * }
     */
    public static int FileSnapStateSource() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _DUPLICATE_EXTENTS_STATE.FileSnapStateTarget = 2;
     * }
     */
    public static int FileSnapStateTarget() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * typedef enum _DUPLICATE_EXTENTS_STATE* PDUPLICATE_EXTENTS_STATE;
     * }
     */
    public static final OfAddress PDUPLICATE_EXTENTS_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _ASYNC_DUPLICATE_EXTENTS_STATUS* PASYNC_DUPLICATE_EXTENTS_STATUS;
     * }
     */
    public static final OfAddress PASYNC_DUPLICATE_EXTENTS_STATUS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_STATE.SmrGcStateInactive = 0;
     * }
     */
    public static int SmrGcStateInactive() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_STATE.SmrGcStatePaused = 1;
     * }
     */
    public static int SmrGcStatePaused() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_STATE.SmrGcStateActive = 2;
     * }
     */
    public static int SmrGcStateActive() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_STATE.SmrGcStateActiveFullSpeed = 3;
     * }
     */
    public static int SmrGcStateActiveFullSpeed() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _REFS_SMR_VOLUME_GC_STATE* PREFS_SMR_VOLUME_GC_STATE;
     * }
     */
    public static final OfAddress PREFS_SMR_VOLUME_GC_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REFS_SMR_VOLUME_INFO_OUTPUT* PREFS_SMR_VOLUME_INFO_OUTPUT;
     * }
     */
    public static final OfAddress PREFS_SMR_VOLUME_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_ACTION.SmrGcActionStart = 1;
     * }
     */
    public static int SmrGcActionStart() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_ACTION.SmrGcActionStartFullSpeed = 2;
     * }
     */
    public static int SmrGcActionStartFullSpeed() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_ACTION.SmrGcActionPause = 3;
     * }
     */
    public static int SmrGcActionPause() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_ACTION.SmrGcActionStop = 4;
     * }
     */
    public static int SmrGcActionStop() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _REFS_SMR_VOLUME_GC_ACTION* PREFS_SMR_VOLUME_GC_ACTION;
     * }
     */
    public static final OfAddress PREFS_SMR_VOLUME_GC_ACTION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_METHOD.SmrGcMethodCompaction = 1;
     * }
     */
    public static int SmrGcMethodCompaction() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_METHOD.SmrGcMethodCompression = 2;
     * }
     */
    public static int SmrGcMethodCompression() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _REFS_SMR_VOLUME_GC_METHOD.SmrGcMethodRotation = 3;
     * }
     */
    public static int SmrGcMethodRotation() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef enum _REFS_SMR_VOLUME_GC_METHOD* PREFS_SMR_VOLUME_GC_METHOD;
     * }
     */
    public static final OfAddress PREFS_SMR_VOLUME_GC_METHOD = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _REFS_SMR_VOLUME_GC_PARAMETERS* PREFS_SMR_VOLUME_GC_PARAMETERS;
     * }
     */
    public static final OfAddress PREFS_SMR_VOLUME_GC_PARAMETERS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER* PSTREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER;
     * }
     */
    public static final OfAddress PSTREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STREAMS_ASSOCIATE_ID_INPUT_BUFFER* PSTREAMS_ASSOCIATE_ID_INPUT_BUFFER;
     * }
     */
    public static final OfAddress PSTREAMS_ASSOCIATE_ID_INPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _STREAMS_QUERY_ID_OUTPUT_BUFFER* PSTREAMS_QUERY_ID_OUTPUT_BUFFER;
     * }
     */
    public static final OfAddress PSTREAMS_QUERY_ID_OUTPUT_BUFFER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _QUERY_BAD_RANGES_INPUT_RANGE* PQUERY_BAD_RANGES_INPUT_RANGE;
     * }
     */
    public static final OfAddress PQUERY_BAD_RANGES_INPUT_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _QUERY_BAD_RANGES_INPUT* PQUERY_BAD_RANGES_INPUT;
     * }
     */
    public static final OfAddress PQUERY_BAD_RANGES_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _QUERY_BAD_RANGES_OUTPUT_RANGE* PQUERY_BAD_RANGES_OUTPUT_RANGE;
     * }
     */
    public static final OfAddress PQUERY_BAD_RANGES_OUTPUT_RANGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _QUERY_BAD_RANGES_OUTPUT* PQUERY_BAD_RANGES_OUTPUT;
     * }
     */
    public static final OfAddress PQUERY_BAD_RANGES_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT* PSET_DAX_ALLOC_ALIGNMENT_HINT_INPUT;
     * }
     */
    public static final OfAddress PSET_DAX_ALLOC_ALIGNMENT_HINT_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _VIRTUAL_STORAGE_BEHAVIOR_CODE.VirtualStorageBehaviorUndefined = 0;
     * }
     */
    public static int VirtualStorageBehaviorUndefined() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _VIRTUAL_STORAGE_BEHAVIOR_CODE.VirtualStorageBehaviorCacheWriteThrough = 1;
     * }
     */
    public static int VirtualStorageBehaviorCacheWriteThrough() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _VIRTUAL_STORAGE_BEHAVIOR_CODE.VirtualStorageBehaviorCacheWriteBack = 2;
     * }
     */
    public static int VirtualStorageBehaviorCacheWriteBack() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _VIRTUAL_STORAGE_BEHAVIOR_CODE.VirtualStorageBehaviorStopIoProcessing = 3;
     * }
     */
    public static int VirtualStorageBehaviorStopIoProcessing() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _VIRTUAL_STORAGE_BEHAVIOR_CODE.VirtualStorageBehaviorRestartIoProcessing = 4;
     * }
     */
    public static int VirtualStorageBehaviorRestartIoProcessing() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * typedef enum _VIRTUAL_STORAGE_BEHAVIOR_CODE* PVIRTUAL_STORAGE_BEHAVIOR_CODE;
     * }
     */
    public static final OfAddress PVIRTUAL_STORAGE_BEHAVIOR_CODE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT* PVIRTUAL_STORAGE_SET_BEHAVIOR_INPUT;
     * }
     */
    public static final OfAddress PVIRTUAL_STORAGE_SET_BEHAVIOR_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _ENCRYPTION_KEY_CTRL_INPUT* PENCRYPTION_KEY_CTRL_INPUT;
     * }
     */
    public static final OfAddress PENCRYPTION_KEY_CTRL_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WOF_EXTERNAL_INFO* PWOF_EXTERNAL_INFO;
     * }
     */
    public static final OfAddress PWOF_EXTERNAL_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WOF_EXTERNAL_FILE_ID* PWOF_EXTERNAL_FILE_ID;
     * }
     */
    public static final OfAddress PWOF_EXTERNAL_FILE_ID = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WOF_VERSION_INFO* PWOF_VERSION_INFO;
     * }
     */
    public static final OfAddress PWOF_VERSION_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WIM_PROVIDER_EXTERNAL_INFO* PWIM_PROVIDER_EXTERNAL_INFO;
     * }
     */
    public static final OfAddress PWIM_PROVIDER_EXTERNAL_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WIM_PROVIDER_ADD_OVERLAY_INPUT* PWIM_PROVIDER_ADD_OVERLAY_INPUT;
     * }
     */
    public static final OfAddress PWIM_PROVIDER_ADD_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WIM_PROVIDER_UPDATE_OVERLAY_INPUT* PWIM_PROVIDER_UPDATE_OVERLAY_INPUT;
     * }
     */
    public static final OfAddress PWIM_PROVIDER_UPDATE_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WIM_PROVIDER_REMOVE_OVERLAY_INPUT* PWIM_PROVIDER_REMOVE_OVERLAY_INPUT;
     * }
     */
    public static final OfAddress PWIM_PROVIDER_REMOVE_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT* PWIM_PROVIDER_SUSPEND_OVERLAY_INPUT;
     * }
     */
    public static final OfAddress PWIM_PROVIDER_SUSPEND_OVERLAY_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _WIM_PROVIDER_OVERLAY_ENTRY* PWIM_PROVIDER_OVERLAY_ENTRY;
     * }
     */
    public static final OfAddress PWIM_PROVIDER_OVERLAY_ENTRY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V0* PFILE_PROVIDER_EXTERNAL_INFO_V0;
     * }
     */
    public static final OfAddress PFILE_PROVIDER_EXTERNAL_INFO_V0 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V1* PFILE_PROVIDER_EXTERNAL_INFO_V1;
     * }
     */
    public static final OfAddress PFILE_PROVIDER_EXTERNAL_INFO_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V1* PFILE_PROVIDER_EXTERNAL_INFO;
     * }
     */
    public static final OfAddress PFILE_PROVIDER_EXTERNAL_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CONTAINER_VOLUME_STATE* PCONTAINER_VOLUME_STATE;
     * }
     */
    public static final OfAddress PCONTAINER_VOLUME_STATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CONTAINER_ROOT_INFO_INPUT* PCONTAINER_ROOT_INFO_INPUT;
     * }
     */
    public static final OfAddress PCONTAINER_ROOT_INFO_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _CONTAINER_ROOT_INFO_OUTPUT* PCONTAINER_ROOT_INFO_OUTPUT;
     * }
     */
    public static final OfAddress PCONTAINER_ROOT_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT* PVIRTUALIZATION_INSTANCE_INFO_INPUT;
     * }
     */
    public static final OfAddress PVIRTUALIZATION_INSTANCE_INFO_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX* PVIRTUALIZATION_INSTANCE_INFO_INPUT_EX;
     * }
     */
    public static final OfAddress PVIRTUALIZATION_INSTANCE_INFO_INPUT_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VIRTUALIZATION_INSTANCE_INFO_OUTPUT* PVIRTUALIZATION_INSTANCE_INFO_OUTPUT;
     * }
     */
    public static final OfAddress PVIRTUALIZATION_INSTANCE_INFO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GET_FILTER_FILE_IDENTIFIER_INPUT* PGET_FILTER_FILE_IDENTIFIER_INPUT;
     * }
     */
    public static final OfAddress PGET_FILTER_FILE_IDENTIFIER_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _GET_FILTER_FILE_IDENTIFIER_OUTPUT* PGET_FILTER_FILE_IDENTIFIER_OUTPUT;
     * }
     */
    public static final OfAddress PGET_FILTER_FILE_IDENTIFIER_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_ENABLE = 1;
     * }
     */
    public static int FS_BPIO_OP_ENABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_DISABLE = 2;
     * }
     */
    public static int FS_BPIO_OP_DISABLE() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_QUERY = 3;
     * }
     */
    public static int FS_BPIO_OP_QUERY() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_VOLUME_STACK_PAUSE = 4;
     * }
     */
    public static int FS_BPIO_OP_VOLUME_STACK_PAUSE() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_VOLUME_STACK_RESUME = 5;
     * }
     */
    public static int FS_BPIO_OP_VOLUME_STACK_RESUME() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_STREAM_PAUSE = 6;
     * }
     */
    public static int FS_BPIO_OP_STREAM_PAUSE() {
        return (int)6L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_STREAM_RESUME = 7;
     * }
     */
    public static int FS_BPIO_OP_STREAM_RESUME() {
        return (int)7L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_GET_INFO = 8;
     * }
     */
    public static int FS_BPIO_OP_GET_INFO() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OPERATIONS.FS_BPIO_OP_MAX_OPERATION = 9;
     * }
     */
    public static int FS_BPIO_OP_MAX_OPERATION() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_INFLAGS.FSBPIO_INFL_None = 0;
     * }
     */
    public static int FSBPIO_INFL_None() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_INFLAGS.FSBPIO_INFL_SKIP_STORAGE_STACK_QUERY = 1;
     * }
     */
    public static int FSBPIO_INFL_SKIP_STORAGE_STACK_QUERY() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * typedef struct _FS_BPIO_INPUT* PFS_BPIO_INPUT;
     * }
     */
    public static final OfAddress PFS_BPIO_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum _FS_BPIO_OUTFLAGS.FSBPIO_OUTFL_None = 0;
     * }
     */
    public static int FSBPIO_OUTFL_None() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OUTFLAGS.FSBPIO_OUTFL_VOLUME_STACK_BYPASS_PAUSED = 1;
     * }
     */
    public static int FSBPIO_OUTFL_VOLUME_STACK_BYPASS_PAUSED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OUTFLAGS.FSBPIO_OUTFL_STREAM_BYPASS_PAUSED = 2;
     * }
     */
    public static int FSBPIO_OUTFL_STREAM_BYPASS_PAUSED() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OUTFLAGS.FSBPIO_OUTFL_FILTER_ATTACH_BLOCKED = 4;
     * }
     */
    public static int FSBPIO_OUTFL_FILTER_ATTACH_BLOCKED() {
        return (int)4L;
    }
    /**
     * {@snippet :
     * enum _FS_BPIO_OUTFLAGS.FSBPIO_OUTFL_COMPATIBLE_STORAGE_DRIVER = 8;
     * }
     */
    public static int FSBPIO_OUTFL_COMPATIBLE_STORAGE_DRIVER() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * typedef struct _FS_BPIO_RESULTS* PFS_BPIO_RESULTS;
     * }
     */
    public static final OfAddress PFS_BPIO_RESULTS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FS_BPIO_INFO* PFS_BPIO_INFO;
     * }
     */
    public static final OfAddress PFS_BPIO_INFO = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _FS_BPIO_OUTPUT* PFS_BPIO_OUTPUT;
     * }
     */
    public static final OfAddress PFS_BPIO_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SMB_SHARE_FLUSH_AND_PURGE_INPUT* PSMB_SHARE_FLUSH_AND_PURGE_INPUT;
     * }
     */
    public static final OfAddress PSMB_SHARE_FLUSH_AND_PURGE_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SMB_SHARE_FLUSH_AND_PURGE_INPUT* PCSMB_SHARE_FLUSH_AND_PURGE_INPUT;
     * }
     */
    public static final OfAddress PCSMB_SHARE_FLUSH_AND_PURGE_INPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SMB_SHARE_FLUSH_AND_PURGE_OUTPUT* PSMB_SHARE_FLUSH_AND_PURGE_OUTPUT;
     * }
     */
    public static final OfAddress PSMB_SHARE_FLUSH_AND_PURGE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SMB_SHARE_FLUSH_AND_PURGE_OUTPUT* PCSMB_SHARE_FLUSH_AND_PURGE_OUTPUT;
     * }
     */
    public static final OfAddress PCSMB_SHARE_FLUSH_AND_PURGE_OUTPUT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _DISK_EXTENT* PDISK_EXTENT;
     * }
     */
    public static final OfAddress PDISK_EXTENT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VOLUME_DISK_EXTENTS* PVOLUME_DISK_EXTENTS;
     * }
     */
    public static final OfAddress PVOLUME_DISK_EXTENTS = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION* PVOLUME_GET_GPT_ATTRIBUTES_INFORMATION;
     * }
     */
    public static final OfAddress PVOLUME_GET_GPT_ATTRIBUTES_INFORMATION = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _IO_IRP_EXT_TRACK_OFFSET_HEADER* PIO_IRP_EXT_TRACK_OFFSET_HEADER;
     * }
     */
    public static final OfAddress PIO_IRP_EXT_TRACK_OFFSET_HEADER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short UWORD;
     * }
     */
    public static final OfShort UWORD = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * const GUID GUID_DEVINTERFACE_SMARTCARD_READER;
     * }
     */
    public static MemorySegment GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$858.GUID_DEVINTERFACE_SMARTCARD_READER$SEGMENT,"GUID_DEVINTERFACE_SMARTCARD_READER");
    }
    /**
     * {@snippet :
     * typedef struct _SCARD_IO_REQUEST* PSCARD_IO_REQUEST;
     * }
     */
    public static final OfAddress PSCARD_IO_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_IO_REQUEST* LPSCARD_IO_REQUEST;
     * }
     */
    public static final OfAddress LPSCARD_IO_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_IO_REQUEST* LPCSCARD_IO_REQUEST;
     * }
     */
    public static final OfAddress LPCSCARD_IO_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_T0_COMMAND* LPSCARD_T0_COMMAND;
     * }
     */
    public static final OfAddress LPSCARD_T0_COMMAND = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_T0_REQUEST* PSCARD_T0_REQUEST;
     * }
     */
    public static final OfAddress PSCARD_T0_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_T0_REQUEST* LPSCARD_T0_REQUEST;
     * }
     */
    public static final OfAddress LPSCARD_T0_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_T1_REQUEST* PSCARD_T1_REQUEST;
     * }
     */
    public static final OfAddress PSCARD_T1_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_T1_REQUEST* LPSCARD_T1_REQUEST;
     * }
     */
    public static final OfAddress LPSCARD_T1_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned char* LPCBYTE;
     * }
     */
    public static final OfAddress LPCBYTE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * const SCARD_IO_REQUEST g_rgSCardT0Pci;
     * }
     */
    public static MemorySegment g_rgSCardT0Pci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$858.g_rgSCardT0Pci$SEGMENT,"g_rgSCardT0Pci");
    }
    /**
     * {@snippet :
     * const SCARD_IO_REQUEST g_rgSCardT1Pci;
     * }
     */
    public static MemorySegment g_rgSCardT1Pci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$858.g_rgSCardT1Pci$SEGMENT,"g_rgSCardT1Pci");
    }
    /**
     * {@snippet :
     * const SCARD_IO_REQUEST g_rgSCardRawPci;
     * }
     */
    public static MemorySegment g_rgSCardRawPci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$858.g_rgSCardRawPci$SEGMENT,"g_rgSCardRawPci");
    }
    /**
     * {@snippet :
     * typedef unsigned long long SCARDCONTEXT;
     * }
     */
    public static final OfLong SCARDCONTEXT = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long* PSCARDCONTEXT;
     * }
     */
    public static final OfAddress PSCARDCONTEXT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long* LPSCARDCONTEXT;
     * }
     */
    public static final OfAddress LPSCARDCONTEXT = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long SCARDHANDLE;
     * }
     */
    public static final OfLong SCARDHANDLE = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long* PSCARDHANDLE;
     * }
     */
    public static final OfAddress PSCARDHANDLE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long* LPSCARDHANDLE;
     * }
     */
    public static final OfAddress LPSCARDHANDLE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardEstablishContext$MH() {
        return RuntimeHelper.requireNonNull(constants$858.SCardEstablishContext$MH,"SCardEstablishContext");
    }
    /**
     * {@snippet :
     * LONG SCardEstablishContext(DWORD dwScope, LPCVOID pvReserved1, LPCVOID pvReserved2, LPSCARDCONTEXT phContext);
     * }
     */
    public static int SCardEstablishContext(int dwScope, MemorySegment pvReserved1, MemorySegment pvReserved2, MemorySegment phContext) {
        var mh$ = SCardEstablishContext$MH();
        try {
            return (int)mh$.invokeExact(dwScope, pvReserved1, pvReserved2, phContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReleaseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$859.SCardReleaseContext$MH,"SCardReleaseContext");
    }
    /**
     * {@snippet :
     * LONG SCardReleaseContext(SCARDCONTEXT hContext);
     * }
     */
    public static int SCardReleaseContext(long hContext) {
        var mh$ = SCardReleaseContext$MH();
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIsValidContext$MH() {
        return RuntimeHelper.requireNonNull(constants$859.SCardIsValidContext$MH,"SCardIsValidContext");
    }
    /**
     * {@snippet :
     * LONG SCardIsValidContext(SCARDCONTEXT hContext);
     * }
     */
    public static int SCardIsValidContext(long hContext) {
        var mh$ = SCardIsValidContext$MH();
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReaderGroupsA$MH() {
        return RuntimeHelper.requireNonNull(constants$859.SCardListReaderGroupsA$MH,"SCardListReaderGroupsA");
    }
    /**
     * {@snippet :
     * LONG SCardListReaderGroupsA(SCARDCONTEXT hContext, LPSTR mszGroups, LPDWORD pcchGroups);
     * }
     */
    public static int SCardListReaderGroupsA(long hContext, MemorySegment mszGroups, MemorySegment pcchGroups) {
        var mh$ = SCardListReaderGroupsA$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, pcchGroups);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReaderGroupsW$MH() {
        return RuntimeHelper.requireNonNull(constants$859.SCardListReaderGroupsW$MH,"SCardListReaderGroupsW");
    }
    /**
     * {@snippet :
     * LONG SCardListReaderGroupsW(SCARDCONTEXT hContext, LPWSTR mszGroups, LPDWORD pcchGroups);
     * }
     */
    public static int SCardListReaderGroupsW(long hContext, MemorySegment mszGroups, MemorySegment pcchGroups) {
        var mh$ = SCardListReaderGroupsW$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, pcchGroups);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersA$MH() {
        return RuntimeHelper.requireNonNull(constants$859.SCardListReadersA$MH,"SCardListReadersA");
    }
    /**
     * {@snippet :
     * LONG SCardListReadersA(SCARDCONTEXT hContext, LPCSTR mszGroups, LPSTR mszReaders, LPDWORD pcchReaders);
     * }
     */
    public static int SCardListReadersA(long hContext, MemorySegment mszGroups, MemorySegment mszReaders, MemorySegment pcchReaders) {
        var mh$ = SCardListReadersA$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersW$MH() {
        return RuntimeHelper.requireNonNull(constants$859.SCardListReadersW$MH,"SCardListReadersW");
    }
    /**
     * {@snippet :
     * LONG SCardListReadersW(SCARDCONTEXT hContext, LPCWSTR mszGroups, LPWSTR mszReaders, LPDWORD pcchReaders);
     * }
     */
    public static int SCardListReadersW(long hContext, MemorySegment mszGroups, MemorySegment mszReaders, MemorySegment pcchReaders) {
        var mh$ = SCardListReadersW$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszGroups, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListCardsA$MH() {
        return RuntimeHelper.requireNonNull(constants$860.SCardListCardsA$MH,"SCardListCardsA");
    }
    /**
     * {@snippet :
     * LONG SCardListCardsA(SCARDCONTEXT hContext, LPCBYTE pbAtr, LPCGUID rgquidInterfaces, DWORD cguidInterfaceCount, CHAR* mszCards, LPDWORD pcchCards);
     * }
     */
    public static int SCardListCardsA(long hContext, MemorySegment pbAtr, MemorySegment rgquidInterfaces, int cguidInterfaceCount, MemorySegment mszCards, MemorySegment pcchCards) {
        var mh$ = SCardListCardsA$MH();
        try {
            return (int)mh$.invokeExact(hContext, pbAtr, rgquidInterfaces, cguidInterfaceCount, mszCards, pcchCards);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListCardsW$MH() {
        return RuntimeHelper.requireNonNull(constants$860.SCardListCardsW$MH,"SCardListCardsW");
    }
    /**
     * {@snippet :
     * LONG SCardListCardsW(SCARDCONTEXT hContext, LPCBYTE pbAtr, LPCGUID rgquidInterfaces, DWORD cguidInterfaceCount, WCHAR* mszCards, LPDWORD pcchCards);
     * }
     */
    public static int SCardListCardsW(long hContext, MemorySegment pbAtr, MemorySegment rgquidInterfaces, int cguidInterfaceCount, MemorySegment mszCards, MemorySegment pcchCards) {
        var mh$ = SCardListCardsW$MH();
        try {
            return (int)mh$.invokeExact(hContext, pbAtr, rgquidInterfaces, cguidInterfaceCount, mszCards, pcchCards);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListInterfacesA$MH() {
        return RuntimeHelper.requireNonNull(constants$860.SCardListInterfacesA$MH,"SCardListInterfacesA");
    }
    /**
     * {@snippet :
     * LONG SCardListInterfacesA(SCARDCONTEXT hContext, LPCSTR szCard, LPGUID pguidInterfaces, LPDWORD pcguidInterfaces);
     * }
     */
    public static int SCardListInterfacesA(long hContext, MemorySegment szCard, MemorySegment pguidInterfaces, MemorySegment pcguidInterfaces) {
        var mh$ = SCardListInterfacesA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidInterfaces, pcguidInterfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListInterfacesW$MH() {
        return RuntimeHelper.requireNonNull(constants$860.SCardListInterfacesW$MH,"SCardListInterfacesW");
    }
    /**
     * {@snippet :
     * LONG SCardListInterfacesW(SCARDCONTEXT hContext, LPCWSTR szCard, LPGUID pguidInterfaces, LPDWORD pcguidInterfaces);
     * }
     */
    public static int SCardListInterfacesW(long hContext, MemorySegment szCard, MemorySegment pguidInterfaces, MemorySegment pcguidInterfaces) {
        var mh$ = SCardListInterfacesW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidInterfaces, pcguidInterfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetProviderIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$860.SCardGetProviderIdA$MH,"SCardGetProviderIdA");
    }
    /**
     * {@snippet :
     * LONG SCardGetProviderIdA(SCARDCONTEXT hContext, LPCSTR szCard, LPGUID pguidProviderId);
     * }
     */
    public static int SCardGetProviderIdA(long hContext, MemorySegment szCard, MemorySegment pguidProviderId) {
        var mh$ = SCardGetProviderIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidProviderId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetProviderIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$860.SCardGetProviderIdW$MH,"SCardGetProviderIdW");
    }
    /**
     * {@snippet :
     * LONG SCardGetProviderIdW(SCARDCONTEXT hContext, LPCWSTR szCard, LPGUID pguidProviderId);
     * }
     */
    public static int SCardGetProviderIdW(long hContext, MemorySegment szCard, MemorySegment pguidProviderId) {
        var mh$ = SCardGetProviderIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCard, pguidProviderId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetCardTypeProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$861.SCardGetCardTypeProviderNameA$MH,"SCardGetCardTypeProviderNameA");
    }
    /**
     * {@snippet :
     * LONG SCardGetCardTypeProviderNameA(SCARDCONTEXT hContext, LPCSTR szCardName, DWORD dwProviderId, CHAR* szProvider, LPDWORD pcchProvider);
     * }
     */
    public static int SCardGetCardTypeProviderNameA(long hContext, MemorySegment szCardName, int dwProviderId, MemorySegment szProvider, MemorySegment pcchProvider) {
        var mh$ = SCardGetCardTypeProviderNameA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider, pcchProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetCardTypeProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$861.SCardGetCardTypeProviderNameW$MH,"SCardGetCardTypeProviderNameW");
    }
    /**
     * {@snippet :
     * LONG SCardGetCardTypeProviderNameW(SCARDCONTEXT hContext, LPCWSTR szCardName, DWORD dwProviderId, WCHAR* szProvider, LPDWORD pcchProvider);
     * }
     */
    public static int SCardGetCardTypeProviderNameW(long hContext, MemorySegment szCardName, int dwProviderId, MemorySegment szProvider, MemorySegment pcchProvider) {
        var mh$ = SCardGetCardTypeProviderNameW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider, pcchProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$861.SCardIntroduceReaderGroupA$MH,"SCardIntroduceReaderGroupA");
    }
    /**
     * {@snippet :
     * LONG SCardIntroduceReaderGroupA(SCARDCONTEXT hContext, LPCSTR szGroupName);
     * }
     */
    public static int SCardIntroduceReaderGroupA(long hContext, MemorySegment szGroupName) {
        var mh$ = SCardIntroduceReaderGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$861.SCardIntroduceReaderGroupW$MH,"SCardIntroduceReaderGroupW");
    }
    /**
     * {@snippet :
     * LONG SCardIntroduceReaderGroupW(SCARDCONTEXT hContext, LPCWSTR szGroupName);
     * }
     */
    public static int SCardIntroduceReaderGroupW(long hContext, MemorySegment szGroupName) {
        var mh$ = SCardIntroduceReaderGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$861.SCardForgetReaderGroupA$MH,"SCardForgetReaderGroupA");
    }
    /**
     * {@snippet :
     * LONG SCardForgetReaderGroupA(SCARDCONTEXT hContext, LPCSTR szGroupName);
     * }
     */
    public static int SCardForgetReaderGroupA(long hContext, MemorySegment szGroupName) {
        var mh$ = SCardForgetReaderGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$861.SCardForgetReaderGroupW$MH,"SCardForgetReaderGroupW");
    }
    /**
     * {@snippet :
     * LONG SCardForgetReaderGroupW(SCARDCONTEXT hContext, LPCWSTR szGroupName);
     * }
     */
    public static int SCardForgetReaderGroupW(long hContext, MemorySegment szGroupName) {
        var mh$ = SCardForgetReaderGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderA$MH() {
        return RuntimeHelper.requireNonNull(constants$862.SCardIntroduceReaderA$MH,"SCardIntroduceReaderA");
    }
    /**
     * {@snippet :
     * LONG SCardIntroduceReaderA(SCARDCONTEXT hContext, LPCSTR szReaderName, LPCSTR szDeviceName);
     * }
     */
    public static int SCardIntroduceReaderA(long hContext, MemorySegment szReaderName, MemorySegment szDeviceName) {
        var mh$ = SCardIntroduceReaderA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderW$MH() {
        return RuntimeHelper.requireNonNull(constants$862.SCardIntroduceReaderW$MH,"SCardIntroduceReaderW");
    }
    /**
     * {@snippet :
     * LONG SCardIntroduceReaderW(SCARDCONTEXT hContext, LPCWSTR szReaderName, LPCWSTR szDeviceName);
     * }
     */
    public static int SCardIntroduceReaderW(long hContext, MemorySegment szReaderName, MemorySegment szDeviceName) {
        var mh$ = SCardIntroduceReaderW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderA$MH() {
        return RuntimeHelper.requireNonNull(constants$862.SCardForgetReaderA$MH,"SCardForgetReaderA");
    }
    /**
     * {@snippet :
     * LONG SCardForgetReaderA(SCARDCONTEXT hContext, LPCSTR szReaderName);
     * }
     */
    public static int SCardForgetReaderA(long hContext, MemorySegment szReaderName) {
        var mh$ = SCardForgetReaderA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderW$MH() {
        return RuntimeHelper.requireNonNull(constants$862.SCardForgetReaderW$MH,"SCardForgetReaderW");
    }
    /**
     * {@snippet :
     * LONG SCardForgetReaderW(SCARDCONTEXT hContext, LPCWSTR szReaderName);
     * }
     */
    public static int SCardForgetReaderW(long hContext, MemorySegment szReaderName) {
        var mh$ = SCardForgetReaderW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAddReaderToGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$862.SCardAddReaderToGroupA$MH,"SCardAddReaderToGroupA");
    }
    /**
     * {@snippet :
     * LONG SCardAddReaderToGroupA(SCARDCONTEXT hContext, LPCSTR szReaderName, LPCSTR szGroupName);
     * }
     */
    public static int SCardAddReaderToGroupA(long hContext, MemorySegment szReaderName, MemorySegment szGroupName) {
        var mh$ = SCardAddReaderToGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAddReaderToGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$862.SCardAddReaderToGroupW$MH,"SCardAddReaderToGroupW");
    }
    /**
     * {@snippet :
     * LONG SCardAddReaderToGroupW(SCARDCONTEXT hContext, LPCWSTR szReaderName, LPCWSTR szGroupName);
     * }
     */
    public static int SCardAddReaderToGroupW(long hContext, MemorySegment szReaderName, MemorySegment szGroupName) {
        var mh$ = SCardAddReaderToGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardRemoveReaderFromGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$863.SCardRemoveReaderFromGroupA$MH,"SCardRemoveReaderFromGroupA");
    }
    /**
     * {@snippet :
     * LONG SCardRemoveReaderFromGroupA(SCARDCONTEXT hContext, LPCSTR szReaderName, LPCSTR szGroupName);
     * }
     */
    public static int SCardRemoveReaderFromGroupA(long hContext, MemorySegment szReaderName, MemorySegment szGroupName) {
        var mh$ = SCardRemoveReaderFromGroupA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardRemoveReaderFromGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$863.SCardRemoveReaderFromGroupW$MH,"SCardRemoveReaderFromGroupW");
    }
    /**
     * {@snippet :
     * LONG SCardRemoveReaderFromGroupW(SCARDCONTEXT hContext, LPCWSTR szReaderName, LPCWSTR szGroupName);
     * }
     */
    public static int SCardRemoveReaderFromGroupW(long hContext, MemorySegment szReaderName, MemorySegment szGroupName) {
        var mh$ = SCardRemoveReaderFromGroupW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szGroupName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceCardTypeA$MH() {
        return RuntimeHelper.requireNonNull(constants$863.SCardIntroduceCardTypeA$MH,"SCardIntroduceCardTypeA");
    }
    /**
     * {@snippet :
     * LONG SCardIntroduceCardTypeA(SCARDCONTEXT hContext, LPCSTR szCardName, LPCGUID pguidPrimaryProvider, LPCGUID rgguidInterfaces, DWORD dwInterfaceCount, LPCBYTE pbAtr, LPCBYTE pbAtrMask, DWORD cbAtrLen);
     * }
     */
    public static int SCardIntroduceCardTypeA(long hContext, MemorySegment szCardName, MemorySegment pguidPrimaryProvider, MemorySegment rgguidInterfaces, int dwInterfaceCount, MemorySegment pbAtr, MemorySegment pbAtrMask, int cbAtrLen) {
        var mh$ = SCardIntroduceCardTypeA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount, pbAtr, pbAtrMask, cbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceCardTypeW$MH() {
        return RuntimeHelper.requireNonNull(constants$863.SCardIntroduceCardTypeW$MH,"SCardIntroduceCardTypeW");
    }
    /**
     * {@snippet :
     * LONG SCardIntroduceCardTypeW(SCARDCONTEXT hContext, LPCWSTR szCardName, LPCGUID pguidPrimaryProvider, LPCGUID rgguidInterfaces, DWORD dwInterfaceCount, LPCBYTE pbAtr, LPCBYTE pbAtrMask, DWORD cbAtrLen);
     * }
     */
    public static int SCardIntroduceCardTypeW(long hContext, MemorySegment szCardName, MemorySegment pguidPrimaryProvider, MemorySegment rgguidInterfaces, int dwInterfaceCount, MemorySegment pbAtr, MemorySegment pbAtrMask, int cbAtrLen) {
        var mh$ = SCardIntroduceCardTypeW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, pguidPrimaryProvider, rgguidInterfaces, dwInterfaceCount, pbAtr, pbAtrMask, cbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetCardTypeProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$863.SCardSetCardTypeProviderNameA$MH,"SCardSetCardTypeProviderNameA");
    }
    /**
     * {@snippet :
     * LONG SCardSetCardTypeProviderNameA(SCARDCONTEXT hContext, LPCSTR szCardName, DWORD dwProviderId, LPCSTR szProvider);
     * }
     */
    public static int SCardSetCardTypeProviderNameA(long hContext, MemorySegment szCardName, int dwProviderId, MemorySegment szProvider) {
        var mh$ = SCardSetCardTypeProviderNameA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetCardTypeProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$863.SCardSetCardTypeProviderNameW$MH,"SCardSetCardTypeProviderNameW");
    }
    /**
     * {@snippet :
     * LONG SCardSetCardTypeProviderNameW(SCARDCONTEXT hContext, LPCWSTR szCardName, DWORD dwProviderId, LPCWSTR szProvider);
     * }
     */
    public static int SCardSetCardTypeProviderNameW(long hContext, MemorySegment szCardName, int dwProviderId, MemorySegment szProvider) {
        var mh$ = SCardSetCardTypeProviderNameW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName, dwProviderId, szProvider);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetCardTypeA$MH() {
        return RuntimeHelper.requireNonNull(constants$864.SCardForgetCardTypeA$MH,"SCardForgetCardTypeA");
    }
    /**
     * {@snippet :
     * LONG SCardForgetCardTypeA(SCARDCONTEXT hContext, LPCSTR szCardName);
     * }
     */
    public static int SCardForgetCardTypeA(long hContext, MemorySegment szCardName) {
        var mh$ = SCardForgetCardTypeA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetCardTypeW$MH() {
        return RuntimeHelper.requireNonNull(constants$864.SCardForgetCardTypeW$MH,"SCardForgetCardTypeW");
    }
    /**
     * {@snippet :
     * LONG SCardForgetCardTypeW(SCARDCONTEXT hContext, LPCWSTR szCardName);
     * }
     */
    public static int SCardForgetCardTypeW(long hContext, MemorySegment szCardName) {
        var mh$ = SCardForgetCardTypeW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szCardName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardFreeMemory$MH() {
        return RuntimeHelper.requireNonNull(constants$864.SCardFreeMemory$MH,"SCardFreeMemory");
    }
    /**
     * {@snippet :
     * LONG SCardFreeMemory(SCARDCONTEXT hContext, LPCVOID pvMem);
     * }
     */
    public static int SCardFreeMemory(long hContext, MemorySegment pvMem) {
        var mh$ = SCardFreeMemory$MH();
        try {
            return (int)mh$.invokeExact(hContext, pvMem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAccessStartedEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$864.SCardAccessStartedEvent$MH,"SCardAccessStartedEvent");
    }
    /**
     * {@snippet :
     * HANDLE SCardAccessStartedEvent();
     * }
     */
    public static MemorySegment SCardAccessStartedEvent() {
        var mh$ = SCardAccessStartedEvent$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReleaseStartedEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$864.SCardReleaseStartedEvent$MH,"SCardReleaseStartedEvent");
    }
    /**
     * {@snippet :
     * void SCardReleaseStartedEvent();
     * }
     */
    public static void SCardReleaseStartedEvent() {
        var mh$ = SCardReleaseStartedEvent$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct * PSCARD_READERSTATEA;
     * }
     */
    public static final OfAddress PSCARD_READERSTATEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPSCARD_READERSTATEA;
     * }
     */
    public static final OfAddress LPSCARD_READERSTATEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PSCARD_READERSTATEW;
     * }
     */
    public static final OfAddress PSCARD_READERSTATEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPSCARD_READERSTATEW;
     * }
     */
    public static final OfAddress LPSCARD_READERSTATEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PSCARD_READERSTATE;
     * }
     */
    public static final OfAddress PSCARD_READERSTATE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPSCARD_READERSTATE;
     * }
     */
    public static final OfAddress LPSCARD_READERSTATE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardLocateCardsA$MH() {
        return RuntimeHelper.requireNonNull(constants$864.SCardLocateCardsA$MH,"SCardLocateCardsA");
    }
    /**
     * {@snippet :
     * LONG SCardLocateCardsA(SCARDCONTEXT hContext, LPCSTR mszCards, LPSCARD_READERSTATEA rgReaderStates, DWORD cReaders);
     * }
     */
    public static int SCardLocateCardsA(long hContext, MemorySegment mszCards, MemorySegment rgReaderStates, int cReaders) {
        var mh$ = SCardLocateCardsA$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszCards, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsW$MH() {
        return RuntimeHelper.requireNonNull(constants$865.SCardLocateCardsW$MH,"SCardLocateCardsW");
    }
    /**
     * {@snippet :
     * LONG SCardLocateCardsW(SCARDCONTEXT hContext, LPCWSTR mszCards, LPSCARD_READERSTATEW rgReaderStates, DWORD cReaders);
     * }
     */
    public static int SCardLocateCardsW(long hContext, MemorySegment mszCards, MemorySegment rgReaderStates, int cReaders) {
        var mh$ = SCardLocateCardsW$MH();
        try {
            return (int)mh$.invokeExact(hContext, mszCards, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _SCARD_ATRMASK* PSCARD_ATRMASK;
     * }
     */
    public static final OfAddress PSCARD_ATRMASK = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _SCARD_ATRMASK* LPSCARD_ATRMASK;
     * }
     */
    public static final OfAddress LPSCARD_ATRMASK = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardLocateCardsByATRA$MH() {
        return RuntimeHelper.requireNonNull(constants$865.SCardLocateCardsByATRA$MH,"SCardLocateCardsByATRA");
    }
    /**
     * {@snippet :
     * LONG SCardLocateCardsByATRA(SCARDCONTEXT hContext, LPSCARD_ATRMASK rgAtrMasks, DWORD cAtrs, LPSCARD_READERSTATEA rgReaderStates, DWORD cReaders);
     * }
     */
    public static int SCardLocateCardsByATRA(long hContext, MemorySegment rgAtrMasks, int cAtrs, MemorySegment rgReaderStates, int cReaders) {
        var mh$ = SCardLocateCardsByATRA$MH();
        try {
            return (int)mh$.invokeExact(hContext, rgAtrMasks, cAtrs, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsByATRW$MH() {
        return RuntimeHelper.requireNonNull(constants$865.SCardLocateCardsByATRW$MH,"SCardLocateCardsByATRW");
    }
    /**
     * {@snippet :
     * LONG SCardLocateCardsByATRW(SCARDCONTEXT hContext, LPSCARD_ATRMASK rgAtrMasks, DWORD cAtrs, LPSCARD_READERSTATEW rgReaderStates, DWORD cReaders);
     * }
     */
    public static int SCardLocateCardsByATRW(long hContext, MemorySegment rgAtrMasks, int cAtrs, MemorySegment rgReaderStates, int cReaders) {
        var mh$ = SCardLocateCardsByATRW$MH();
        try {
            return (int)mh$.invokeExact(hContext, rgAtrMasks, cAtrs, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetStatusChangeA$MH() {
        return RuntimeHelper.requireNonNull(constants$865.SCardGetStatusChangeA$MH,"SCardGetStatusChangeA");
    }
    /**
     * {@snippet :
     * LONG SCardGetStatusChangeA(SCARDCONTEXT hContext, DWORD dwTimeout, LPSCARD_READERSTATEA rgReaderStates, DWORD cReaders);
     * }
     */
    public static int SCardGetStatusChangeA(long hContext, int dwTimeout, MemorySegment rgReaderStates, int cReaders) {
        var mh$ = SCardGetStatusChangeA$MH();
        try {
            return (int)mh$.invokeExact(hContext, dwTimeout, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetStatusChangeW$MH() {
        return RuntimeHelper.requireNonNull(constants$865.SCardGetStatusChangeW$MH,"SCardGetStatusChangeW");
    }
    /**
     * {@snippet :
     * LONG SCardGetStatusChangeW(SCARDCONTEXT hContext, DWORD dwTimeout, LPSCARD_READERSTATEW rgReaderStates, DWORD cReaders);
     * }
     */
    public static int SCardGetStatusChangeW(long hContext, int dwTimeout, MemorySegment rgReaderStates, int cReaders) {
        var mh$ = SCardGetStatusChangeW$MH();
        try {
            return (int)mh$.invokeExact(hContext, dwTimeout, rgReaderStates, cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$865.SCardCancel$MH,"SCardCancel");
    }
    /**
     * {@snippet :
     * LONG SCardCancel(SCARDCONTEXT hContext);
     * }
     */
    public static int SCardCancel(long hContext) {
        var mh$ = SCardCancel$MH();
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardConnectA$MH() {
        return RuntimeHelper.requireNonNull(constants$866.SCardConnectA$MH,"SCardConnectA");
    }
    /**
     * {@snippet :
     * LONG SCardConnectA(SCARDCONTEXT hContext, LPCSTR szReader, DWORD dwShareMode, DWORD dwPreferredProtocols, LPSCARDHANDLE phCard, LPDWORD pdwActiveProtocol);
     * }
     */
    public static int SCardConnectA(long hContext, MemorySegment szReader, int dwShareMode, int dwPreferredProtocols, MemorySegment phCard, MemorySegment pdwActiveProtocol) {
        var mh$ = SCardConnectA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReader, dwShareMode, dwPreferredProtocols, phCard, pdwActiveProtocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardConnectW$MH() {
        return RuntimeHelper.requireNonNull(constants$866.SCardConnectW$MH,"SCardConnectW");
    }
    /**
     * {@snippet :
     * LONG SCardConnectW(SCARDCONTEXT hContext, LPCWSTR szReader, DWORD dwShareMode, DWORD dwPreferredProtocols, LPSCARDHANDLE phCard, LPDWORD pdwActiveProtocol);
     * }
     */
    public static int SCardConnectW(long hContext, MemorySegment szReader, int dwShareMode, int dwPreferredProtocols, MemorySegment phCard, MemorySegment pdwActiveProtocol) {
        var mh$ = SCardConnectW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReader, dwShareMode, dwPreferredProtocols, phCard, pdwActiveProtocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$866.SCardReconnect$MH,"SCardReconnect");
    }
    /**
     * {@snippet :
     * LONG SCardReconnect(SCARDHANDLE hCard, DWORD dwShareMode, DWORD dwPreferredProtocols, DWORD dwInitialization, LPDWORD pdwActiveProtocol);
     * }
     */
    public static int SCardReconnect(long hCard, int dwShareMode, int dwPreferredProtocols, int dwInitialization, MemorySegment pdwActiveProtocol) {
        var mh$ = SCardReconnect$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwShareMode, dwPreferredProtocols, dwInitialization, pdwActiveProtocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$866.SCardDisconnect$MH,"SCardDisconnect");
    }
    /**
     * {@snippet :
     * LONG SCardDisconnect(SCARDHANDLE hCard, DWORD dwDisposition);
     * }
     */
    public static int SCardDisconnect(long hCard, int dwDisposition) {
        var mh$ = SCardDisconnect$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardBeginTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$866.SCardBeginTransaction$MH,"SCardBeginTransaction");
    }
    /**
     * {@snippet :
     * LONG SCardBeginTransaction(SCARDHANDLE hCard);
     * }
     */
    public static int SCardBeginTransaction(long hCard) {
        var mh$ = SCardBeginTransaction$MH();
        try {
            return (int)mh$.invokeExact(hCard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardEndTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$866.SCardEndTransaction$MH,"SCardEndTransaction");
    }
    /**
     * {@snippet :
     * LONG SCardEndTransaction(SCARDHANDLE hCard, DWORD dwDisposition);
     * }
     */
    public static int SCardEndTransaction(long hCard, int dwDisposition) {
        var mh$ = SCardEndTransaction$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardCancelTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$867.SCardCancelTransaction$MH,"SCardCancelTransaction");
    }
    /**
     * {@snippet :
     * LONG SCardCancelTransaction(SCARDHANDLE hCard);
     * }
     */
    public static int SCardCancelTransaction(long hCard) {
        var mh$ = SCardCancelTransaction$MH();
        try {
            return (int)mh$.invokeExact(hCard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardState$MH() {
        return RuntimeHelper.requireNonNull(constants$867.SCardState$MH,"SCardState");
    }
    /**
     * {@snippet :
     * LONG SCardState(SCARDHANDLE hCard, LPDWORD pdwState, LPDWORD pdwProtocol, LPBYTE pbAtr, LPDWORD pcbAtrLen);
     * }
     */
    public static int SCardState(long hCard, MemorySegment pdwState, MemorySegment pdwProtocol, MemorySegment pbAtr, MemorySegment pcbAtrLen) {
        var mh$ = SCardState$MH();
        try {
            return (int)mh$.invokeExact(hCard, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardStatusA$MH() {
        return RuntimeHelper.requireNonNull(constants$867.SCardStatusA$MH,"SCardStatusA");
    }
    /**
     * {@snippet :
     * LONG SCardStatusA(SCARDHANDLE hCard, LPSTR mszReaderNames, LPDWORD pcchReaderLen, LPDWORD pdwState, LPDWORD pdwProtocol, LPBYTE pbAtr, LPDWORD pcbAtrLen);
     * }
     */
    public static int SCardStatusA(long hCard, MemorySegment mszReaderNames, MemorySegment pcchReaderLen, MemorySegment pdwState, MemorySegment pdwProtocol, MemorySegment pbAtr, MemorySegment pcbAtrLen) {
        var mh$ = SCardStatusA$MH();
        try {
            return (int)mh$.invokeExact(hCard, mszReaderNames, pcchReaderLen, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardStatusW$MH() {
        return RuntimeHelper.requireNonNull(constants$867.SCardStatusW$MH,"SCardStatusW");
    }
    /**
     * {@snippet :
     * LONG SCardStatusW(SCARDHANDLE hCard, LPWSTR mszReaderNames, LPDWORD pcchReaderLen, LPDWORD pdwState, LPDWORD pdwProtocol, LPBYTE pbAtr, LPDWORD pcbAtrLen);
     * }
     */
    public static int SCardStatusW(long hCard, MemorySegment mszReaderNames, MemorySegment pcchReaderLen, MemorySegment pdwState, MemorySegment pdwProtocol, MemorySegment pbAtr, MemorySegment pcbAtrLen) {
        var mh$ = SCardStatusW$MH();
        try {
            return (int)mh$.invokeExact(hCard, mszReaderNames, pcchReaderLen, pdwState, pdwProtocol, pbAtr, pcbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardTransmit$MH() {
        return RuntimeHelper.requireNonNull(constants$867.SCardTransmit$MH,"SCardTransmit");
    }
    /**
     * {@snippet :
     * LONG SCardTransmit(SCARDHANDLE hCard, LPCSCARD_IO_REQUEST pioSendPci, LPCBYTE pbSendBuffer, DWORD cbSendLength, LPSCARD_IO_REQUEST pioRecvPci, LPBYTE pbRecvBuffer, LPDWORD pcbRecvLength);
     * }
     */
    public static int SCardTransmit(long hCard, MemorySegment pioSendPci, MemorySegment pbSendBuffer, int cbSendLength, MemorySegment pioRecvPci, MemorySegment pbRecvBuffer, MemorySegment pcbRecvLength) {
        var mh$ = SCardTransmit$MH();
        try {
            return (int)mh$.invokeExact(hCard, pioSendPci, pbSendBuffer, cbSendLength, pioRecvPci, pbRecvBuffer, pcbRecvLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetTransmitCount$MH() {
        return RuntimeHelper.requireNonNull(constants$867.SCardGetTransmitCount$MH,"SCardGetTransmitCount");
    }
    /**
     * {@snippet :
     * LONG SCardGetTransmitCount(SCARDHANDLE hCard, LPDWORD pcTransmitCount);
     * }
     */
    public static int SCardGetTransmitCount(long hCard, MemorySegment pcTransmitCount) {
        var mh$ = SCardGetTransmitCount$MH();
        try {
            return (int)mh$.invokeExact(hCard, pcTransmitCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardControl$MH() {
        return RuntimeHelper.requireNonNull(constants$868.SCardControl$MH,"SCardControl");
    }
    /**
     * {@snippet :
     * LONG SCardControl(SCARDHANDLE hCard, DWORD dwControlCode, LPCVOID lpInBuffer, DWORD cbInBufferSize, LPVOID lpOutBuffer, DWORD cbOutBufferSize, LPDWORD lpBytesReturned);
     * }
     */
    public static int SCardControl(long hCard, int dwControlCode, MemorySegment lpInBuffer, int cbInBufferSize, MemorySegment lpOutBuffer, int cbOutBufferSize, MemorySegment lpBytesReturned) {
        var mh$ = SCardControl$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwControlCode, lpInBuffer, cbInBufferSize, lpOutBuffer, cbOutBufferSize, lpBytesReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$868.SCardGetAttrib$MH,"SCardGetAttrib");
    }
    /**
     * {@snippet :
     * LONG SCardGetAttrib(SCARDHANDLE hCard, DWORD dwAttrId, LPBYTE pbAttr, LPDWORD pcbAttrLen);
     * }
     */
    public static int SCardGetAttrib(long hCard, int dwAttrId, MemorySegment pbAttr, MemorySegment pcbAttrLen) {
        var mh$ = SCardGetAttrib$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwAttrId, pbAttr, pcbAttrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$868.SCardSetAttrib$MH,"SCardSetAttrib");
    }
    /**
     * {@snippet :
     * LONG SCardSetAttrib(SCARDHANDLE hCard, DWORD dwAttrId, LPCBYTE pbAttr, DWORD cbAttrLen);
     * }
     */
    public static int SCardSetAttrib(long hCard, int dwAttrId, MemorySegment pbAttr, int cbAttrLen) {
        var mh$ = SCardSetAttrib$MH();
        try {
            return (int)mh$.invokeExact(hCard, dwAttrId, pbAttr, cbAttrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct * POPENCARD_SEARCH_CRITERIAA;
     * }
     */
    public static final OfAddress POPENCARD_SEARCH_CRITERIAA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARD_SEARCH_CRITERIAA;
     * }
     */
    public static final OfAddress LPOPENCARD_SEARCH_CRITERIAA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * POPENCARD_SEARCH_CRITERIAW;
     * }
     */
    public static final OfAddress POPENCARD_SEARCH_CRITERIAW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARD_SEARCH_CRITERIAW;
     * }
     */
    public static final OfAddress LPOPENCARD_SEARCH_CRITERIAW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * POPENCARD_SEARCH_CRITERIA;
     * }
     */
    public static final OfAddress POPENCARD_SEARCH_CRITERIA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARD_SEARCH_CRITERIA;
     * }
     */
    public static final OfAddress LPOPENCARD_SEARCH_CRITERIA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * POPENCARDNAME_EXA;
     * }
     */
    public static final OfAddress POPENCARDNAME_EXA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARDNAME_EXA;
     * }
     */
    public static final OfAddress LPOPENCARDNAME_EXA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * POPENCARDNAME_EXW;
     * }
     */
    public static final OfAddress POPENCARDNAME_EXW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARDNAME_EXW;
     * }
     */
    public static final OfAddress LPOPENCARDNAME_EXW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * POPENCARDNAME_EX;
     * }
     */
    public static final OfAddress POPENCARDNAME_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARDNAME_EX;
     * }
     */
    public static final OfAddress LPOPENCARDNAME_EX = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * enum .RSR_MATCH_TYPE_READER_AND_CONTAINER = 1;
     * }
     */
    public static int RSR_MATCH_TYPE_READER_AND_CONTAINER() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * enum .RSR_MATCH_TYPE_SERIAL_NUMBER = 2;
     * }
     */
    public static int RSR_MATCH_TYPE_SERIAL_NUMBER() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * enum .RSR_MATCH_TYPE_ALL_CARDS = 3;
     * }
     */
    public static int RSR_MATCH_TYPE_ALL_CARDS() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * typedef struct * PREADER_SEL_REQUEST;
     * }
     */
    public static final OfAddress PREADER_SEL_REQUEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PREADER_SEL_RESPONSE;
     * }
     */
    public static final OfAddress PREADER_SEL_RESPONSE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle SCardUIDlgSelectCardA$MH() {
        return RuntimeHelper.requireNonNull(constants$869.SCardUIDlgSelectCardA$MH,"SCardUIDlgSelectCardA");
    }
    /**
     * {@snippet :
     * LONG SCardUIDlgSelectCardA(LPOPENCARDNAME_EXA);
     * }
     */
    public static int SCardUIDlgSelectCardA(MemorySegment x0) {
        var mh$ = SCardUIDlgSelectCardA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardUIDlgSelectCardW$MH() {
        return RuntimeHelper.requireNonNull(constants$870.SCardUIDlgSelectCardW$MH,"SCardUIDlgSelectCardW");
    }
    /**
     * {@snippet :
     * LONG SCardUIDlgSelectCardW(LPOPENCARDNAME_EXW);
     * }
     */
    public static int SCardUIDlgSelectCardW(MemorySegment x0) {
        var mh$ = SCardUIDlgSelectCardW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct * POPENCARDNAMEA;
     * }
     */
    public static final OfAddress POPENCARDNAMEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARDNAMEA;
     * }
     */
    public static final OfAddress LPOPENCARDNAMEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * POPENCARDNAMEW;
     * }
     */
    public static final OfAddress POPENCARDNAMEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARDNAMEW;
     * }
     */
    public static final OfAddress LPOPENCARDNAMEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * POPENCARDNAME;
     * }
     */
    public static final OfAddress POPENCARDNAME = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * LPOPENCARDNAME;
     * }
     */
    public static final OfAddress LPOPENCARDNAME = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle GetOpenCardNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$870.GetOpenCardNameA$MH,"GetOpenCardNameA");
    }
    /**
     * {@snippet :
     * LONG GetOpenCardNameA(LPOPENCARDNAMEA);
     * }
     */
    public static int GetOpenCardNameA(MemorySegment x0) {
        var mh$ = GetOpenCardNameA$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOpenCardNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$870.GetOpenCardNameW$MH,"GetOpenCardNameW");
    }
    /**
     * {@snippet :
     * LONG GetOpenCardNameW(LPOPENCARDNAMEW);
     * }
     */
    public static int GetOpenCardNameW(MemorySegment x0) {
        var mh$ = GetOpenCardNameW$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardDlgExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$870.SCardDlgExtendedError$MH,"SCardDlgExtendedError");
    }
    /**
     * {@snippet :
     * LONG SCardDlgExtendedError();
     * }
     */
    public static int SCardDlgExtendedError() {
        var mh$ = SCardDlgExtendedError$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReadCacheA$MH() {
        return RuntimeHelper.requireNonNull(constants$870.SCardReadCacheA$MH,"SCardReadCacheA");
    }
    /**
     * {@snippet :
     * LONG SCardReadCacheA(SCARDCONTEXT hContext, UUID* CardIdentifier, DWORD FreshnessCounter, LPSTR LookupName, PBYTE Data, DWORD* DataLen);
     * }
     */
    public static int SCardReadCacheA(long hContext, MemorySegment CardIdentifier, int FreshnessCounter, MemorySegment LookupName, MemorySegment Data, MemorySegment DataLen) {
        var mh$ = SCardReadCacheA$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReadCacheW$MH() {
        return RuntimeHelper.requireNonNull(constants$870.SCardReadCacheW$MH,"SCardReadCacheW");
    }
    /**
     * {@snippet :
     * LONG SCardReadCacheW(SCARDCONTEXT hContext, UUID* CardIdentifier, DWORD FreshnessCounter, LPWSTR LookupName, PBYTE Data, DWORD* DataLen);
     * }
     */
    public static int SCardReadCacheW(long hContext, MemorySegment CardIdentifier, int FreshnessCounter, MemorySegment LookupName, MemorySegment Data, MemorySegment DataLen) {
        var mh$ = SCardReadCacheW$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardWriteCacheA$MH() {
        return RuntimeHelper.requireNonNull(constants$871.SCardWriteCacheA$MH,"SCardWriteCacheA");
    }
    /**
     * {@snippet :
     * LONG SCardWriteCacheA(SCARDCONTEXT hContext, UUID* CardIdentifier, DWORD FreshnessCounter, LPSTR LookupName, PBYTE Data, DWORD DataLen);
     * }
     */
    public static int SCardWriteCacheA(long hContext, MemorySegment CardIdentifier, int FreshnessCounter, MemorySegment LookupName, MemorySegment Data, int DataLen) {
        var mh$ = SCardWriteCacheA$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardWriteCacheW$MH() {
        return RuntimeHelper.requireNonNull(constants$871.SCardWriteCacheW$MH,"SCardWriteCacheW");
    }
    /**
     * {@snippet :
     * LONG SCardWriteCacheW(SCARDCONTEXT hContext, UUID* CardIdentifier, DWORD FreshnessCounter, LPWSTR LookupName, PBYTE Data, DWORD DataLen);
     * }
     */
    public static int SCardWriteCacheW(long hContext, MemorySegment CardIdentifier, int FreshnessCounter, MemorySegment LookupName, MemorySegment Data, int DataLen) {
        var mh$ = SCardWriteCacheW$MH();
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier, FreshnessCounter, LookupName, Data, DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$871.SCardGetReaderIconA$MH,"SCardGetReaderIconA");
    }
    /**
     * {@snippet :
     * LONG SCardGetReaderIconA(SCARDCONTEXT hContext, LPCSTR szReaderName, LPBYTE pbIcon, LPDWORD pcbIcon);
     * }
     */
    public static int SCardGetReaderIconA(long hContext, MemorySegment szReaderName, MemorySegment pbIcon, MemorySegment pcbIcon) {
        var mh$ = SCardGetReaderIconA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pbIcon, pcbIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$871.SCardGetReaderIconW$MH,"SCardGetReaderIconW");
    }
    /**
     * {@snippet :
     * LONG SCardGetReaderIconW(SCARDCONTEXT hContext, LPCWSTR szReaderName, LPBYTE pbIcon, LPDWORD pcbIcon);
     * }
     */
    public static int SCardGetReaderIconW(long hContext, MemorySegment szReaderName, MemorySegment pbIcon, MemorySegment pcbIcon) {
        var mh$ = SCardGetReaderIconW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pbIcon, pcbIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetDeviceTypeIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$871.SCardGetDeviceTypeIdA$MH,"SCardGetDeviceTypeIdA");
    }
    /**
     * {@snippet :
     * LONG SCardGetDeviceTypeIdA(SCARDCONTEXT hContext, LPCSTR szReaderName, LPDWORD pdwDeviceTypeId);
     * }
     */
    public static int SCardGetDeviceTypeIdA(long hContext, MemorySegment szReaderName, MemorySegment pdwDeviceTypeId) {
        var mh$ = SCardGetDeviceTypeIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pdwDeviceTypeId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetDeviceTypeIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$871.SCardGetDeviceTypeIdW$MH,"SCardGetDeviceTypeIdW");
    }
    /**
     * {@snippet :
     * LONG SCardGetDeviceTypeIdW(SCARDCONTEXT hContext, LPCWSTR szReaderName, LPDWORD pdwDeviceTypeId);
     * }
     */
    public static int SCardGetDeviceTypeIdW(long hContext, MemorySegment szReaderName, MemorySegment pdwDeviceTypeId) {
        var mh$ = SCardGetDeviceTypeIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, pdwDeviceTypeId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderDeviceInstanceIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$872.SCardGetReaderDeviceInstanceIdA$MH,"SCardGetReaderDeviceInstanceIdA");
    }
    /**
     * {@snippet :
     * LONG SCardGetReaderDeviceInstanceIdA(SCARDCONTEXT hContext, LPCSTR szReaderName, LPSTR szDeviceInstanceId, LPDWORD pcchDeviceInstanceId);
     * }
     */
    public static int SCardGetReaderDeviceInstanceIdA(long hContext, MemorySegment szReaderName, MemorySegment szDeviceInstanceId, MemorySegment pcchDeviceInstanceId) {
        var mh$ = SCardGetReaderDeviceInstanceIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceInstanceId, pcchDeviceInstanceId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetReaderDeviceInstanceIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$872.SCardGetReaderDeviceInstanceIdW$MH,"SCardGetReaderDeviceInstanceIdW");
    }
    /**
     * {@snippet :
     * LONG SCardGetReaderDeviceInstanceIdW(SCARDCONTEXT hContext, LPCWSTR szReaderName, LPWSTR szDeviceInstanceId, LPDWORD pcchDeviceInstanceId);
     * }
     */
    public static int SCardGetReaderDeviceInstanceIdW(long hContext, MemorySegment szReaderName, MemorySegment szDeviceInstanceId, MemorySegment pcchDeviceInstanceId) {
        var mh$ = SCardGetReaderDeviceInstanceIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szReaderName, szDeviceInstanceId, pcchDeviceInstanceId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersWithDeviceInstanceIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$872.SCardListReadersWithDeviceInstanceIdA$MH,"SCardListReadersWithDeviceInstanceIdA");
    }
    /**
     * {@snippet :
     * LONG SCardListReadersWithDeviceInstanceIdA(SCARDCONTEXT hContext, LPCSTR szDeviceInstanceId, LPSTR mszReaders, LPDWORD pcchReaders);
     * }
     */
    public static int SCardListReadersWithDeviceInstanceIdA(long hContext, MemorySegment szDeviceInstanceId, MemorySegment mszReaders, MemorySegment pcchReaders) {
        var mh$ = SCardListReadersWithDeviceInstanceIdA$MH();
        try {
            return (int)mh$.invokeExact(hContext, szDeviceInstanceId, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersWithDeviceInstanceIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$872.SCardListReadersWithDeviceInstanceIdW$MH,"SCardListReadersWithDeviceInstanceIdW");
    }
    /**
     * {@snippet :
     * LONG SCardListReadersWithDeviceInstanceIdW(SCARDCONTEXT hContext, LPCWSTR szDeviceInstanceId, LPWSTR mszReaders, LPDWORD pcchReaders);
     * }
     */
    public static int SCardListReadersWithDeviceInstanceIdW(long hContext, MemorySegment szDeviceInstanceId, MemorySegment mszReaders, MemorySegment pcchReaders) {
        var mh$ = SCardListReadersWithDeviceInstanceIdW$MH();
        try {
            return (int)mh$.invokeExact(hContext, szDeviceInstanceId, mszReaders, pcchReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAudit$MH() {
        return RuntimeHelper.requireNonNull(constants$872.SCardAudit$MH,"SCardAudit");
    }
    /**
     * {@snippet :
     * LONG SCardAudit(SCARDCONTEXT hContext, DWORD dwEvent);
     * }
     */
    public static int SCardAudit(long hContext, int dwEvent) {
        var mh$ = SCardAudit$MH();
        try {
            return (int)mh$.invokeExact(hContext, dwEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PSP* HPROPSHEETPAGE;
     * }
     */
    public static final OfAddress HPROPSHEETPAGE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct * PROPSHEETPAGE_RESOURCE;
     * }
     */
    public static final OfAddress PROPSHEETPAGE_RESOURCE = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA_V1* LPPROPSHEETPAGEA_V1;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEA_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA_V1* LPCPROPSHEETPAGEA_V1;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEA_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA_V2* LPPROPSHEETPAGEA_V2;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEA_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA_V2* LPCPROPSHEETPAGEA_V2;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEA_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA_V3* LPPROPSHEETPAGEA_V3;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEA_V3 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA_V3* LPCPROPSHEETPAGEA_V3;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEA_V3 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA* LPPROPSHEETPAGEA_V4;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEA_V4 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA* LPCPROPSHEETPAGEA_V4;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEA_V4 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW_V1* LPPROPSHEETPAGEW_V1;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEW_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW_V1* LPCPROPSHEETPAGEW_V1;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEW_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW_V2* LPPROPSHEETPAGEW_V2;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEW_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW_V2* LPCPROPSHEETPAGEW_V2;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEW_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW_V3* LPPROPSHEETPAGEW_V3;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEW_V3 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW_V3* LPCPROPSHEETPAGEW_V3;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEW_V3 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW* LPPROPSHEETPAGEW_V4;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEW_V4 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW* LPCPROPSHEETPAGEW_V4;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEW_V4 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA* LPPROPSHEETPAGEA_LATEST;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEA_LATEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW* LPPROPSHEETPAGEW_LATEST;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEW_LATEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA* LPCPROPSHEETPAGEA_LATEST;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEA_LATEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW* LPCPROPSHEETPAGEW_LATEST;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEW_LATEST = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA* LPPROPSHEETPAGEA;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW* LPPROPSHEETPAGEW;
     * }
     */
    public static final OfAddress LPPROPSHEETPAGEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEA* LPCPROPSHEETPAGEA;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETPAGEW* LPCPROPSHEETPAGEW;
     * }
     */
    public static final OfAddress LPCPROPSHEETPAGEW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERA_V1* LPPROPSHEETHEADERA_V1;
     * }
     */
    public static final OfAddress LPPROPSHEETHEADERA_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERA_V1* LPCPROPSHEETHEADERA_V1;
     * }
     */
    public static final OfAddress LPCPROPSHEETHEADERA_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERA_V2* LPPROPSHEETHEADERA_V2;
     * }
     */
    public static final OfAddress LPPROPSHEETHEADERA_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERA_V2* LPCPROPSHEETHEADERA_V2;
     * }
     */
    public static final OfAddress LPCPROPSHEETHEADERA_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERW_V1* LPPROPSHEETHEADERW_V1;
     * }
     */
    public static final OfAddress LPPROPSHEETHEADERW_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERW_V1* LPCPROPSHEETHEADERW_V1;
     * }
     */
    public static final OfAddress LPCPROPSHEETHEADERW_V1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERW_V2* LPPROPSHEETHEADERW_V2;
     * }
     */
    public static final OfAddress LPPROPSHEETHEADERW_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERW_V2* LPCPROPSHEETHEADERW_V2;
     * }
     */
    public static final OfAddress LPCPROPSHEETHEADERW_V2 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERA_V2* LPPROPSHEETHEADERA;
     * }
     */
    public static final OfAddress LPPROPSHEETHEADERA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERW_V2* LPPROPSHEETHEADERW;
     * }
     */
    public static final OfAddress LPPROPSHEETHEADERW = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERA_V2* LPCPROPSHEETHEADERA;
     * }
     */
    public static final OfAddress LPCPROPSHEETHEADERA = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PROPSHEETHEADERW_V2* LPCPROPSHEETHEADERW;
     * }
     */
    public static final OfAddress LPCPROPSHEETHEADERW = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CreatePropertySheetPageA$MH() {
        return RuntimeHelper.requireNonNull(constants$873.CreatePropertySheetPageA$MH,"CreatePropertySheetPageA");
    }
    /**
     * {@snippet :
     * HPROPSHEETPAGE CreatePropertySheetPageA(LPCPROPSHEETPAGEA constPropSheetPagePointer);
     * }
     */
    public static MemorySegment CreatePropertySheetPageA(MemorySegment constPropSheetPagePointer) {
        var mh$ = CreatePropertySheetPageA$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(constPropSheetPagePointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreatePropertySheetPageW$MH() {
        return RuntimeHelper.requireNonNull(constants$874.CreatePropertySheetPageW$MH,"CreatePropertySheetPageW");
    }
    /**
     * {@snippet :
     * HPROPSHEETPAGE CreatePropertySheetPageW(LPCPROPSHEETPAGEW constPropSheetPagePointer);
     * }
     */
    public static MemorySegment CreatePropertySheetPageW(MemorySegment constPropSheetPagePointer) {
        var mh$ = CreatePropertySheetPageW$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(constPropSheetPagePointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyPropertySheetPage$MH() {
        return RuntimeHelper.requireNonNull(constants$874.DestroyPropertySheetPage$MH,"DestroyPropertySheetPage");
    }
    /**
     * {@snippet :
     * BOOL DestroyPropertySheetPage(HPROPSHEETPAGE);
     * }
     */
    public static int DestroyPropertySheetPage(MemorySegment x0) {
        var mh$ = DestroyPropertySheetPage$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropertySheetA$MH() {
        return RuntimeHelper.requireNonNull(constants$874.PropertySheetA$MH,"PropertySheetA");
    }
    /**
     * {@snippet :
     * INT_PTR PropertySheetA(LPCPROPSHEETHEADERA);
     * }
     */
    public static long PropertySheetA(MemorySegment x0) {
        var mh$ = PropertySheetA$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropertySheetW$MH() {
        return RuntimeHelper.requireNonNull(constants$874.PropertySheetW$MH,"PropertySheetW");
    }
    /**
     * {@snippet :
     * INT_PTR PropertySheetW(LPCPROPSHEETHEADERW);
     * }
     */
    public static long PropertySheetW(MemorySegment x0) {
        var mh$ = PropertySheetW$MH();
        try {
            return (long)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef struct _PSHNOTIFY* LPPSHNOTIFY;
     * }
     */
    public static final OfAddress LPPSHNOTIFY = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_1A* PPRINTER_INFO_1A;
     * }
     */
    public static final OfAddress PPRINTER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_1A* LPPRINTER_INFO_1A;
     * }
     */
    public static final OfAddress LPPRINTER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_1W* PPRINTER_INFO_1W;
     * }
     */
    public static final OfAddress PPRINTER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_1W* LPPRINTER_INFO_1W;
     * }
     */
    public static final OfAddress LPPRINTER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_1A* PPRINTER_INFO_1;
     * }
     */
    public static final OfAddress PPRINTER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_1A* LPPRINTER_INFO_1;
     * }
     */
    public static final OfAddress LPPRINTER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_2A* PPRINTER_INFO_2A;
     * }
     */
    public static final OfAddress PPRINTER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_2A* LPPRINTER_INFO_2A;
     * }
     */
    public static final OfAddress LPPRINTER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_2W* PPRINTER_INFO_2W;
     * }
     */
    public static final OfAddress PPRINTER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef struct _PRINTER_INFO_2W* LPPRINTER_INFO_2W;
     * }
     */
    public static final OfAddress LPPRINTER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
}


