// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$238 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$238() {}
    static final FunctionDescriptor QueryUnbiasedInterruptTime$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle QueryUnbiasedInterruptTime$MH = RuntimeHelper.downcallHandle(
        "QueryUnbiasedInterruptTime",
        constants$238.QueryUnbiasedInterruptTime$FUNC
    );
    static final FunctionDescriptor QueryAuxiliaryCounterFrequency$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle QueryAuxiliaryCounterFrequency$MH = RuntimeHelper.downcallHandle(
        "QueryAuxiliaryCounterFrequency",
        constants$238.QueryAuxiliaryCounterFrequency$FUNC
    );
    static final FunctionDescriptor ConvertAuxiliaryCounterToPerformanceCounter$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ConvertAuxiliaryCounterToPerformanceCounter$MH = RuntimeHelper.downcallHandle(
        "ConvertAuxiliaryCounterToPerformanceCounter",
        constants$238.ConvertAuxiliaryCounterToPerformanceCounter$FUNC
    );
    static final FunctionDescriptor ConvertPerformanceCounterToAuxiliaryCounter$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ConvertPerformanceCounterToAuxiliaryCounter$MH = RuntimeHelper.downcallHandle(
        "ConvertPerformanceCounterToAuxiliaryCounter",
        constants$238.ConvertPerformanceCounterToAuxiliaryCounter$FUNC
    );
    static final FunctionDescriptor PFIBER_START_ROUTINE$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor PFIBER_START_ROUTINE_UP$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFIBER_START_ROUTINE_UP$MH = RuntimeHelper.upcallHandle(PFIBER_START_ROUTINE.class, "apply", constants$238.PFIBER_START_ROUTINE_UP$FUNC);
    static final FunctionDescriptor PFIBER_START_ROUTINE_DOWN$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFIBER_START_ROUTINE_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$238.PFIBER_START_ROUTINE_DOWN$FUNC
    );
}


