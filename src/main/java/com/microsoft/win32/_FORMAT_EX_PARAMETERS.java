// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _FORMAT_EX_PARAMETERS {
 *     MEDIA_TYPE MediaType;
 *     DWORD StartCylinderNumber;
 *     DWORD EndCylinderNumber;
 *     DWORD StartHeadNumber;
 *     DWORD EndHeadNumber;
 *     WORD FormatGapLength;
 *     WORD SectorsPerTrack;
 *     WORD SectorNumber[1];
 * };
 * }
 */
public class _FORMAT_EX_PARAMETERS {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("MediaType"),
        Constants$root.C_LONG$LAYOUT.withName("StartCylinderNumber"),
        Constants$root.C_LONG$LAYOUT.withName("EndCylinderNumber"),
        Constants$root.C_LONG$LAYOUT.withName("StartHeadNumber"),
        Constants$root.C_LONG$LAYOUT.withName("EndHeadNumber"),
        Constants$root.C_SHORT$LAYOUT.withName("FormatGapLength"),
        Constants$root.C_SHORT$LAYOUT.withName("SectorsPerTrack"),
        MemoryLayout.sequenceLayout(1, Constants$root.C_SHORT$LAYOUT).withName("SectorNumber"),
        MemoryLayout.paddingLayout(16)
    ).withName("_FORMAT_EX_PARAMETERS");
    public static MemoryLayout $LAYOUT() {
        return _FORMAT_EX_PARAMETERS.$struct$LAYOUT;
    }
    static final VarHandle MediaType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("MediaType"));
    public static VarHandle MediaType$VH() {
        return _FORMAT_EX_PARAMETERS.MediaType$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * MEDIA_TYPE MediaType;
     * }
     */
    public static int MediaType$get(MemorySegment seg) {
        return (int)_FORMAT_EX_PARAMETERS.MediaType$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * MEDIA_TYPE MediaType;
     * }
     */
    public static void MediaType$set(MemorySegment seg, int x) {
        _FORMAT_EX_PARAMETERS.MediaType$VH.set(seg, x);
    }
    public static int MediaType$get(MemorySegment seg, long index) {
        return (int)_FORMAT_EX_PARAMETERS.MediaType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void MediaType$set(MemorySegment seg, long index, int x) {
        _FORMAT_EX_PARAMETERS.MediaType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle StartCylinderNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("StartCylinderNumber"));
    public static VarHandle StartCylinderNumber$VH() {
        return _FORMAT_EX_PARAMETERS.StartCylinderNumber$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD StartCylinderNumber;
     * }
     */
    public static int StartCylinderNumber$get(MemorySegment seg) {
        return (int)_FORMAT_EX_PARAMETERS.StartCylinderNumber$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD StartCylinderNumber;
     * }
     */
    public static void StartCylinderNumber$set(MemorySegment seg, int x) {
        _FORMAT_EX_PARAMETERS.StartCylinderNumber$VH.set(seg, x);
    }
    public static int StartCylinderNumber$get(MemorySegment seg, long index) {
        return (int)_FORMAT_EX_PARAMETERS.StartCylinderNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void StartCylinderNumber$set(MemorySegment seg, long index, int x) {
        _FORMAT_EX_PARAMETERS.StartCylinderNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle EndCylinderNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("EndCylinderNumber"));
    public static VarHandle EndCylinderNumber$VH() {
        return _FORMAT_EX_PARAMETERS.EndCylinderNumber$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD EndCylinderNumber;
     * }
     */
    public static int EndCylinderNumber$get(MemorySegment seg) {
        return (int)_FORMAT_EX_PARAMETERS.EndCylinderNumber$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD EndCylinderNumber;
     * }
     */
    public static void EndCylinderNumber$set(MemorySegment seg, int x) {
        _FORMAT_EX_PARAMETERS.EndCylinderNumber$VH.set(seg, x);
    }
    public static int EndCylinderNumber$get(MemorySegment seg, long index) {
        return (int)_FORMAT_EX_PARAMETERS.EndCylinderNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void EndCylinderNumber$set(MemorySegment seg, long index, int x) {
        _FORMAT_EX_PARAMETERS.EndCylinderNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle StartHeadNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("StartHeadNumber"));
    public static VarHandle StartHeadNumber$VH() {
        return _FORMAT_EX_PARAMETERS.StartHeadNumber$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD StartHeadNumber;
     * }
     */
    public static int StartHeadNumber$get(MemorySegment seg) {
        return (int)_FORMAT_EX_PARAMETERS.StartHeadNumber$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD StartHeadNumber;
     * }
     */
    public static void StartHeadNumber$set(MemorySegment seg, int x) {
        _FORMAT_EX_PARAMETERS.StartHeadNumber$VH.set(seg, x);
    }
    public static int StartHeadNumber$get(MemorySegment seg, long index) {
        return (int)_FORMAT_EX_PARAMETERS.StartHeadNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void StartHeadNumber$set(MemorySegment seg, long index, int x) {
        _FORMAT_EX_PARAMETERS.StartHeadNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle EndHeadNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("EndHeadNumber"));
    public static VarHandle EndHeadNumber$VH() {
        return _FORMAT_EX_PARAMETERS.EndHeadNumber$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD EndHeadNumber;
     * }
     */
    public static int EndHeadNumber$get(MemorySegment seg) {
        return (int)_FORMAT_EX_PARAMETERS.EndHeadNumber$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD EndHeadNumber;
     * }
     */
    public static void EndHeadNumber$set(MemorySegment seg, int x) {
        _FORMAT_EX_PARAMETERS.EndHeadNumber$VH.set(seg, x);
    }
    public static int EndHeadNumber$get(MemorySegment seg, long index) {
        return (int)_FORMAT_EX_PARAMETERS.EndHeadNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void EndHeadNumber$set(MemorySegment seg, long index, int x) {
        _FORMAT_EX_PARAMETERS.EndHeadNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle FormatGapLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("FormatGapLength"));
    public static VarHandle FormatGapLength$VH() {
        return _FORMAT_EX_PARAMETERS.FormatGapLength$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD FormatGapLength;
     * }
     */
    public static short FormatGapLength$get(MemorySegment seg) {
        return (short)_FORMAT_EX_PARAMETERS.FormatGapLength$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD FormatGapLength;
     * }
     */
    public static void FormatGapLength$set(MemorySegment seg, short x) {
        _FORMAT_EX_PARAMETERS.FormatGapLength$VH.set(seg, x);
    }
    public static short FormatGapLength$get(MemorySegment seg, long index) {
        return (short)_FORMAT_EX_PARAMETERS.FormatGapLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void FormatGapLength$set(MemorySegment seg, long index, short x) {
        _FORMAT_EX_PARAMETERS.FormatGapLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SectorsPerTrack$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("SectorsPerTrack"));
    public static VarHandle SectorsPerTrack$VH() {
        return _FORMAT_EX_PARAMETERS.SectorsPerTrack$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * WORD SectorsPerTrack;
     * }
     */
    public static short SectorsPerTrack$get(MemorySegment seg) {
        return (short)_FORMAT_EX_PARAMETERS.SectorsPerTrack$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * WORD SectorsPerTrack;
     * }
     */
    public static void SectorsPerTrack$set(MemorySegment seg, short x) {
        _FORMAT_EX_PARAMETERS.SectorsPerTrack$VH.set(seg, x);
    }
    public static short SectorsPerTrack$get(MemorySegment seg, long index) {
        return (short)_FORMAT_EX_PARAMETERS.SectorsPerTrack$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SectorsPerTrack$set(MemorySegment seg, long index, short x) {
        _FORMAT_EX_PARAMETERS.SectorsPerTrack$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment SectorNumber$slice(MemorySegment seg) {
        return seg.asSlice(24, 2);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


