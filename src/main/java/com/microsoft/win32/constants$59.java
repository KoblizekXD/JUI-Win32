// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$59 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$59() {}
    static final FunctionDescriptor LPENCLAVE_TARGET_FUNCTION$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final FunctionDescriptor LPENCLAVE_TARGET_FUNCTION_UP$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPENCLAVE_TARGET_FUNCTION_UP$MH = RuntimeHelper.upcallHandle(LPENCLAVE_TARGET_FUNCTION.class, "apply", constants$59.LPENCLAVE_TARGET_FUNCTION_UP$FUNC);
    static final FunctionDescriptor LPENCLAVE_TARGET_FUNCTION_DOWN$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPENCLAVE_TARGET_FUNCTION_DOWN$MH = RuntimeHelper.downcallHandle(
        constants$59.LPENCLAVE_TARGET_FUNCTION_DOWN$FUNC
    );
    static final StructLayout GUID_MAX_POWER_SAVINGS$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_MAX_POWER_SAVINGS$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_MAX_POWER_SAVINGS", constants$59.GUID_MAX_POWER_SAVINGS$LAYOUT);
    static final StructLayout GUID_MIN_POWER_SAVINGS$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_MIN_POWER_SAVINGS$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_MIN_POWER_SAVINGS", constants$59.GUID_MIN_POWER_SAVINGS$LAYOUT);
    static final StructLayout GUID_TYPICAL_POWER_SAVINGS$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_TYPICAL_POWER_SAVINGS$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_TYPICAL_POWER_SAVINGS", constants$59.GUID_TYPICAL_POWER_SAVINGS$LAYOUT);
    static final StructLayout NO_SUBGROUP_GUID$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment NO_SUBGROUP_GUID$SEGMENT = RuntimeHelper.lookupGlobalVariable("NO_SUBGROUP_GUID", constants$59.NO_SUBGROUP_GUID$LAYOUT);
}


