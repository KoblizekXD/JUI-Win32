// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CERT_CHAIN_ELEMENT {
 *     DWORD cbSize;
 *     PCCERT_CONTEXT pCertContext;
 *     CERT_TRUST_STATUS TrustStatus;
 *     PCERT_REVOCATION_INFO pRevocationInfo;
 *     PCERT_ENHKEY_USAGE pIssuanceUsage;
 *     PCERT_ENHKEY_USAGE pApplicationUsage;
 *     LPCWSTR pwszExtendedErrorInfo;
 * };
 * }
 */
public class _CERT_CHAIN_ELEMENT {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("cbSize"),
        MemoryLayout.paddingLayout(32),
        Constants$root.C_POINTER$LAYOUT.withName("pCertContext"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("dwErrorStatus"),
            Constants$root.C_LONG$LAYOUT.withName("dwInfoStatus")
        ).withName("TrustStatus"),
        Constants$root.C_POINTER$LAYOUT.withName("pRevocationInfo"),
        Constants$root.C_POINTER$LAYOUT.withName("pIssuanceUsage"),
        Constants$root.C_POINTER$LAYOUT.withName("pApplicationUsage"),
        Constants$root.C_POINTER$LAYOUT.withName("pwszExtendedErrorInfo")
    ).withName("_CERT_CHAIN_ELEMENT");
    public static MemoryLayout $LAYOUT() {
        return _CERT_CHAIN_ELEMENT.$struct$LAYOUT;
    }
    static final VarHandle cbSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbSize"));
    public static VarHandle cbSize$VH() {
        return _CERT_CHAIN_ELEMENT.cbSize$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static int cbSize$get(MemorySegment seg) {
        return (int)_CERT_CHAIN_ELEMENT.cbSize$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbSize;
     * }
     */
    public static void cbSize$set(MemorySegment seg, int x) {
        _CERT_CHAIN_ELEMENT.cbSize$VH.set(seg, x);
    }
    public static int cbSize$get(MemorySegment seg, long index) {
        return (int)_CERT_CHAIN_ELEMENT.cbSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbSize$set(MemorySegment seg, long index, int x) {
        _CERT_CHAIN_ELEMENT.cbSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pCertContext$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pCertContext"));
    public static VarHandle pCertContext$VH() {
        return _CERT_CHAIN_ELEMENT.pCertContext$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCCERT_CONTEXT pCertContext;
     * }
     */
    public static MemorySegment pCertContext$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pCertContext$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCCERT_CONTEXT pCertContext;
     * }
     */
    public static void pCertContext$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pCertContext$VH.set(seg, x);
    }
    public static MemorySegment pCertContext$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pCertContext$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pCertContext$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pCertContext$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment TrustStatus$slice(MemorySegment seg) {
        return seg.asSlice(16, 8);
    }
    static final VarHandle pRevocationInfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pRevocationInfo"));
    public static VarHandle pRevocationInfo$VH() {
        return _CERT_CHAIN_ELEMENT.pRevocationInfo$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_REVOCATION_INFO pRevocationInfo;
     * }
     */
    public static MemorySegment pRevocationInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pRevocationInfo$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_REVOCATION_INFO pRevocationInfo;
     * }
     */
    public static void pRevocationInfo$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pRevocationInfo$VH.set(seg, x);
    }
    public static MemorySegment pRevocationInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pRevocationInfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pRevocationInfo$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pRevocationInfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pIssuanceUsage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pIssuanceUsage"));
    public static VarHandle pIssuanceUsage$VH() {
        return _CERT_CHAIN_ELEMENT.pIssuanceUsage$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_ENHKEY_USAGE pIssuanceUsage;
     * }
     */
    public static MemorySegment pIssuanceUsage$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pIssuanceUsage$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_ENHKEY_USAGE pIssuanceUsage;
     * }
     */
    public static void pIssuanceUsage$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pIssuanceUsage$VH.set(seg, x);
    }
    public static MemorySegment pIssuanceUsage$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pIssuanceUsage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pIssuanceUsage$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pIssuanceUsage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pApplicationUsage$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pApplicationUsage"));
    public static VarHandle pApplicationUsage$VH() {
        return _CERT_CHAIN_ELEMENT.pApplicationUsage$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_ENHKEY_USAGE pApplicationUsage;
     * }
     */
    public static MemorySegment pApplicationUsage$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pApplicationUsage$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_ENHKEY_USAGE pApplicationUsage;
     * }
     */
    public static void pApplicationUsage$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pApplicationUsage$VH.set(seg, x);
    }
    public static MemorySegment pApplicationUsage$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pApplicationUsage$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pApplicationUsage$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pApplicationUsage$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszExtendedErrorInfo$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pwszExtendedErrorInfo"));
    public static VarHandle pwszExtendedErrorInfo$VH() {
        return _CERT_CHAIN_ELEMENT.pwszExtendedErrorInfo$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPCWSTR pwszExtendedErrorInfo;
     * }
     */
    public static MemorySegment pwszExtendedErrorInfo$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pwszExtendedErrorInfo$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPCWSTR pwszExtendedErrorInfo;
     * }
     */
    public static void pwszExtendedErrorInfo$set(MemorySegment seg, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pwszExtendedErrorInfo$VH.set(seg, x);
    }
    public static MemorySegment pwszExtendedErrorInfo$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_CHAIN_ELEMENT.pwszExtendedErrorInfo$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszExtendedErrorInfo$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_CHAIN_ELEMENT.pwszExtendedErrorInfo$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


