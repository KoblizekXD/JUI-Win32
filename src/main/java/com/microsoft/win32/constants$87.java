// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$87 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$87() {}
    static final StructLayout GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_CLASS1_INITIAL_PERF$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_CLASS1_INITIAL_PERF", constants$87.GUID_PROCESSOR_CLASS1_INITIAL_PERF$LAYOUT);
    static final StructLayout GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_THREAD_SCHEDULING_POLICY", constants$87.GUID_PROCESSOR_THREAD_SCHEDULING_POLICY$LAYOUT);
    static final StructLayout GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY", constants$87.GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY$LAYOUT);
    static final StructLayout GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD", constants$87.GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD$LAYOUT);
    static final StructLayout GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD", constants$87.GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_UPPER_THRESHOLD$LAYOUT);
    static final StructLayout GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD", constants$87.GUID_PROCESSOR_SHORT_THREAD_ARCH_CLASS_LOWER_THRESHOLD$LAYOUT);
}


