// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CERT_ALT_NAME_ENTRY {
 *     DWORD dwAltNameChoice;
 *     union {
 *         PCERT_OTHER_NAME pOtherName;
 *         LPWSTR pwszRfc822Name;
 *         LPWSTR pwszDNSName;
 *         CERT_NAME_BLOB DirectoryName;
 *         LPWSTR pwszURL;
 *         CRYPT_DATA_BLOB IPAddress;
 *         LPSTR pszRegisteredID;
 *     };
 * };
 * }
 */
public class _CERT_ALT_NAME_ENTRY {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwAltNameChoice"),
        MemoryLayout.paddingLayout(32),
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("pOtherName"),
            Constants$root.C_POINTER$LAYOUT.withName("pwszRfc822Name"),
            Constants$root.C_POINTER$LAYOUT.withName("pwszDNSName"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("DirectoryName"),
            Constants$root.C_POINTER$LAYOUT.withName("pwszURL"),
            MemoryLayout.structLayout(
                Constants$root.C_LONG$LAYOUT.withName("cbData"),
                MemoryLayout.paddingLayout(32),
                Constants$root.C_POINTER$LAYOUT.withName("pbData")
            ).withName("IPAddress"),
            Constants$root.C_POINTER$LAYOUT.withName("pszRegisteredID")
        ).withName("$anon$0")
    ).withName("_CERT_ALT_NAME_ENTRY");
    public static MemoryLayout $LAYOUT() {
        return _CERT_ALT_NAME_ENTRY.$struct$LAYOUT;
    }
    static final VarHandle dwAltNameChoice$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAltNameChoice"));
    public static VarHandle dwAltNameChoice$VH() {
        return _CERT_ALT_NAME_ENTRY.dwAltNameChoice$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwAltNameChoice;
     * }
     */
    public static int dwAltNameChoice$get(MemorySegment seg) {
        return (int)_CERT_ALT_NAME_ENTRY.dwAltNameChoice$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwAltNameChoice;
     * }
     */
    public static void dwAltNameChoice$set(MemorySegment seg, int x) {
        _CERT_ALT_NAME_ENTRY.dwAltNameChoice$VH.set(seg, x);
    }
    public static int dwAltNameChoice$get(MemorySegment seg, long index) {
        return (int)_CERT_ALT_NAME_ENTRY.dwAltNameChoice$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAltNameChoice$set(MemorySegment seg, long index, int x) {
        _CERT_ALT_NAME_ENTRY.dwAltNameChoice$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pOtherName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pOtherName"));
    public static VarHandle pOtherName$VH() {
        return _CERT_ALT_NAME_ENTRY.pOtherName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * PCERT_OTHER_NAME pOtherName;
     * }
     */
    public static MemorySegment pOtherName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pOtherName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * PCERT_OTHER_NAME pOtherName;
     * }
     */
    public static void pOtherName$set(MemorySegment seg, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pOtherName$VH.set(seg, x);
    }
    public static MemorySegment pOtherName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pOtherName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pOtherName$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pOtherName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszRfc822Name$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pwszRfc822Name"));
    public static VarHandle pwszRfc822Name$VH() {
        return _CERT_ALT_NAME_ENTRY.pwszRfc822Name$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszRfc822Name;
     * }
     */
    public static MemorySegment pwszRfc822Name$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pwszRfc822Name$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszRfc822Name;
     * }
     */
    public static void pwszRfc822Name$set(MemorySegment seg, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pwszRfc822Name$VH.set(seg, x);
    }
    public static MemorySegment pwszRfc822Name$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pwszRfc822Name$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszRfc822Name$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pwszRfc822Name$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszDNSName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pwszDNSName"));
    public static VarHandle pwszDNSName$VH() {
        return _CERT_ALT_NAME_ENTRY.pwszDNSName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszDNSName;
     * }
     */
    public static MemorySegment pwszDNSName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pwszDNSName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszDNSName;
     * }
     */
    public static void pwszDNSName$set(MemorySegment seg, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pwszDNSName$VH.set(seg, x);
    }
    public static MemorySegment pwszDNSName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pwszDNSName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszDNSName$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pwszDNSName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment DirectoryName$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    static final VarHandle pwszURL$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pwszURL"));
    public static VarHandle pwszURL$VH() {
        return _CERT_ALT_NAME_ENTRY.pwszURL$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszURL;
     * }
     */
    public static MemorySegment pwszURL$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pwszURL$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszURL;
     * }
     */
    public static void pwszURL$set(MemorySegment seg, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pwszURL$VH.set(seg, x);
    }
    public static MemorySegment pwszURL$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pwszURL$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszURL$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pwszURL$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment IPAddress$slice(MemorySegment seg) {
        return seg.asSlice(8, 16);
    }
    static final VarHandle pszRegisteredID$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("$anon$0"), MemoryLayout.PathElement.groupElement("pszRegisteredID"));
    public static VarHandle pszRegisteredID$VH() {
        return _CERT_ALT_NAME_ENTRY.pszRegisteredID$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPSTR pszRegisteredID;
     * }
     */
    public static MemorySegment pszRegisteredID$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pszRegisteredID$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPSTR pszRegisteredID;
     * }
     */
    public static void pszRegisteredID$set(MemorySegment seg, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pszRegisteredID$VH.set(seg, x);
    }
    public static MemorySegment pszRegisteredID$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CERT_ALT_NAME_ENTRY.pszRegisteredID$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pszRegisteredID$set(MemorySegment seg, long index, MemorySegment x) {
        _CERT_ALT_NAME_ENTRY.pszRegisteredID$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


