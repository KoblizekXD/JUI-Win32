// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$971 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$971() {}
    static final StructLayout CLSID_StaticMetafile$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CLSID_StaticMetafile$SEGMENT = RuntimeHelper.lookupGlobalVariable("CLSID_StaticMetafile", constants$971.CLSID_StaticMetafile$LAYOUT);
    static final StructLayout CLSID_StaticDib$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CLSID_StaticDib$SEGMENT = RuntimeHelper.lookupGlobalVariable("CLSID_StaticDib", constants$971.CLSID_StaticDib$LAYOUT);
    static final StructLayout CID_CDfsVolume$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CID_CDfsVolume$SEGMENT = RuntimeHelper.lookupGlobalVariable("CID_CDfsVolume", constants$971.CID_CDfsVolume$LAYOUT);
    static final StructLayout CLSID_DCOMAccessControl$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CLSID_DCOMAccessControl$SEGMENT = RuntimeHelper.lookupGlobalVariable("CLSID_DCOMAccessControl", constants$971.CLSID_DCOMAccessControl$LAYOUT);
    static final StructLayout CLSID_GlobalOptions$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CLSID_GlobalOptions$SEGMENT = RuntimeHelper.lookupGlobalVariable("CLSID_GlobalOptions", constants$971.CLSID_GlobalOptions$LAYOUT);
    static final StructLayout CLSID_StdGlobalInterfaceTable$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment CLSID_StdGlobalInterfaceTable$SEGMENT = RuntimeHelper.lookupGlobalVariable("CLSID_StdGlobalInterfaceTable", constants$971.CLSID_StdGlobalInterfaceTable$LAYOUT);
}


