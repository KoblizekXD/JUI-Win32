// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$60 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$60() {}
    static final StructLayout ALL_POWERSCHEMES_GUID$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment ALL_POWERSCHEMES_GUID$SEGMENT = RuntimeHelper.lookupGlobalVariable("ALL_POWERSCHEMES_GUID", constants$60.ALL_POWERSCHEMES_GUID$LAYOUT);
    static final StructLayout GUID_POWERSCHEME_PERSONALITY$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_POWERSCHEME_PERSONALITY$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_POWERSCHEME_PERSONALITY", constants$60.GUID_POWERSCHEME_PERSONALITY$LAYOUT);
    static final StructLayout GUID_ACTIVE_POWERSCHEME$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_ACTIVE_POWERSCHEME$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_ACTIVE_POWERSCHEME", constants$60.GUID_ACTIVE_POWERSCHEME$LAYOUT);
    static final StructLayout GUID_IDLE_RESILIENCY_SUBGROUP$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_IDLE_RESILIENCY_SUBGROUP$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_IDLE_RESILIENCY_SUBGROUP", constants$60.GUID_IDLE_RESILIENCY_SUBGROUP$LAYOUT);
    static final StructLayout GUID_IDLE_RESILIENCY_PERIOD$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_IDLE_RESILIENCY_PERIOD$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_IDLE_RESILIENCY_PERIOD", constants$60.GUID_IDLE_RESILIENCY_PERIOD$LAYOUT);
    static final StructLayout GUID_DEEP_SLEEP_ENABLED$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("Data1"),
        Constants$root.C_SHORT$LAYOUT.withName("Data2"),
        Constants$root.C_SHORT$LAYOUT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DEEP_SLEEP_ENABLED$SEGMENT = RuntimeHelper.lookupGlobalVariable("GUID_DEEP_SLEEP_ENABLED", constants$60.GUID_DEEP_SLEEP_ENABLED$LAYOUT);
}


