// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$413 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$413() {}
    static final FunctionDescriptor PostThreadMessageA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PostThreadMessageA$MH = RuntimeHelper.downcallHandle(
        "PostThreadMessageA",
        constants$413.PostThreadMessageA$FUNC
    );
    static final FunctionDescriptor PostThreadMessageW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle PostThreadMessageW$MH = RuntimeHelper.downcallHandle(
        "PostThreadMessageW",
        constants$413.PostThreadMessageW$FUNC
    );
    static final FunctionDescriptor AttachThreadInput$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle AttachThreadInput$MH = RuntimeHelper.downcallHandle(
        "AttachThreadInput",
        constants$413.AttachThreadInput$FUNC
    );
    static final FunctionDescriptor ReplyMessage$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle ReplyMessage$MH = RuntimeHelper.downcallHandle(
        "ReplyMessage",
        constants$413.ReplyMessage$FUNC
    );
    static final FunctionDescriptor WaitMessage$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle WaitMessage$MH = RuntimeHelper.downcallHandle(
        "WaitMessage",
        constants$413.WaitMessage$FUNC
    );
    static final FunctionDescriptor WaitForInputIdle$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle WaitForInputIdle$MH = RuntimeHelper.downcallHandle(
        "WaitForInputIdle",
        constants$413.WaitForInputIdle$FUNC
    );
}


