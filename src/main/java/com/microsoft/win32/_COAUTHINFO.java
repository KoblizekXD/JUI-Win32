// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _COAUTHINFO {
 *     DWORD dwAuthnSvc;
 *     DWORD dwAuthzSvc;
 *     LPWSTR pwszServerPrincName;
 *     DWORD dwAuthnLevel;
 *     DWORD dwImpersonationLevel;
 *     COAUTHIDENTITY* pAuthIdentityData;
 *     DWORD dwCapabilities;
 * };
 * }
 */
public class _COAUTHINFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwAuthnSvc"),
        Constants$root.C_LONG$LAYOUT.withName("dwAuthzSvc"),
        Constants$root.C_POINTER$LAYOUT.withName("pwszServerPrincName"),
        Constants$root.C_LONG$LAYOUT.withName("dwAuthnLevel"),
        Constants$root.C_LONG$LAYOUT.withName("dwImpersonationLevel"),
        Constants$root.C_POINTER$LAYOUT.withName("pAuthIdentityData"),
        Constants$root.C_LONG$LAYOUT.withName("dwCapabilities"),
        MemoryLayout.paddingLayout(32)
    ).withName("_COAUTHINFO");
    public static MemoryLayout $LAYOUT() {
        return _COAUTHINFO.$struct$LAYOUT;
    }
    static final VarHandle dwAuthnSvc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAuthnSvc"));
    public static VarHandle dwAuthnSvc$VH() {
        return _COAUTHINFO.dwAuthnSvc$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwAuthnSvc;
     * }
     */
    public static int dwAuthnSvc$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwAuthnSvc$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwAuthnSvc;
     * }
     */
    public static void dwAuthnSvc$set(MemorySegment seg, int x) {
        _COAUTHINFO.dwAuthnSvc$VH.set(seg, x);
    }
    public static int dwAuthnSvc$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwAuthnSvc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAuthnSvc$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwAuthnSvc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwAuthzSvc$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAuthzSvc"));
    public static VarHandle dwAuthzSvc$VH() {
        return _COAUTHINFO.dwAuthzSvc$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwAuthzSvc;
     * }
     */
    public static int dwAuthzSvc$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwAuthzSvc$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwAuthzSvc;
     * }
     */
    public static void dwAuthzSvc$set(MemorySegment seg, int x) {
        _COAUTHINFO.dwAuthzSvc$VH.set(seg, x);
    }
    public static int dwAuthzSvc$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwAuthzSvc$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAuthzSvc$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwAuthzSvc$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pwszServerPrincName$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pwszServerPrincName"));
    public static VarHandle pwszServerPrincName$VH() {
        return _COAUTHINFO.pwszServerPrincName$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * LPWSTR pwszServerPrincName;
     * }
     */
    public static MemorySegment pwszServerPrincName$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_COAUTHINFO.pwszServerPrincName$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * LPWSTR pwszServerPrincName;
     * }
     */
    public static void pwszServerPrincName$set(MemorySegment seg, MemorySegment x) {
        _COAUTHINFO.pwszServerPrincName$VH.set(seg, x);
    }
    public static MemorySegment pwszServerPrincName$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_COAUTHINFO.pwszServerPrincName$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pwszServerPrincName$set(MemorySegment seg, long index, MemorySegment x) {
        _COAUTHINFO.pwszServerPrincName$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwAuthnLevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwAuthnLevel"));
    public static VarHandle dwAuthnLevel$VH() {
        return _COAUTHINFO.dwAuthnLevel$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwAuthnLevel;
     * }
     */
    public static int dwAuthnLevel$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwAuthnLevel$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwAuthnLevel;
     * }
     */
    public static void dwAuthnLevel$set(MemorySegment seg, int x) {
        _COAUTHINFO.dwAuthnLevel$VH.set(seg, x);
    }
    public static int dwAuthnLevel$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwAuthnLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwAuthnLevel$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwAuthnLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwImpersonationLevel$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwImpersonationLevel"));
    public static VarHandle dwImpersonationLevel$VH() {
        return _COAUTHINFO.dwImpersonationLevel$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwImpersonationLevel;
     * }
     */
    public static int dwImpersonationLevel$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwImpersonationLevel$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwImpersonationLevel;
     * }
     */
    public static void dwImpersonationLevel$set(MemorySegment seg, int x) {
        _COAUTHINFO.dwImpersonationLevel$VH.set(seg, x);
    }
    public static int dwImpersonationLevel$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwImpersonationLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwImpersonationLevel$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwImpersonationLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pAuthIdentityData$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pAuthIdentityData"));
    public static VarHandle pAuthIdentityData$VH() {
        return _COAUTHINFO.pAuthIdentityData$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * COAUTHIDENTITY* pAuthIdentityData;
     * }
     */
    public static MemorySegment pAuthIdentityData$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_COAUTHINFO.pAuthIdentityData$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * COAUTHIDENTITY* pAuthIdentityData;
     * }
     */
    public static void pAuthIdentityData$set(MemorySegment seg, MemorySegment x) {
        _COAUTHINFO.pAuthIdentityData$VH.set(seg, x);
    }
    public static MemorySegment pAuthIdentityData$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_COAUTHINFO.pAuthIdentityData$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pAuthIdentityData$set(MemorySegment seg, long index, MemorySegment x) {
        _COAUTHINFO.pAuthIdentityData$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwCapabilities$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwCapabilities"));
    public static VarHandle dwCapabilities$VH() {
        return _COAUTHINFO.dwCapabilities$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwCapabilities;
     * }
     */
    public static int dwCapabilities$get(MemorySegment seg) {
        return (int)_COAUTHINFO.dwCapabilities$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwCapabilities;
     * }
     */
    public static void dwCapabilities$set(MemorySegment seg, int x) {
        _COAUTHINFO.dwCapabilities$VH.set(seg, x);
    }
    public static int dwCapabilities$get(MemorySegment seg, long index) {
        return (int)_COAUTHINFO.dwCapabilities$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCapabilities$set(MemorySegment seg, long index, int x) {
        _COAUTHINFO.dwCapabilities$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


