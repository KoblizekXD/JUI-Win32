// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _CMS_KEY_INFO {
 *     DWORD dwVersion;
 *     ALG_ID Algid;
 *     BYTE* pbOID;
 *     DWORD cbOID;
 * };
 * }
 */
public class _CMS_KEY_INFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwVersion"),
        Constants$root.C_LONG$LAYOUT.withName("Algid"),
        Constants$root.C_POINTER$LAYOUT.withName("pbOID"),
        Constants$root.C_LONG$LAYOUT.withName("cbOID"),
        MemoryLayout.paddingLayout(32)
    ).withName("_CMS_KEY_INFO");
    public static MemoryLayout $LAYOUT() {
        return _CMS_KEY_INFO.$struct$LAYOUT;
    }
    static final VarHandle dwVersion$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwVersion"));
    public static VarHandle dwVersion$VH() {
        return _CMS_KEY_INFO.dwVersion$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD dwVersion;
     * }
     */
    public static int dwVersion$get(MemorySegment seg) {
        return (int)_CMS_KEY_INFO.dwVersion$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD dwVersion;
     * }
     */
    public static void dwVersion$set(MemorySegment seg, int x) {
        _CMS_KEY_INFO.dwVersion$VH.set(seg, x);
    }
    public static int dwVersion$get(MemorySegment seg, long index) {
        return (int)_CMS_KEY_INFO.dwVersion$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwVersion$set(MemorySegment seg, long index, int x) {
        _CMS_KEY_INFO.dwVersion$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Algid$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Algid"));
    public static VarHandle Algid$VH() {
        return _CMS_KEY_INFO.Algid$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * ALG_ID Algid;
     * }
     */
    public static int Algid$get(MemorySegment seg) {
        return (int)_CMS_KEY_INFO.Algid$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * ALG_ID Algid;
     * }
     */
    public static void Algid$set(MemorySegment seg, int x) {
        _CMS_KEY_INFO.Algid$VH.set(seg, x);
    }
    public static int Algid$get(MemorySegment seg, long index) {
        return (int)_CMS_KEY_INFO.Algid$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Algid$set(MemorySegment seg, long index, int x) {
        _CMS_KEY_INFO.Algid$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle pbOID$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("pbOID"));
    public static VarHandle pbOID$VH() {
        return _CMS_KEY_INFO.pbOID$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * BYTE* pbOID;
     * }
     */
    public static MemorySegment pbOID$get(MemorySegment seg) {
        return (java.lang.foreign.MemorySegment)_CMS_KEY_INFO.pbOID$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * BYTE* pbOID;
     * }
     */
    public static void pbOID$set(MemorySegment seg, MemorySegment x) {
        _CMS_KEY_INFO.pbOID$VH.set(seg, x);
    }
    public static MemorySegment pbOID$get(MemorySegment seg, long index) {
        return (java.lang.foreign.MemorySegment)_CMS_KEY_INFO.pbOID$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pbOID$set(MemorySegment seg, long index, MemorySegment x) {
        _CMS_KEY_INFO.pbOID$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle cbOID$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("cbOID"));
    public static VarHandle cbOID$VH() {
        return _CMS_KEY_INFO.cbOID$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD cbOID;
     * }
     */
    public static int cbOID$get(MemorySegment seg) {
        return (int)_CMS_KEY_INFO.cbOID$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD cbOID;
     * }
     */
    public static void cbOID$set(MemorySegment seg, int x) {
        _CMS_KEY_INFO.cbOID$VH.set(seg, x);
    }
    public static int cbOID$get(MemorySegment seg, long index) {
        return (int)_CMS_KEY_INFO.cbOID$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void cbOID$set(MemorySegment seg, long index, int x) {
        _CMS_KEY_INFO.cbOID$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


