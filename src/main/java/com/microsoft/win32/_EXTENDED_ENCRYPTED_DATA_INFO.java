// Generated by jextract

package com.microsoft.win32;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct _EXTENDED_ENCRYPTED_DATA_INFO {
 *     DWORD ExtendedCode;
 *     DWORD Length;
 *     DWORD Flags;
 *     DWORD Reserved;
 * };
 * }
 */
public class _EXTENDED_ENCRYPTED_DATA_INFO {

    static final StructLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("ExtendedCode"),
        Constants$root.C_LONG$LAYOUT.withName("Length"),
        Constants$root.C_LONG$LAYOUT.withName("Flags"),
        Constants$root.C_LONG$LAYOUT.withName("Reserved")
    ).withName("_EXTENDED_ENCRYPTED_DATA_INFO");
    public static MemoryLayout $LAYOUT() {
        return _EXTENDED_ENCRYPTED_DATA_INFO.$struct$LAYOUT;
    }
    static final VarHandle ExtendedCode$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("ExtendedCode"));
    public static VarHandle ExtendedCode$VH() {
        return _EXTENDED_ENCRYPTED_DATA_INFO.ExtendedCode$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD ExtendedCode;
     * }
     */
    public static int ExtendedCode$get(MemorySegment seg) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.ExtendedCode$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD ExtendedCode;
     * }
     */
    public static void ExtendedCode$set(MemorySegment seg, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.ExtendedCode$VH.set(seg, x);
    }
    public static int ExtendedCode$get(MemorySegment seg, long index) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.ExtendedCode$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void ExtendedCode$set(MemorySegment seg, long index, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.ExtendedCode$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Length$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Length"));
    public static VarHandle Length$VH() {
        return _EXTENDED_ENCRYPTED_DATA_INFO.Length$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Length;
     * }
     */
    public static int Length$get(MemorySegment seg) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.Length$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Length;
     * }
     */
    public static void Length$set(MemorySegment seg, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.Length$VH.set(seg, x);
    }
    public static int Length$get(MemorySegment seg, long index) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.Length$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Length$set(MemorySegment seg, long index, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.Length$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Flags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Flags"));
    public static VarHandle Flags$VH() {
        return _EXTENDED_ENCRYPTED_DATA_INFO.Flags$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static int Flags$get(MemorySegment seg) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.Flags$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Flags;
     * }
     */
    public static void Flags$set(MemorySegment seg, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.Flags$VH.set(seg, x);
    }
    public static int Flags$get(MemorySegment seg, long index) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.Flags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Flags$set(MemorySegment seg, long index, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.Flags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle Reserved$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("Reserved"));
    public static VarHandle Reserved$VH() {
        return _EXTENDED_ENCRYPTED_DATA_INFO.Reserved$VH;
    }
    /**
     * Getter for field:
     * {@snippet :
     * DWORD Reserved;
     * }
     */
    public static int Reserved$get(MemorySegment seg) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.Reserved$VH.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * DWORD Reserved;
     * }
     */
    public static void Reserved$set(MemorySegment seg, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.Reserved$VH.set(seg, x);
    }
    public static int Reserved$get(MemorySegment seg, long index) {
        return (int)_EXTENDED_ENCRYPTED_DATA_INFO.Reserved$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved$set(MemorySegment seg, long index, int x) {
        _EXTENDED_ENCRYPTED_DATA_INFO.Reserved$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, SegmentScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


